<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220215 15:43:28.941">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Employee" source="D:\timesheet\testsuites\NhanVien\employee.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220215 15:43:29.139" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', '59902': 'https://phuoc...</msg>
<status status="PASS" starttime="20220215 15:43:29.138" endtime="20220215 15:43:29.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>59902=/auth/salelogin</arg>
<arg>59903=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 15:43:29.139" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone14': '/auth/salelogin', '59902': '/auth/salelogin', '59903': '/auth/salelogin', 'fnb15': '/auth/salelogin'}</msg>
<status status="PASS" starttime="20220215 15:43:29.139" endtime="20220215 15:43:29.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>59902=https://kvpos.com:55002</arg>
<arg>59903=https://kvpos.com:55003</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220215 15:43:29.139" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone14': 'https://api-timesheet.kiotviet.vn', '59902': 'ht...</msg>
<status status="PASS" starttime="20220215 15:43:29.139" endtime="20220215 15:43:29.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>59902=https://kvpos.com:59932/api</arg>
<arg>59903=https://kvpos.com:59933/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220215 15:43:29.140" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://api-man.kiotviet.vn/api', '59902': 'https://kv...</msg>
<status status="PASS" starttime="20220215 15:43:29.139" endtime="20220215 15:43:29.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220215 15:43:29.140" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', '59902': '1', '59903': '1', 'fnb15': 'admin'}</msg>
<status status="PASS" starttime="20220215 15:43:29.140" endtime="20220215 15:43:29.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220215 15:43:29.140" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', '59902': '1', '59903': '1', 'fnb15': '123'}</msg>
<status status="PASS" starttime="20220215 15:43:29.140" endtime="20220215 15:43:29.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>59902=phuoc902</arg>
<arg>59903=phuoc903</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220215 15:43:29.141" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', '59902': 'phuoc902', '59903': 'phuoc903', 'fnb15': 'testfnbz15a'}</msg>
<status status="PASS" starttime="20220215 15:43:29.140" endtime="20220215 15:43:29.141"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220215 15:43:29.141" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 15:43:29.141" endtime="20220215 15:43:29.141"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220215 15:43:29.141" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220215 15:43:29.141" endtime="20220215 15:43:29.141"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220215 15:43:29.141" level="INFO">${retailer} = testz12</msg>
<status status="PASS" starttime="20220215 15:43:29.141" endtime="20220215 15:43:29.141"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220215 15:43:29.142" level="INFO">${url_saleLogin} = https://testz12.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 15:43:29.141" endtime="20220215 15:43:29.142"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 15:43:29.142" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 15:43:29.142" endtime="20220215 15:43:29.142"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220215 15:43:29.143" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 15:43:29.142" endtime="20220215 15:43:29.143"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220215 15:43:29.143" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 15:43:29.143" endtime="20220215 15:43:29.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.143" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 15:43:29.143" endtime="20220215 15:43:29.143"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.144" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220215 15:43:29.144" endtime="20220215 15:43:29.144"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.144" level="INFO">${retailer} = testz12</msg>
<status status="PASS" starttime="20220215 15:43:29.144" endtime="20220215 15:43:29.144"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.144" level="INFO">${url_saleLogin} = https://testz12.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 15:43:29.144" endtime="20220215 15:43:29.144"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.145" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 15:43:29.144" endtime="20220215 15:43:29.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.145" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 15:43:29.145" endtime="20220215 15:43:29.145"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.145" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 15:43:29.145" endtime="20220215 15:43:29.145"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 15:43:29.145" level="INFO">${header} = {'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220215 15:43:29.145" endtime="20220215 15:43:29.145"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220215 15:43:29.146" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123456'}</msg>
<status status="PASS" starttime="20220215 15:43:29.145" endtime="20220215 15:43:29.146"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.146" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz12.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 15:43:29.146" endtime="20220215 15:43:29.146"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:29.561" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123456"}, headers={'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:29.561" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz12.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:29.561" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:29.146" endtime="20220215 15:43:29.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.561" level="INFO">{'UserId': 234147, 'UserName': 'admin', 'SessionId': '6JtzczvoY10JZcz7fM65', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA', 'CurrentBranchId': 87401, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220215 15:43:29.561" endtime="20220215 15:43:29.561"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.583" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiX...</msg>
<status status="PASS" starttime="20220215 15:43:29.562" endtime="20220215 15:43:29.583"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:29.583" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:29.583" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:29.583" endtime="20220215 15:43:29.583"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.583" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSw...</msg>
<status status="PASS" starttime="20220215 15:43:29.583" endtime="20220215 15:43:29.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.584" endtime="20220215 15:43:29.584"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.584" endtime="20220215 15:43:29.584"></status>
</kw>
<msg timestamp="20220215 15:43:29.584" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSw...</msg>
<status status="PASS" starttime="20220215 15:43:29.562" endtime="20220215 15:43:29.584"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220215 15:43:29.584" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVz...</msg>
<status status="PASS" starttime="20220215 15:43:29.584" endtime="20220215 15:43:29.584"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.602" level="INFO">${result} = [87401]</msg>
<status status="PASS" starttime="20220215 15:43:29.585" endtime="20220215 15:43:29.602"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:29.602" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:29.602" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:29.602" endtime="20220215 15:43:29.602"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.602" level="INFO">${result} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.602" endtime="20220215 15:43:29.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.603" endtime="20220215 15:43:29.603"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.602" endtime="20220215 15:43:29.603"></status>
</kw>
<msg timestamp="20220215 15:43:29.603" level="INFO">${branchId} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.584" endtime="20220215 15:43:29.603"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220215 15:43:29.603" level="INFO">${branchId} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.603" endtime="20220215 15:43:29.603"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.603" level="INFO">${branchId} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.603" endtime="20220215 15:43:29.604"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.621" level="INFO">${result} = [234147]</msg>
<status status="PASS" starttime="20220215 15:43:29.604" endtime="20220215 15:43:29.621"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:29.621" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:29.621" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:29.621" endtime="20220215 15:43:29.621"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:29.621" level="INFO">${result} = 234147</msg>
<status status="PASS" starttime="20220215 15:43:29.621" endtime="20220215 15:43:29.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.622" endtime="20220215 15:43:29.622"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.622" endtime="20220215 15:43:29.622"></status>
</kw>
<msg timestamp="20220215 15:43:29.622" level="INFO">${user_login} = 234147</msg>
<status status="PASS" starttime="20220215 15:43:29.604" endtime="20220215 15:43:29.622"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.622" level="INFO">${user_login} = 234147</msg>
<status status="PASS" starttime="20220215 15:43:29.622" endtime="20220215 15:43:29.622"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 15:43:29.623" level="INFO">${header} = {'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 15:43:29.622" endtime="20220215 15:43:29.623"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220215 15:43:29.623" level="INFO">${headers_not_contenType} = {'retailer': 'testz12', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3M...</msg>
<status status="PASS" starttime="20220215 15:43:29.623" endtime="20220215 15:43:29.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.623" level="INFO">${header} = {'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 15:43:29.623" endtime="20220215 15:43:29.623"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.624" level="INFO">${headers_not_contenType} = {'retailer': 'testz12', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3M...</msg>
<status status="PASS" starttime="20220215 15:43:29.623" endtime="20220215 15:43:29.624"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.624" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz12', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 15:43:29.624" endtime="20220215 15:43:29.624"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.624" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man.kiotviet.vn/api, headers={'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 15:43:29.624" endtime="20220215 15:43:29.625"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220215 15:43:29.626" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220215 15:43:29.625" endtime="20220215 15:43:29.626"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220215 15:43:29.627" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220215 15:43:29.626" endtime="20220215 15:43:29.627"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220215 15:43:29.627" level="INFO">${random_str} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.627" endtime="20220215 15:43:29.627"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.627" endtime="20220215 15:43:29.627"></status>
</kw>
<msg timestamp="20220215 15:43:29.628" level="INFO">${random_str} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.627" endtime="20220215 15:43:29.628"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.628" level="INFO">${random_str} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.628" endtime="20220215 15:43:29.628"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220215 15:43:29.628" level="INFO">${random_number} = 62963274</msg>
<status status="PASS" starttime="20220215 15:43:29.628" endtime="20220215 15:43:29.628"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.628" endtime="20220215 15:43:29.628"></status>
</kw>
<msg timestamp="20220215 15:43:29.629" level="INFO">${random_number} = 62963274</msg>
<status status="PASS" starttime="20220215 15:43:29.628" endtime="20220215 15:43:29.629"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.629" level="INFO">${random_number} = 62963274</msg>
<status status="PASS" starttime="20220215 15:43:29.629" endtime="20220215 15:43:29.629"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.138" endtime="20220215 15:43:29.629"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create employee">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.630" level="INFO">${random_str} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.630" endtime="20220215 15:43:29.630"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.631" level="INFO">${list_format} = ['1235698', 'NV62963274', 'IBNZ', '87401', '87401']</msg>
<status status="PASS" starttime="20220215 15:43:29.630" endtime="20220215 15:43:29.631"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>100000</arg>
<arg>200</arg>
<arg>300</arg>
</arguments>
<assign>
<var>${list_salary}</var>
</assign>
<msg timestamp="20220215 15:43:29.631" level="INFO">${list_salary} = ['100000', '200', '300']</msg>
<status status="PASS" starttime="20220215 15:43:29.631" endtime="20220215 15:43:29.631"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:29.631" level="INFO">Length is 5</msg>
<msg timestamp="20220215 15:43:29.631" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 15:43:29.631" endtime="20220215 15:43:29.631"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.632" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:29.632" endtime="20220215 15:43:29.632"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.632" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:29.632" endtime="20220215 15:43:29.632"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.632" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:29.632" endtime="20220215 15:43:29.632"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.631" endtime="20220215 15:43:29.632"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.633" level="INFO">${value_temp} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:29.632" endtime="20220215 15:43:29.633"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.633" level="INFO">${value_temp} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:29.633" endtime="20220215 15:43:29.633"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.633" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:29.633" endtime="20220215 15:43:29.633"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.632" endtime="20220215 15:43:29.633"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.634" level="INFO">${value_temp} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.633" endtime="20220215 15:43:29.634"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.634" level="INFO">${value_temp} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:29.634" endtime="20220215 15:43:29.634"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.634" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:29.634" endtime="20220215 15:43:29.634"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.633" endtime="20220215 15:43:29.634"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.634" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.634" endtime="20220215 15:43:29.634"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.635" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.634" endtime="20220215 15:43:29.635"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.635" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:29.635" endtime="20220215 15:43:29.635"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.634" endtime="20220215 15:43:29.635"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.635" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.635" endtime="20220215 15:43:29.635"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.635" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:29.635" endtime="20220215 15:43:29.635"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.636" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:29.636" endtime="20220215 15:43:29.636"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.635" endtime="20220215 15:43:29.636"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.631" endtime="20220215 15:43:29.636"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.636" endtime="20220215 15:43:29.636"></status>
</kw>
<msg timestamp="20220215 15:43:29.636" level="INFO">${data} = {"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:29.631" endtime="20220215 15:43:29.636"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_set_salary}</arg>
<arg>${list_salary}</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:29.637" level="INFO">Length is 3</msg>
<msg timestamp="20220215 15:43:29.637" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220215 15:43:29.636" endtime="20220215 15:43:29.637"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.637" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220215 15:43:29.637" endtime="20220215 15:43:29.637"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.637" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220215 15:43:29.637" endtime="20220215 15:43:29.637"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.638" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":[D1],"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"valu...</msg>
<status status="PASS" starttime="20220215 15:43:29.637" endtime="20220215 15:43:29.638"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.637" endtime="20220215 15:43:29.638"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.638" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220215 15:43:29.638" endtime="20220215 15:43:29.638"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.638" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220215 15:43:29.638" endtime="20220215 15:43:29.638"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.638" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 15:43:29.638" endtime="20220215 15:43:29.639"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.638" endtime="20220215 15:43:29.639"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.639" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220215 15:43:29.639" endtime="20220215 15:43:29.639"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:29.639" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220215 15:43:29.639" endtime="20220215 15:43:29.639"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:29.639" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 15:43:29.639" endtime="20220215 15:43:29.639"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.639" endtime="20220215 15:43:29.639"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:29.637" endtime="20220215 15:43:29.639"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:29.639" endtime="20220215 15:43:29.640"></status>
</kw>
<msg timestamp="20220215 15:43:29.640" level="INFO">${data_set_salary} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 15:43:29.636" endtime="20220215 15:43:29.640"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 15:43:29.640" level="INFO">${data} = (None, '{"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:29.640" endtime="20220215 15:43:29.640"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data_set_salary}')</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<msg timestamp="20220215 15:43:29.640" level="INFO">${data_set_salary} = (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":...</msg>
<status status="PASS" starttime="20220215 15:43:29.640" endtime="20220215 15:43:29.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.640" level="INFO">(None, '{"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:29.640" endtime="20220215 15:43:29.641"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
<arg>payRate=${data_set_salary}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 15:43:29.641" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryV...</msg>
<status status="PASS" starttime="20220215 15:43:29.641" endtime="20220215 15:43:29.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 15:43:29.641" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}</msg>
<status status="PASS" starttime="20220215 15:43:29.641" endtime="20220215 15:43:29.641"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.185" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV62963274","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:30.185" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.185" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:29.642" endtime="20220215 15:43:30.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.185" level="INFO">{'result': {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, 'message': 'Tạo nhân viên thành công'}</msg>
<status status="PASS" starttime="20220215 15:43:30.185" endtime="20220215 15:43:30.185"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.185" endtime="20220215 15:43:30.186"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.186" endtime="20220215 15:43:30.186"></status>
</kw>
<msg timestamp="20220215 15:43:30.186" level="INFO">${resp} = {'result': {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220215 15:43:29.641" endtime="20220215 15:43:30.186"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.211" level="INFO">${result} = [80000000135805]</msg>
<status status="PASS" starttime="20220215 15:43:30.186" endtime="20220215 15:43:30.211"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.212" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.212" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.211" endtime="20220215 15:43:30.212"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.212" level="INFO">${result} = 80000000135805</msg>
<status status="PASS" starttime="20220215 15:43:30.212" endtime="20220215 15:43:30.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.212" endtime="20220215 15:43:30.213"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.212" endtime="20220215 15:43:30.213"></status>
</kw>
<msg timestamp="20220215 15:43:30.213" level="INFO">${id_employee} = 80000000135805</msg>
<status status="PASS" starttime="20220215 15:43:30.186" endtime="20220215 15:43:30.213"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.230" level="INFO">${result} = ['NV62963274']</msg>
<status status="PASS" starttime="20220215 15:43:30.213" endtime="20220215 15:43:30.230"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.230" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.230" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.230" endtime="20220215 15:43:30.230"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.230" level="INFO">${result} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.230" endtime="20220215 15:43:30.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.231" endtime="20220215 15:43:30.231"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.231" endtime="20220215 15:43:30.231"></status>
</kw>
<msg timestamp="20220215 15:43:30.231" level="INFO">${code_employee} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.213" endtime="20220215 15:43:30.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${code_employee}</arg>
<arg>${code_employee}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.231" level="INFO">${code_employee} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.231" endtime="20220215 15:43:30.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.232" level="INFO">${id_employee} = 80000000135805</msg>
<status status="PASS" starttime="20220215 15:43:30.232" endtime="20220215 15:43:30.232"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220215 15:43:30.232" level="INFO">${branchId} = 87401.0</msg>
<status status="PASS" starttime="20220215 15:43:30.232" endtime="20220215 15:43:30.232"></status>
</kw>
<kw name="Verify Input And Output Employee">
<arguments>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
</arguments>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.323" level="INFO">Get Request using : alias=session, uri=/employees/80000000135805, headers=None json=None</msg>
<msg timestamp="20220215 15:43:30.323" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.323" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.233" endtime="20220215 15:43:30.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.324" level="INFO">{'result': {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:30.323" endtime="20220215 15:43:30.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:30.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.324" endtime="20220215 15:43:30.324"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.324" endtime="20220215 15:43:30.324"></status>
</kw>
<msg timestamp="20220215 15:43:30.325" level="INFO">${resp} = {'result': {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220215 15:43:30.232" endtime="20220215 15:43:30.325"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.342" level="INFO">${result} = ['NV62963274']</msg>
<status status="PASS" starttime="20220215 15:43:30.325" endtime="20220215 15:43:30.342"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.343" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.343" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.343" endtime="20220215 15:43:30.343"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.343" level="INFO">${result} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.343" endtime="20220215 15:43:30.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.343" endtime="20220215 15:43:30.343"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.343" endtime="20220215 15:43:30.343"></status>
</kw>
<msg timestamp="20220215 15:43:30.344" level="INFO">${code_output} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.325" endtime="20220215 15:43:30.344"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.name</arg>
</arguments>
<assign>
<var>${name_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.361" level="INFO">${result} = ['IBNZ']</msg>
<status status="PASS" starttime="20220215 15:43:30.344" endtime="20220215 15:43:30.361"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.361" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.361" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.361" endtime="20220215 15:43:30.361"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.361" level="INFO">${result} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.361" endtime="20220215 15:43:30.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.362" endtime="20220215 15:43:30.362"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.362" endtime="20220215 15:43:30.362"></status>
</kw>
<msg timestamp="20220215 15:43:30.362" level="INFO">${name_output} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.344" endtime="20220215 15:43:30.362"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.branchId</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.379" level="INFO">${result} = [87401]</msg>
<status status="PASS" starttime="20220215 15:43:30.362" endtime="20220215 15:43:30.379"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.379" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.379" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.379" endtime="20220215 15:43:30.379"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.380" level="INFO">${result} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.380" endtime="20220215 15:43:30.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.380" endtime="20220215 15:43:30.380"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.380" endtime="20220215 15:43:30.380"></status>
</kw>
<msg timestamp="20220215 15:43:30.380" level="INFO">${branch_output} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.362" endtime="20220215 15:43:30.380"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<msg timestamp="20220215 15:43:30.381" level="INFO">${branch_output} = 87401.0</msg>
<status status="PASS" starttime="20220215 15:43:30.380" endtime="20220215 15:43:30.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_input}</arg>
<arg>${name_input}</arg>
<arg>${branch_input}</arg>
</arguments>
<assign>
<var>${list_input}</var>
</assign>
<msg timestamp="20220215 15:43:30.381" level="INFO">${list_input} = ['NV62963274', 'IBNZ', 87401.0]</msg>
<status status="PASS" starttime="20220215 15:43:30.381" endtime="20220215 15:43:30.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_output}</arg>
<arg>${name_output}</arg>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${list_output}</var>
</assign>
<msg timestamp="20220215 15:43:30.381" level="INFO">${list_output} = ['NV62963274', 'IBNZ', 87401.0]</msg>
<status status="PASS" starttime="20220215 15:43:30.381" endtime="20220215 15:43:30.381"></status>
</kw>
<kw name="Verify List Input And Output" library="share">
<arguments>
<arg>${list_input}</arg>
<arg>${list_output}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listinput}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:30.382" level="INFO">Length is 3</msg>
<msg timestamp="20220215 15:43:30.382" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220215 15:43:30.381" endtime="20220215 15:43:30.382"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 15:43:30.382" level="INFO">${value_input} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.382"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 15:43:30.382" level="INFO">${value_output} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.382"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.382"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 15:43:30.383" level="INFO">${value_input} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.383"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 15:43:30.383" level="INFO">${value_output} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.383" endtime="20220215 15:43:30.383"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.383"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 15:43:30.383" level="INFO">${value_input} = 87401.0</msg>
<status status="PASS" starttime="20220215 15:43:30.383" endtime="20220215 15:43:30.383"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 15:43:30.383" level="INFO">${value_output} = 87401.0</msg>
<status status="PASS" starttime="20220215 15:43:30.383" endtime="20220215 15:43:30.383"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.383" endtime="20220215 15:43:30.383"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.382" endtime="20220215 15:43:30.383"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value_input}</arg>
<arg>${value_output}</arg>
</arguments>
<status status="PASS" starttime="20220215 15:43:30.383" endtime="20220215 15:43:30.384"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.381" endtime="20220215 15:43:30.384"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.232" endtime="20220215 15:43:30.384"></status>
</kw>
<doc>Tạo mới nhân viên và thiết lập lương ko có mẫu lương</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:29.629" endtime="20220215 15:43:30.384" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Create duplicate employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.477" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220215 15:43:30.477" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.477" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.386" endtime="20220215 15:43:30.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.478" level="INFO">{'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:14:17.6200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366494, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213727}]}, {'id': 180000000000405, 'code': 'NV000058', 'name': '3333333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': '72396B3C315C440C34F4FB66FE228378F560EE6A64718901DF63C714DB80C467', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2021-03-01T15:27:24.9970000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T10:05:31.6050000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 180000000000405}, {'id': 180000000005705, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 180000000000405}]}, {'id': 160000000213804, 'code': 'NV000108', 'name': 'Phước 4', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:26:07.4300000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-14T16:30:08.0170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366504, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213804}]}, {'id': 140000000106018, 'code': 'NV000110', 'name': 'AA', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-02-10T15:16:23.8100000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:44:23.8010000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215621, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 140000000106018}]}, {'id': 160000000213707, 'code': 'NV13380197', 'name': 'ahRw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T15:59:47.7400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366470, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213707}]}, {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, {'id': 120000000126285, 'code': 'NV86635237', 'name': 'jKzu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T09:48:09.4030000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:48:10.7440000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 120000000126285}]}, {'id': 60000000180048, 'code': 'NV000086', 'name': 'kkkk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-05-20T08:51:21.2900000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-13T21:48:08.2960000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001416350, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 60000000180048}]}, {'id': 150000000109109, 'code': 'NV000113_1', 'name': 'NV000113_1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:35:26.2770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001014630, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 150000000109109}]}, {'id': 40000000002224, 'code': 'NV000020', 'name': 'nv6', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 60000000144302, 'department': {'id': 60000000144302, 'name': 'Phòng 1', 'description': '', 'isActive': True, 'tenantId': 55955, 'createdBy': 234147, 'createdDate': '2021-01-21T09:43:07.3400000', 'isDeleted': False}, 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:46.7230000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-12T22:03:08.0280000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': 'Phòng 1', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000033501, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 40000000002224}]}, {'id': 160000000213801, 'code': 'NV000105', 'name': 'Phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:27:20.9830000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:29:42.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366501, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213801}]}, {'id': 160000000213803, 'code': 'NV000107', 'name': 'Phuoc3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:46:09.7970000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T15:01:50.1290000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366503, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213803}]}, {'id': 160000000213805, 'code': 'NV000109', 'name': 'Phuoc5', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:32:16.8770000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:12:05.5080000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366505, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213805}]}, {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:35:01.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366601, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213901}]}, {'id': 160000000213710, 'code': 'NV89174442', 'name': 'qxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T09:01:16.8400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366473, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213710}]}, {'id': 160000000213704, 'code': 'NV63500086', 'name': 'rtZE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:38:52.9200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366466, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213704}]}, {'id': 110000000121585, 'code': 'NV000104', 'name': 'SBD', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-20T11:17:10.8600000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:23:12.3160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001023526, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121585}]}, {'id': 50000000124571, 'code': 'NV000102', 'name': 'testcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-07-09T16:43:57.4800000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:33:36.1110000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000213467, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 50000000124571}]}, {'id': 160000000005601, 'code': 'NV000007', 'name': 'Tin', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402876, 'createdBy': 234147, 'createdDate': '2020-02-24T23:56:04.2720000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000142101, 'tenantId': 55955, 'branchId': 402876, 'employeeId': 160000000005601}]}, {'id': 36368, 'code': 'UD04845189', 'name': 'UpdateeaMl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:20.5500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T20:10:39.4600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366462, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36368}]}, {'id': 30000000124351, 'code': 'UD71619774', 'name': 'UpdateESXj', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T21:21:04.3070000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.3750000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256555, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 30000000124351}]}, {'id': 36257, 'code': 'UD15710512', 'name': 'UpdateqqcE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:51.2570000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:45:00.1260000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235474, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36257}]}, {'id': 90000001072665, 'code': 'UD89174442', 'name': 'Updateqxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T22:01:13.0500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T09:01:18.3310000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366418, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 90000001072665}]}, {'id': 160000000213703, 'code': 'UD24162114', 'name': 'UpdateycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:37:00.3770000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.1320000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366465, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213703}]}, {'id': 60000000001803, 'code': 'UD07554618', 'name': 'UpdateZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402841, 'createdBy': 234147, 'createdDate': '2020-02-13T03:11:22.8250000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T08:59:57.4660000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235423, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 60000000001803}]}, {'id': 110000000121505, 'code': 'NV24162114', 'name': 'ycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:43:36.9600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191634, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121505}]}, {'id': 160000000213709, 'code': 'NV07554618', 'name': 'ZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T08:59:55.8830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366472, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213709}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:30.477" endtime="20220215 15:43:30.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:30.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.478" endtime="20220215 15:43:30.479"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.479" endtime="20220215 15:43:30.479"></status>
</kw>
<msg timestamp="20220215 15:43:30.479" level="INFO">${resp} = {'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220215 15:43:30.386" endtime="20220215 15:43:30.479"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:30.500" level="INFO">${list} = ['NV000103', 'NV000058', 'NV000108', 'NV000110', 'NV13380197', 'NV62963274', 'NV86635237', 'NV000086', 'NV000113_1', 'NV000020', 'NV000105', 'NV000107', 'NV000109', 'NV000106', 'NV89174442', 'NV635000...</msg>
<status status="PASS" starttime="20220215 15:43:30.480" endtime="20220215 15:43:30.501"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:30.505" level="INFO">${value} = NV000109</msg>
<status status="PASS" starttime="20220215 15:43:30.501" endtime="20220215 15:43:30.505"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.505" endtime="20220215 15:43:30.505"></status>
</kw>
<msg timestamp="20220215 15:43:30.505" level="INFO">${code_employee} = NV000109</msg>
<status status="PASS" starttime="20220215 15:43:30.386" endtime="20220215 15:43:30.505"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.506" level="INFO">${list_format} = ['1235698', 'NV000109', 'IBNZ', '87401', '87401']</msg>
<status status="PASS" starttime="20220215 15:43:30.506" endtime="20220215 15:43:30.506"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:30.506" level="INFO">Length is 5</msg>
<msg timestamp="20220215 15:43:30.506" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 15:43:30.506" endtime="20220215 15:43:30.506"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.507" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:30.507" endtime="20220215 15:43:30.507"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.507" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:30.507" endtime="20220215 15:43:30.507"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.507" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.507" endtime="20220215 15:43:30.507"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.507" endtime="20220215 15:43:30.507"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.508" level="INFO">${value_temp} = NV000109</msg>
<status status="PASS" starttime="20220215 15:43:30.508" endtime="20220215 15:43:30.508"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.508" level="INFO">${value_temp} = NV000109</msg>
<status status="PASS" starttime="20220215 15:43:30.508" endtime="20220215 15:43:30.508"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.508" level="INFO">${data_format} = {"id":1235698,"code":"NV000109","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.508" endtime="20220215 15:43:30.508"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.507" endtime="20220215 15:43:30.508"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.510" level="INFO">${value_temp} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.509" endtime="20220215 15:43:30.510"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.510" level="INFO">${value_temp} = IBNZ</msg>
<status status="PASS" starttime="20220215 15:43:30.510" endtime="20220215 15:43:30.510"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.511" level="INFO">${data_format} = {"id":1235698,"code":"NV000109","name":"IBNZ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.510" endtime="20220215 15:43:30.511"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.508" endtime="20220215 15:43:30.511"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.511" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.511" endtime="20220215 15:43:30.511"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.511" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.511" endtime="20220215 15:43:30.511"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.511" level="INFO">${data_format} = {"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.511" endtime="20220215 15:43:30.511"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.511" endtime="20220215 15:43:30.512"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.512" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.512" endtime="20220215 15:43:30.512"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.512" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.512" endtime="20220215 15:43:30.512"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.512" level="INFO">${data_format} = {"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:30.512" endtime="20220215 15:43:30.512"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.512" endtime="20220215 15:43:30.512"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.506" endtime="20220215 15:43:30.512"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.513" endtime="20220215 15:43:30.513"></status>
</kw>
<msg timestamp="20220215 15:43:30.513" level="INFO">${data} = {"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:30.506" endtime="20220215 15:43:30.513"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 15:43:30.513" level="INFO">${data} = (None, '{"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:30.513" endtime="20220215 15:43:30.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.513" level="INFO">(None, '{"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:30.513" endtime="20220215 15:43:30.514"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 15:43:30.514" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:30.514" endtime="20220215 15:43:30.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.514" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:30.514" endtime="20220215 15:43:30.514"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.598" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV000109","name":"IBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:30.598" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.598" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.515" endtime="20220215 15:43:30.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.599" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 15:43:30.599" endtime="20220215 15:43:30.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.599" endtime="20220215 15:43:30.599"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.599" endtime="20220215 15:43:30.599"></status>
</kw>
<msg timestamp="20220215 15:43:30.600" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 15:43:30.514" endtime="20220215 15:43:30.600"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.617" level="INFO">${result} = ['Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220215 15:43:30.600" endtime="20220215 15:43:30.617"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.617" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:30.617" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:30.617" endtime="20220215 15:43:30.617"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.617" level="INFO">${result} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220215 15:43:30.617" endtime="20220215 15:43:30.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.618" endtime="20220215 15:43:30.618"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.617" endtime="20220215 15:43:30.618"></status>
</kw>
<msg timestamp="20220215 15:43:30.618" level="INFO">${mess_err} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220215 15:43:30.600" endtime="20220215 15:43:30.618"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Mã nhân viên đã tồn tại trong cửa hàng</arg>
</arguments>
<status status="PASS" starttime="20220215 15:43:30.618" endtime="20220215 15:43:30.618"></status>
</kw>
<doc>Tạo mới nhân viên trùng mã nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:30.384" endtime="20220215 15:43:30.618" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Create empty employee">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>\ \</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.619" level="INFO">${list_format} = ['1235698', 'NV62963274', ' ', '87401', '87401']</msg>
<status status="PASS" starttime="20220215 15:43:30.619" endtime="20220215 15:43:30.619"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:30.619" level="INFO">Length is 5</msg>
<msg timestamp="20220215 15:43:30.620" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 15:43:30.619" endtime="20220215 15:43:30.620"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.620" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:30.620" endtime="20220215 15:43:30.620"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.620" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 15:43:30.620" endtime="20220215 15:43:30.620"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.620" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.620" endtime="20220215 15:43:30.620"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.620" endtime="20220215 15:43:30.620"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.621" level="INFO">${value_temp} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.621"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.621" level="INFO">${value_temp} = NV62963274</msg>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.621"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.621" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.621"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.621"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.622" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.622"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.622" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 15:43:30.622" endtime="20220215 15:43:30.622"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.622" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":" ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.622" endtime="20220215 15:43:30.622"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.621" endtime="20220215 15:43:30.622"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.622" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.622" endtime="20220215 15:43:30.622"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.623" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.623" endtime="20220215 15:43:30.623"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.623" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:30.623" endtime="20220215 15:43:30.623"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.622" endtime="20220215 15:43:30.623"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.623" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.623" endtime="20220215 15:43:30.623"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:30.624" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:30.623" endtime="20220215 15:43:30.624"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:30.624" level="INFO">${data_format} = {"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:30.624" endtime="20220215 15:43:30.624"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.623" endtime="20220215 15:43:30.624"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.620" endtime="20220215 15:43:30.624"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.624" endtime="20220215 15:43:30.624"></status>
</kw>
<msg timestamp="20220215 15:43:30.624" level="INFO">${data} = {"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:30.619" endtime="20220215 15:43:30.624"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 15:43:30.625" level="INFO">${data} = (None, '{"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:30.624" endtime="20220215 15:43:30.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.625" level="INFO">(None, '{"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:30.625" endtime="20220215 15:43:30.625"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 15:43:30.625" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:30.625" endtime="20220215 15:43:30.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.626" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:30.625" endtime="20220215 15:43:30.626"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.751" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV62963274","name":" ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:30.751" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.751" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.626" endtime="20220215 15:43:30.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.752" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 15:43:30.751" endtime="20220215 15:43:30.752"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.752" endtime="20220215 15:43:30.752"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.752" endtime="20220215 15:43:30.753"></status>
</kw>
<msg timestamp="20220215 15:43:30.753" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPre...</msg>
<status status="PASS" starttime="20220215 15:43:30.626" endtime="20220215 15:43:30.753"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.772" level="INFO">${result} = ['Tên nhân viên không được để trống', 'Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220215 15:43:30.753" endtime="20220215 15:43:30.772"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:30.772" level="INFO">Length is 2</msg>
<msg timestamp="20220215 15:43:30.772" level="INFO">${lenght} = 2</msg>
<status status="PASS" starttime="20220215 15:43:30.772" endtime="20220215 15:43:30.772"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:30.773" level="INFO">${result} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220215 15:43:30.772" endtime="20220215 15:43:30.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.773" endtime="20220215 15:43:30.773"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:30.773" endtime="20220215 15:43:30.773"></status>
</kw>
<msg timestamp="20220215 15:43:30.773" level="INFO">${mess_err} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220215 15:43:30.753" endtime="20220215 15:43:30.773"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Tên nhân viên không được để trống</arg>
</arguments>
<status status="PASS" starttime="20220215 15:43:30.773" endtime="20220215 15:43:30.774"></status>
</kw>
<doc>Tạo mới nhân viên để trống trường tên nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:30.618" endtime="20220215 15:43:30.774" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Update employee">
<kw name="Get Random ID Employee" library="employee">
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:30.980" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220215 15:43:30.981" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:30.981" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.775" endtime="20220215 15:43:30.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.982" level="INFO">{'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:14:17.6200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366494, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213727}]}, {'id': 180000000000405, 'code': 'NV000058', 'name': '3333333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': '72396B3C315C440C34F4FB66FE228378F560EE6A64718901DF63C714DB80C467', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2021-03-01T15:27:24.9970000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T10:05:31.6050000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 180000000000405}, {'id': 180000000005705, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 180000000000405}]}, {'id': 160000000213804, 'code': 'NV000108', 'name': 'Phước 4', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:26:07.4300000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-14T16:30:08.0170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366504, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213804}]}, {'id': 140000000106018, 'code': 'NV000110', 'name': 'AA', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-02-10T15:16:23.8100000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:44:23.8010000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215621, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 140000000106018}]}, {'id': 160000000213707, 'code': 'NV13380197', 'name': 'ahRw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T15:59:47.7400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366470, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213707}]}, {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, {'id': 120000000126285, 'code': 'NV86635237', 'name': 'jKzu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T09:48:09.4030000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:48:10.7440000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 120000000126285}]}, {'id': 60000000180048, 'code': 'NV000086', 'name': 'kkkk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-05-20T08:51:21.2900000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-13T21:48:08.2960000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001416350, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 60000000180048}]}, {'id': 150000000109109, 'code': 'NV000113_1', 'name': 'NV000113_1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:35:26.2770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001014630, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 150000000109109}]}, {'id': 40000000002224, 'code': 'NV000020', 'name': 'nv6', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 60000000144302, 'department': {'id': 60000000144302, 'name': 'Phòng 1', 'description': '', 'isActive': True, 'tenantId': 55955, 'createdBy': 234147, 'createdDate': '2021-01-21T09:43:07.3400000', 'isDeleted': False}, 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:46.7230000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-12T22:03:08.0280000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': 'Phòng 1', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000033501, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 40000000002224}]}, {'id': 160000000213801, 'code': 'NV000105', 'name': 'Phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:27:20.9830000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:29:42.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366501, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213801}]}, {'id': 160000000213803, 'code': 'NV000107', 'name': 'Phuoc3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:46:09.7970000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T15:01:50.1290000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366503, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213803}]}, {'id': 160000000213805, 'code': 'NV000109', 'name': 'Phuoc5', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:32:16.8770000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:12:05.5080000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366505, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213805}]}, {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:35:01.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366601, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213901}]}, {'id': 160000000213710, 'code': 'NV89174442', 'name': 'qxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T09:01:16.8400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366473, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213710}]}, {'id': 160000000213704, 'code': 'NV63500086', 'name': 'rtZE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:38:52.9200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366466, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213704}]}, {'id': 110000000121585, 'code': 'NV000104', 'name': 'SBD', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-20T11:17:10.8600000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:23:12.3160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001023526, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121585}]}, {'id': 50000000124571, 'code': 'NV000102', 'name': 'testcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-07-09T16:43:57.4800000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:33:36.1110000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000213467, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 50000000124571}]}, {'id': 160000000005601, 'code': 'NV000007', 'name': 'Tin', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402876, 'createdBy': 234147, 'createdDate': '2020-02-24T23:56:04.2720000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000142101, 'tenantId': 55955, 'branchId': 402876, 'employeeId': 160000000005601}]}, {'id': 36368, 'code': 'UD04845189', 'name': 'UpdateeaMl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:20.5500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T20:10:39.4600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366462, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36368}]}, {'id': 30000000124351, 'code': 'UD71619774', 'name': 'UpdateESXj', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T21:21:04.3070000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.3750000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256555, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 30000000124351}]}, {'id': 36257, 'code': 'UD15710512', 'name': 'UpdateqqcE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:51.2570000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:45:00.1260000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235474, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36257}]}, {'id': 90000001072665, 'code': 'UD89174442', 'name': 'Updateqxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T22:01:13.0500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T09:01:18.3310000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366418, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 90000001072665}]}, {'id': 160000000213703, 'code': 'UD24162114', 'name': 'UpdateycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:37:00.3770000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.1320000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366465, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213703}]}, {'id': 60000000001803, 'code': 'UD07554618', 'name': 'UpdateZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402841, 'createdBy': 234147, 'createdDate': '2020-02-13T03:11:22.8250000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T08:59:57.4660000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235423, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 60000000001803}]}, {'id': 110000000121505, 'code': 'NV24162114', 'name': 'ycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:43:36.9600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191634, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121505}]}, {'id': 160000000213709, 'code': 'NV07554618', 'name': 'ZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T08:59:55.8830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366472, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213709}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:30.981" endtime="20220215 15:43:30.982"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:30.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:30.982" endtime="20220215 15:43:30.982"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:30.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:30.982" endtime="20220215 15:43:30.982"></status>
</kw>
<msg timestamp="20220215 15:43:30.983" level="INFO">${resp} = {'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220215 15:43:30.775" endtime="20220215 15:43:30.983"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.003" level="INFO">${list} = [160000000213727, 180000000000405, 160000000213804, 140000000106018, 160000000213707, 80000000135805, 120000000126285, 60000000180048, 150000000109109, 40000000002224, 160000000213801, 160000000213803...</msg>
<status status="PASS" starttime="20220215 15:43:30.983" endtime="20220215 15:43:31.003"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:31.004" level="INFO">${value} = 160000000213707</msg>
<status status="PASS" starttime="20220215 15:43:31.003" endtime="20220215 15:43:31.004"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.004" endtime="20220215 15:43:31.004"></status>
</kw>
<msg timestamp="20220215 15:43:31.004" level="INFO">${id_employee} = 160000000213707</msg>
<status status="PASS" starttime="20220215 15:43:30.775" endtime="20220215 15:43:31.004"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.081" level="INFO">Get Request using : alias=session, uri=/employees/160000000213707, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.081" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.081" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.004" endtime="20220215 15:43:31.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.082" level="INFO">{'result': {'id': 160000000213707, 'code': 'NV13380197', 'name': 'ahRw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T15:59:47.7400000', 'isDeleted': False, 'clockings': [{'id': 90000004138450, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138451, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138452, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138453, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138454, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138455, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138456, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138457, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138458, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138459, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-24T07:00:00.0000000', 'endTime': '2021-12-24T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138460, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-27T07:00:00.0000000', 'endTime': '2021-12-27T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138461, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-28T07:00:00.0000000', 'endTime': '2021-12-28T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138462, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-30T07:00:00.0000000', 'endTime': '2021-12-30T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138463, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-31T07:00:00.0000000', 'endTime': '2021-12-31T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138464, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-03T07:00:00.0000000', 'endTime': '2022-01-03T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138465, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138466, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138467, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138468, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138469, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-10T07:00:00.0000000', 'endTime': '2022-01-10T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004138470, 'shiftId': 160000000206701, 'timeSheetId': 90000001323586, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-01-12T07:00:00.0000000', 'endTime': '2022-01-12T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140117, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-07-01T07:00:00.0000000', 'endTime': '2022-07-01T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140118, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-07-04T07:00:00.0000000', 'endTime': '2022-07-04T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140119, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-05T07:00:00.0000000', 'endTime': '2022-07-05T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140120, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-06T07:00:00.0000000', 'endTime': '2022-07-06T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140121, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-07T07:00:00.0000000', 'endTime': '2022-07-07T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140122, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-08T07:00:00.0000000', 'endTime': '2022-07-08T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140123, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-07-11T07:00:00.0000000', 'endTime': '2022-07-11T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140124, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-12T07:00:00.0000000', 'endTime': '2022-07-12T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140125, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2022-07-13T07:00:00.0000000', 'endTime': '2022-07-13T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2022-07-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140126, 'shiftId': 210000001111741, 'timeSheetId': 90000001323808, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2022-07-14T07:00:00.0000000', 'endTime': '2022-07-14T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140127, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-02T07:00:00.0000000', 'endTime': '2021-12-02T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140128, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-03T07:00:00.0000000', 'endTime': '2021-12-03T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140129, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-06T07:00:00.0000000', 'endTime': '2021-12-06T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140130, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-07T07:00:00.0000000', 'endTime': '2021-12-07T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140131, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-08T07:00:00.0000000', 'endTime': '2021-12-08T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140132, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-09T07:00:00.0000000', 'endTime': '2021-12-09T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140133, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-10T07:00:00.0000000', 'endTime': '2021-12-10T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140134, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140135, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140136, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 90000004140137, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2021-12-16T07:00:00.0000000', 'checkOutDate': '2021-12-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140138, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2021-12-17T07:00:00.0000000', 'checkOutDate': '2021-12-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140139, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2021-12-20T07:00:00.0000000', 'checkOutDate': '2021-12-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140140, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2021-12-21T07:00:00.0000000', 'checkOutDate': '2021-12-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140141, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 90000004140142, 'shiftId': 220000000002249, 'timeSheetId': 90000001323809, 'employeeId': 160000000213707, 'workById': 160000000213707, 'clockingStatus': 3, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkOutDate': '2021-12-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 160000000366470, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213707}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.081" endtime="20220215 15:43:31.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.082" endtime="20220215 15:43:31.082"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.082" endtime="20220215 15:43:31.082"></status>
</kw>
<msg timestamp="20220215 15:43:31.083" level="INFO">${resp} = {'result': {'id': 160000000213707, 'code': 'NV13380197', 'name': 'ahRw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'war...</msg>
<status status="PASS" starttime="20220215 15:43:31.004" endtime="20220215 15:43:31.083"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.102" level="INFO">${list} = ['NV13380197']</msg>
<status status="PASS" starttime="20220215 15:43:31.083" endtime="20220215 15:43:31.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:31.103" level="INFO">${value} = NV13380197</msg>
<status status="PASS" starttime="20220215 15:43:31.102" endtime="20220215 15:43:31.103"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.103" endtime="20220215 15:43:31.103"></status>
</kw>
<msg timestamp="20220215 15:43:31.103" level="INFO">${code_employee} = NV13380197</msg>
<status status="PASS" starttime="20220215 15:43:31.004" endtime="20220215 15:43:31.103"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.104" endtime="20220215 15:43:31.104"></status>
</kw>
<msg timestamp="20220215 15:43:31.104" level="INFO">${id_employee} = 160000000213707</msg>
<status status="PASS" starttime="20220215 15:43:30.774" endtime="20220215 15:43:31.104"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>UD${random_number}</arg>
<arg>Update${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.104" level="INFO">${list} = [160000000213707, 'UD62963274', 'UpdateIBNZ', '87401', '87401']</msg>
<status status="PASS" starttime="20220215 15:43:31.104" endtime="20220215 15:43:31.104"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:31.105" level="INFO">Length is 5</msg>
<msg timestamp="20220215 15:43:31.105" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 15:43:31.104" endtime="20220215 15:43:31.105"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.105" level="INFO">${value_temp} = 160000000213707</msg>
<status status="PASS" starttime="20220215 15:43:31.105" endtime="20220215 15:43:31.105"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.105" level="INFO">${value_temp} = 160000000213707</msg>
<status status="PASS" starttime="20220215 15:43:31.105" endtime="20220215 15:43:31.105"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.106" level="INFO">${data_format} = {"id":160000000213707,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:31.105" endtime="20220215 15:43:31.106"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.105" endtime="20220215 15:43:31.106"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.106" level="INFO">${value_temp} = UD62963274</msg>
<status status="PASS" starttime="20220215 15:43:31.106" endtime="20220215 15:43:31.106"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.106" level="INFO">${value_temp} = UD62963274</msg>
<status status="PASS" starttime="20220215 15:43:31.106" endtime="20220215 15:43:31.106"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.106" level="INFO">${data_format} = {"id":160000000213707,"code":"UD62963274","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:31.106" endtime="20220215 15:43:31.106"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.106" endtime="20220215 15:43:31.106"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.107" level="INFO">${value_temp} = UpdateIBNZ</msg>
<status status="PASS" starttime="20220215 15:43:31.107" endtime="20220215 15:43:31.107"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.107" level="INFO">${value_temp} = UpdateIBNZ</msg>
<status status="PASS" starttime="20220215 15:43:31.107" endtime="20220215 15:43:31.107"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.107" level="INFO">${data_format} = {"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:31.107" endtime="20220215 15:43:31.107"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.106" endtime="20220215 15:43:31.107"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.108" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.107" endtime="20220215 15:43:31.108"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.108" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.108" endtime="20220215 15:43:31.108"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.108" level="INFO">${data_format} = {"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 15:43:31.108" endtime="20220215 15:43:31.108"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.107" endtime="20220215 15:43:31.108"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.108" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.108" endtime="20220215 15:43:31.108"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.109" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.109" endtime="20220215 15:43:31.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.109" level="INFO">${data_format} = {"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:31.109" endtime="20220215 15:43:31.109"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.108" endtime="20220215 15:43:31.109"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.105" endtime="20220215 15:43:31.109"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.109" endtime="20220215 15:43:31.109"></status>
</kw>
<msg timestamp="20220215 15:43:31.109" level="INFO">${data} = {"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}</msg>
<status status="PASS" starttime="20220215 15:43:31.104" endtime="20220215 15:43:31.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 15:43:31.110" level="INFO">${data} = (None, '{"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')</msg>
<status status="PASS" starttime="20220215 15:43:31.109" endtime="20220215 15:43:31.110"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 15:43:31.110" level="INFO">${formdata} = {'employee': (None, '{"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:31.110" endtime="20220215 15:43:31.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.110" level="INFO">{'employee': (None, '{"id":160000000213707,"code":"UD62963274","name":"UpdateIBNZ","branchId":87401,"userId":null,"workBranchIds":[87401]}')}</msg>
<status status="PASS" starttime="20220215 15:43:31.110" endtime="20220215 15:43:31.110"></status>
</kw>
<kw name="Update Request Json KV Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.383" level="INFO">Put Request using : alias=session, uri=/employees/160000000213707, data=None,                     headers={'retailer': 'testz12', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA'}, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:31.383" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.383" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.111" endtime="20220215 15:43:31.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.384" level="INFO">{'result': {'id': 160000000213707, 'code': 'UD62963274', 'name': 'UpdateIBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-15T15:43:31.9674134+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 50000000329040, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 160000000213707}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.384" endtime="20220215 15:43:31.384"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.384" endtime="20220215 15:43:31.384"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.384" endtime="20220215 15:43:31.384"></status>
</kw>
<msg timestamp="20220215 15:43:31.385" level="INFO">${resp} = {'result': {'id': 160000000213707, 'code': 'UD62963274', 'name': 'UpdateIBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': ''...</msg>
<status status="PASS" starttime="20220215 15:43:31.111" endtime="20220215 15:43:31.385"></status>
</kw>
<doc>Cập nhật nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:30.774" endtime="20220215 15:43:31.385" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Get pin code">
<kw name="Get Random ID Employee" library="employee">
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.480" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.480" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.480" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.386" endtime="20220215 15:43:31.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.482" level="INFO">{'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:14:17.6200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366494, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213727}]}, {'id': 180000000000405, 'code': 'NV000058', 'name': '3333333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': '72396B3C315C440C34F4FB66FE228378F560EE6A64718901DF63C714DB80C467', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2021-03-01T15:27:24.9970000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T10:05:31.6050000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 180000000000405}, {'id': 180000000005705, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 180000000000405}]}, {'id': 160000000213804, 'code': 'NV000108', 'name': 'Phước 4', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:26:07.4300000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-14T16:30:08.0170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366504, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213804}]}, {'id': 140000000106018, 'code': 'NV000110', 'name': 'AA', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-02-10T15:16:23.8100000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:44:23.8010000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215621, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 140000000106018}]}, {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, {'id': 120000000126285, 'code': 'NV86635237', 'name': 'jKzu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T09:48:09.4030000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:48:10.7440000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 120000000126285}]}, {'id': 60000000180048, 'code': 'NV000086', 'name': 'kkkk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-05-20T08:51:21.2900000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-13T21:48:08.2960000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001416350, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 60000000180048}]}, {'id': 150000000109109, 'code': 'NV000113_1', 'name': 'NV000113_1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:35:26.2770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001014630, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 150000000109109}]}, {'id': 40000000002224, 'code': 'NV000020', 'name': 'nv6', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 60000000144302, 'department': {'id': 60000000144302, 'name': 'Phòng 1', 'description': '', 'isActive': True, 'tenantId': 55955, 'createdBy': 234147, 'createdDate': '2021-01-21T09:43:07.3400000', 'isDeleted': False}, 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:46.7230000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-12T22:03:08.0280000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': 'Phòng 1', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000033501, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 40000000002224}]}, {'id': 160000000213801, 'code': 'NV000105', 'name': 'Phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:27:20.9830000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:29:42.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366501, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213801}]}, {'id': 160000000213803, 'code': 'NV000107', 'name': 'Phuoc3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:46:09.7970000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T15:01:50.1290000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366503, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213803}]}, {'id': 160000000213805, 'code': 'NV000109', 'name': 'Phuoc5', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:32:16.8770000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:12:05.5080000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366505, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213805}]}, {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:35:01.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366601, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213901}]}, {'id': 160000000213710, 'code': 'NV89174442', 'name': 'qxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T09:01:16.8400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366473, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213710}]}, {'id': 160000000213704, 'code': 'NV63500086', 'name': 'rtZE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:38:52.9200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366466, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213704}]}, {'id': 110000000121585, 'code': 'NV000104', 'name': 'SBD', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-20T11:17:10.8600000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:23:12.3160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001023526, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121585}]}, {'id': 50000000124571, 'code': 'NV000102', 'name': 'testcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-07-09T16:43:57.4800000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:33:36.1110000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000213467, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 50000000124571}]}, {'id': 160000000005601, 'code': 'NV000007', 'name': 'Tin', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402876, 'createdBy': 234147, 'createdDate': '2020-02-24T23:56:04.2720000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000142101, 'tenantId': 55955, 'branchId': 402876, 'employeeId': 160000000005601}]}, {'id': 36368, 'code': 'UD04845189', 'name': 'UpdateeaMl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:20.5500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T20:10:39.4600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366462, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36368}]}, {'id': 30000000124351, 'code': 'UD71619774', 'name': 'UpdateESXj', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T21:21:04.3070000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.3750000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256555, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 30000000124351}]}, {'id': 160000000213707, 'code': 'UD62963274', 'name': 'UpdateIBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000', 'modifiedBy': 234147, 'modifiedDate': '2022-02-15T15:43:31.9670000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329040, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 160000000213707}]}, {'id': 36257, 'code': 'UD15710512', 'name': 'UpdateqqcE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:51.2570000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:45:00.1260000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235474, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36257}]}, {'id': 90000001072665, 'code': 'UD89174442', 'name': 'Updateqxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T22:01:13.0500000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T09:01:18.3310000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366418, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 90000001072665}]}, {'id': 160000000213703, 'code': 'UD24162114', 'name': 'UpdateycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:37:00.3770000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.1320000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366465, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213703}]}, {'id': 60000000001803, 'code': 'UD07554618', 'name': 'UpdateZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402841, 'createdBy': 234147, 'createdDate': '2020-02-13T03:11:22.8250000', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T08:59:57.4660000', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235423, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 60000000001803}]}, {'id': 110000000121505, 'code': 'NV24162114', 'name': 'ycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:43:36.9600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191634, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121505}]}, {'id': 160000000213709, 'code': 'NV07554618', 'name': 'ZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T08:59:55.8830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366472, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213709}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.480" endtime="20220215 15:43:31.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.482" endtime="20220215 15:43:31.482"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.483" endtime="20220215 15:43:31.483"></status>
</kw>
<msg timestamp="20220215 15:43:31.484" level="INFO">${resp} = {'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220215 15:43:31.386" endtime="20220215 15:43:31.484"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.506" level="INFO">${list} = [160000000213727, 180000000000405, 160000000213804, 140000000106018, 80000000135805, 120000000126285, 60000000180048, 150000000109109, 40000000002224, 160000000213801, 160000000213803, 160000000213805...</msg>
<status status="PASS" starttime="20220215 15:43:31.484" endtime="20220215 15:43:31.506"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:31.508" level="INFO">${value} = 160000000213901</msg>
<status status="PASS" starttime="20220215 15:43:31.507" endtime="20220215 15:43:31.508"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.508" endtime="20220215 15:43:31.509"></status>
</kw>
<msg timestamp="20220215 15:43:31.509" level="INFO">${id_employee} = 160000000213901</msg>
<status status="PASS" starttime="20220215 15:43:31.385" endtime="20220215 15:43:31.509"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.647" level="INFO">Get Request using : alias=session, uri=/employees/160000000213901, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.647" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.647" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.510" endtime="20220215 15:43:31.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.648" level="INFO">{'result': {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:35:01.2970000', 'isDeleted': False, 'clockings': [{'id': 60000005938612, 'shiftId': 210000001111741, 'timeSheetId': 60000000738009, 'employeeId': 160000000213901, 'workById': 160000000213901, 'clockingStatus': 3, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2022-01-07T07:00:00.0000000', 'checkOutDate': '2022-01-07T10:30:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 30, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 170000001791007, 'shiftId': 210000001111741, 'timeSheetId': 170000000276006, 'employeeId': 160000000213901, 'workById': 160000000213901, 'clockingStatus': 3, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2022-01-06T07:00:00.0000000', 'checkOutDate': '2022-01-06T10:30:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 30, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 160000000366601, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213901}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.648" endtime="20220215 15:43:31.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.648" endtime="20220215 15:43:31.648"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.648" endtime="20220215 15:43:31.648"></status>
</kw>
<msg timestamp="20220215 15:43:31.649" level="INFO">${resp} = {'result': {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'war...</msg>
<status status="PASS" starttime="20220215 15:43:31.509" endtime="20220215 15:43:31.649"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.666" level="INFO">${list} = ['NV000106']</msg>
<status status="PASS" starttime="20220215 15:43:31.649" endtime="20220215 15:43:31.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:31.667" level="INFO">${value} = NV000106</msg>
<status status="PASS" starttime="20220215 15:43:31.666" endtime="20220215 15:43:31.667"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.667" endtime="20220215 15:43:31.667"></status>
</kw>
<msg timestamp="20220215 15:43:31.668" level="INFO">${code_employee} = NV000106</msg>
<status status="PASS" starttime="20220215 15:43:31.509" endtime="20220215 15:43:31.668"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.668" endtime="20220215 15:43:31.668"></status>
</kw>
<msg timestamp="20220215 15:43:31.668" level="INFO">${id_employee} = 160000000213901</msg>
<status status="PASS" starttime="20220215 15:43:31.385" endtime="20220215 15:43:31.668"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${user_login}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.668" level="INFO">${list} = [160000000213901, 234147]</msg>
<status status="PASS" starttime="20220215 15:43:31.668" endtime="20220215 15:43:31.668"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_pin_code}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${enp_pin_code}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:31.669" level="INFO">Length is 2</msg>
<msg timestamp="20220215 15:43:31.669" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.669"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.669" level="INFO">${value_temp} = 160000000213901</msg>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.669"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.669" level="INFO">${value_temp} = 160000000213901</msg>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.669"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.670" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=160000000213901&amp;UserId=[D1]</msg>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.670"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.670"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.670" level="INFO">${value_temp} = 234147</msg>
<status status="PASS" starttime="20220215 15:43:31.670" endtime="20220215 15:43:31.670"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.670" level="INFO">${value_temp} = 234147</msg>
<status status="PASS" starttime="20220215 15:43:31.670" endtime="20220215 15:43:31.670"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.671" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=160000000213901&amp;UserId=234147</msg>
<status status="PASS" starttime="20220215 15:43:31.670" endtime="20220215 15:43:31.671"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.670" endtime="20220215 15:43:31.671"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.669" endtime="20220215 15:43:31.671"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.671" endtime="20220215 15:43:31.671"></status>
</kw>
<msg timestamp="20220215 15:43:31.671" level="INFO">${enp_pin_code} = /employees/two-fa-pin?EmployeeId=160000000213901&amp;UserId=234147</msg>
<status status="PASS" starttime="20220215 15:43:31.668" endtime="20220215 15:43:31.671"></status>
</kw>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_pin_code}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.842" level="INFO">Get Request using : alias=session, uri=/employees/two-fa-pin?EmployeeId=160000000213901&amp;UserId=234147, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.842" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.842" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.671" endtime="20220215 15:43:31.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.842" level="INFO">{'result': {'pin': '181184'}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.842" endtime="20220215 15:43:31.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.843" endtime="20220215 15:43:31.843"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.843" endtime="20220215 15:43:31.843"></status>
</kw>
<msg timestamp="20220215 15:43:31.843" level="INFO">${resp} = {'result': {'pin': '181184'}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.671" endtime="20220215 15:43:31.843"></status>
</kw>
<doc>Lấy mã xác nhận cho chấm công gps</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:31.385" endtime="20220215 15:43:31.843" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Add work schedule">
<kw name="Format enp shift branch" library="shift">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.845" level="INFO">${list_format} = ['87401']</msg>
<status status="PASS" starttime="20220215 15:43:31.844" endtime="20220215 15:43:31.845"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_shift_branch}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:31.845" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:31.845" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 15:43:31.845" endtime="20220215 15:43:31.845"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.846" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.846" endtime="20220215 15:43:31.846"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:31.846" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:31.846" endtime="20220215 15:43:31.846"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:31.846" level="INFO">${data_format} = /shifts/multiple-branch/orderby-from-to?BranchIds=87401&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 15:43:31.846" endtime="20220215 15:43:31.846"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.845" endtime="20220215 15:43:31.846"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.845" endtime="20220215 15:43:31.846"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.846" endtime="20220215 15:43:31.846"></status>
</kw>
<msg timestamp="20220215 15:43:31.847" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=87401&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 15:43:31.845" endtime="20220215 15:43:31.847"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${enp_shift_branch}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.847" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=87401&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 15:43:31.847" endtime="20220215 15:43:31.847"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:31.844" endtime="20220215 15:43:31.847"></status>
</kw>
<kw name="Get RanDom ID Shift And Get Name From ID" library="shift">
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift_branch}</arg>
<arg>$..id</arg>
</arguments>
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.900" level="INFO">Get Request using : alias=session, uri=/shifts/multiple-branch/orderby-from-to?BranchIds=87401&amp;ShiftIds=, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.900" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.901" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.848" endtime="20220215 15:43:31.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.901" level="INFO">{'result': [{'id': 60000000158552, 'name': 'A', 'from': 360, 'to': 0, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 180, 'checkOutAfter': 180}, {'id': 160000000205301, 'name': 'ca 123', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 1260, 'checkOutAfter': 840}, {'id': 60000000148112, 'name': 'aa', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 1260}, {'id': 40000000006904, 'name': 'ca aaa', 'from': 420, 'to': 660, 'isActive': False, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 60000000141203, 'name': 'ca q', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 50000000112102, 'name': 'ca3', 'from': 420, 'to': 660, 'isActive': False, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 160000000000566, 'name': 'UpdateuNYl', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 60000000142827, 'name': 'ca 1', 'from': 480, 'to': 720, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 0, 'checkOutAfter': 0}, {'id': 60000000149714, 'name': 'Ca Full', 'from': 480, 'to': 1020, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 300, 'checkOutAfter': 1200}, {'id': 160000000000460, 'name': 'Ca sáng', 'from': 525, 'to': 765, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 0, 'checkOutAfter': 0}, {'id': 160000000004901, 'name': 'ca chiều 2', 'from': 660, 'to': 1260, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 480, 'checkOutAfter': 0}, {'id': 110000000003002, 'name': 'ca sáng 2', 'from': 675, 'to': 780, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 660, 'checkOutAfter': 795}, {'id': 140000000000573, 'name': 'Full ca', 'from': 780, 'to': 1020, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 600, 'checkOutAfter': 1200}, {'id': 140000000000572, 'name': 'Ca chiều thứ 1', 'from': 810, 'to': 945, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 0, 'checkOutAfter': 1125}, {'id': 60000000138403, 'name': 'Ca chiều thứ 2', 'from': 962, 'to': 1202, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 962, 'checkOutAfter': 1382}, {'id': 180000000003005, 'name': 'Ca nửa đêm', 'from': 1260, 'to': 180, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 1080, 'checkOutAfter': 360}], 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.901" endtime="20220215 15:43:31.901"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.902" endtime="20220215 15:43:31.902"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.902" endtime="20220215 15:43:31.902"></status>
</kw>
<msg timestamp="20220215 15:43:31.902" level="INFO">${resp} = {'result': [{'id': 60000000158552, 'name': 'A', 'from': 360, 'to': 0, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 180, 'checkOutAfter': 180}, {'id': 160000000205301, 'name...</msg>
<status status="PASS" starttime="20220215 15:43:31.847" endtime="20220215 15:43:31.903"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:31.926" level="INFO">${list} = [60000000158552, 160000000205301, 60000000148112, 40000000006904, 60000000141203, 50000000112102, 160000000000566, 60000000142827, 60000000149714, 160000000000460, 160000000004901, 110000000003002, 14...</msg>
<status status="PASS" starttime="20220215 15:43:31.903" endtime="20220215 15:43:31.926"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:31.927" level="INFO">${value} = 60000000148112</msg>
<status status="PASS" starttime="20220215 15:43:31.927" endtime="20220215 15:43:31.927"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.928" endtime="20220215 15:43:31.928"></status>
</kw>
<msg timestamp="20220215 15:43:31.928" level="INFO">${id_shift} = 60000000148112</msg>
<status status="PASS" starttime="20220215 15:43:31.847" endtime="20220215 15:43:31.928"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}/${id_shift}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${name_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:31.981" level="INFO">Get Request using : alias=session, uri=/shifts/60000000148112, headers=None json=None</msg>
<msg timestamp="20220215 15:43:31.981" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:31.981" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.929" endtime="20220215 15:43:31.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.982" level="INFO">{'result': {'id': 60000000148112, 'name': 'aa', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 1260}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.981" endtime="20220215 15:43:31.982"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:31.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:31.982" endtime="20220215 15:43:31.982"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:31.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:31.982" endtime="20220215 15:43:31.982"></status>
</kw>
<msg timestamp="20220215 15:43:31.982" level="INFO">${resp} = {'result': {'id': 60000000148112, 'name': 'aa', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 87401, 'tenantId': 55955, 'checkInBefore': 240, 'checkOutAfter': 1260}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:31.928" endtime="20220215 15:43:31.982"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:32.001" level="INFO">${result} = ['aa']</msg>
<status status="PASS" starttime="20220215 15:43:31.983" endtime="20220215 15:43:32.001"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:32.001" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:32.001" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:32.001" endtime="20220215 15:43:32.001"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:32.001" level="INFO">${result} = aa</msg>
<status status="PASS" starttime="20220215 15:43:32.001" endtime="20220215 15:43:32.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.002" endtime="20220215 15:43:32.002"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.001" endtime="20220215 15:43:32.002"></status>
</kw>
<msg timestamp="20220215 15:43:32.002" level="INFO">${value} = aa</msg>
<status status="PASS" starttime="20220215 15:43:31.982" endtime="20220215 15:43:32.002"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.002" endtime="20220215 15:43:32.002"></status>
</kw>
<msg timestamp="20220215 15:43:32.002" level="INFO">${name_shift} = aa</msg>
<status status="PASS" starttime="20220215 15:43:31.928" endtime="20220215 15:43:32.002"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_shift}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.002" endtime="20220215 15:43:32.002"></status>
</kw>
<msg timestamp="20220215 15:43:32.003" level="INFO">${id_shift} = 60000000148112</msg>
<status status="PASS" starttime="20220215 15:43:31.847" endtime="20220215 15:43:32.003"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>12-12-2021</arg>
<arg>12-01-2022</arg>
<arg>${id_employee}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>${id_shift}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.003" level="INFO">${list_format} = ['12-12-2021', '12-01-2022', 80000000135805, '87401', '87401', 60000000148112]</msg>
<status status="PASS" starttime="20220215 15:43:32.003" endtime="20220215 15:43:32.003"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_add_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:32.003" level="INFO">Length is 6</msg>
<msg timestamp="20220215 15:43:32.003" level="INFO">${length} = 6</msg>
<status status="PASS" starttime="20220215 15:43:32.003" endtime="20220215 15:43:32.003"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.004" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.004"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.004" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.004"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.004" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"[D1]","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts":[{"sh...</msg>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.004"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.004"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.005" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.005"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.005" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220215 15:43:32.005" endtime="20220215 15:43:32.005"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.005" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts"...</msg>
<status status="PASS" starttime="20220215 15:43:32.005" endtime="20220215 15:43:32.005"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.004" endtime="20220215 15:43:32.005"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.006" level="INFO">${value_temp} = 80000000135805</msg>
<status status="PASS" starttime="20220215 15:43:32.005" endtime="20220215 15:43:32.006"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.006" level="INFO">${value_temp} = 80000000135805</msg>
<status status="PASS" starttime="20220215 15:43:32.006" endtime="20220215 15:43:32.006"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.006" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSh...</msg>
<status status="PASS" starttime="20220215 15:43:32.006" endtime="20220215 15:43:32.006"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.005" endtime="20220215 15:43:32.006"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.006" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:32.006" endtime="20220215 15:43:32.006"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.007" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:32.007" endtime="20220215 15:43:32.007"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.007" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":87401,"branchIds":[[D4]],"timeS...</msg>
<status status="PASS" starttime="20220215 15:43:32.007" endtime="20220215 15:43:32.007"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.006" endtime="20220215 15:43:32.007"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.007" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:32.007" endtime="20220215 15:43:32.007"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.008" level="INFO">${value_temp} = 87401</msg>
<status status="PASS" starttime="20220215 15:43:32.007" endtime="20220215 15:43:32.008"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.008" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":87401,"branchIds":[87401],"time...</msg>
<status status="PASS" starttime="20220215 15:43:32.008" endtime="20220215 15:43:32.008"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.007" endtime="20220215 15:43:32.008"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.009" level="INFO">${value_temp} = 60000000148112</msg>
<status status="PASS" starttime="20220215 15:43:32.009" endtime="20220215 15:43:32.009"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.009" level="INFO">${value_temp} = 60000000148112</msg>
<status status="PASS" starttime="20220215 15:43:32.009" endtime="20220215 15:43:32.009"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.010" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":87401,"branchIds":[87401],"time...</msg>
<status status="PASS" starttime="20220215 15:43:32.009" endtime="20220215 15:43:32.010"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.009" endtime="20220215 15:43:32.010"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.003" endtime="20220215 15:43:32.010"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.010" endtime="20220215 15:43:32.010"></status>
</kw>
<msg timestamp="20220215 15:43:32.010" level="INFO">${data} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":87401,"branchIds":[87401],"time...</msg>
<status status="PASS" starttime="20220215 15:43:32.003" endtime="20220215 15:43:32.010"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_add_work_schedule}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:32.720" level="INFO">Post Request using : alias=session, uri=/timesheets, data={"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":80000000135805,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":87401,"branchIds":[87401],"timeSheetShifts":[{"shiftIds":"60000000148112","repeatDaysOfWeek":null}]}}, headers={'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:32.720" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:32.720" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:32.010" endtime="20220215 15:43:32.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.721" level="INFO">{'result': {'id': 50000000298003, 'employeeId': 80000000135805, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId': 87401, 'tenantId': 55955, 'isDeleted': False, 'saveOnDaysOffOfBranch': False, 'saveOnHoliday': False, 'timeSheetStatus': 1, 'clockings': [{'id': 50000002974777, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974778, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974779, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974780, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974781, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974782, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974783, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974784, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974785, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-27T07:00:00.0000000', 'endTime': '2021-12-27T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974786, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-28T07:00:00.0000000', 'endTime': '2021-12-28T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974787, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-30T07:00:00.0000000', 'endTime': '2021-12-30T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974788, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-03T07:00:00.0000000', 'endTime': '2022-01-03T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974789, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974790, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974791, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974792, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-10T07:00:00.0000000', 'endTime': '2022-01-10T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002974793, 'timeSheetId': 50000000298003, 'shiftId': 60000000148112, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-12T07:00:00.0000000', 'endTime': '2022-01-12T11:00:00.0000000', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:33.2900000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'clockingsOverlapTime': [{'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-11T07:00:00.0000000', 'endTime': '2022-01-11T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'hhh', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-09T07:00:00.0000000', 'endTime': '2022-01-09T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-08T07:00:00.0000000', 'endTime': '2022-01-08T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-02T07:00:00.0000000', 'endTime': '2022-01-02T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2022-01-01T07:00:00.0000000', 'endTime': '2022-01-01T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'Tết Dương lịch', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-31T07:00:00.0000000', 'endTime': '2021-12-31T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-29T07:00:00.0000000', 'endTime': '2021-12-29T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'Update Auto 3856', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-26T07:00:00.0000000', 'endTime': '2021-12-26T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-25T07:00:00.0000000', 'endTime': '2021-12-25T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-24T07:00:00.0000000', 'endTime': '2021-12-24T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-19T07:00:00.0000000', 'endTime': '2021-12-19T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-18T07:00:00.0000000', 'endTime': '2021-12-18T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000148112, 'timeSheetId': -1, 'employeeId': 80000000135805, 'workById': 80000000135805, 'clockingStatus': 1, 'startTime': '2021-12-12T07:00:00.0000000', 'endTime': '2021-12-12T11:00:00.0000000', 'branchId': 87401, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}], 'timeSheetShifts': [{'id': -9223372036854774805, 'shiftIds': '60000000148112', 'timeSheetShiftStatus': 0, 'timeSheetId': 50000000298003}], 'hasEndDate': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:32.720" endtime="20220215 15:43:32.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:32.721" endtime="20220215 15:43:32.722"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.722" endtime="20220215 15:43:32.722"></status>
</kw>
<msg timestamp="20220215 15:43:32.722" level="INFO">${resp} = {'result': {'id': 50000000298003, 'employeeId': 80000000135805, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay'...</msg>
<status status="PASS" starttime="20220215 15:43:32.010" endtime="20220215 15:43:32.722"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_work_schedule}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:32.742" level="INFO">${result} = [50000000298003]</msg>
<status status="PASS" starttime="20220215 15:43:32.723" endtime="20220215 15:43:32.742"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:32.742" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:32.742" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:32.742" endtime="20220215 15:43:32.742"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:32.743" level="INFO">${result} = 50000000298003</msg>
<status status="PASS" starttime="20220215 15:43:32.743" endtime="20220215 15:43:32.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.743" endtime="20220215 15:43:32.744"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.743" endtime="20220215 15:43:32.744"></status>
</kw>
<msg timestamp="20220215 15:43:32.744" level="INFO">${id_work_schedule} = 50000000298003</msg>
<status status="PASS" starttime="20220215 15:43:32.723" endtime="20220215 15:43:32.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
<arg>${id_work_schedule}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.744" level="INFO">${id_work_schedule} = 50000000298003</msg>
<status status="PASS" starttime="20220215 15:43:32.744" endtime="20220215 15:43:32.744"></status>
</kw>
<doc>Thêm lịch làm việc cho nhân viên tại MH nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:31.844" endtime="20220215 15:43:32.744" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Delete work schedule">
<kw name="Delete work schedule" library="employee">
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.746" level="INFO">${list_format} = [50000000298003]</msg>
<status status="PASS" starttime="20220215 15:43:32.746" endtime="20220215 15:43:32.746"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_del_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_del_work_schedule}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 15:43:32.746" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:32.746" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 15:43:32.746" endtime="20220215 15:43:32.746"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.747" level="INFO">${value_temp} = 50000000298003</msg>
<status status="PASS" starttime="20220215 15:43:32.747" endtime="20220215 15:43:32.747"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 15:43:32.747" level="INFO">${value_temp} = 50000000298003</msg>
<status status="PASS" starttime="20220215 15:43:32.747" endtime="20220215 15:43:32.747"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 15:43:32.747" level="INFO">${data_format} = {"Id":50000000298003}</msg>
<status status="PASS" starttime="20220215 15:43:32.747" endtime="20220215 15:43:32.747"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.747" endtime="20220215 15:43:32.747"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.746" endtime="20220215 15:43:32.747"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 15:43:32.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:32.748" endtime="20220215 15:43:32.748"></status>
</kw>
<msg timestamp="20220215 15:43:32.748" level="INFO">${data_del_work_schedule} = {"Id":50000000298003}</msg>
<status status="PASS" starttime="20220215 15:43:32.746" endtime="20220215 15:43:32.748"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_delete_work_schedule}</arg>
<arg>${data_del_work_schedule}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:33.731" level="INFO">Put Request using : alias=session, uri=/timesheets/cancelTimeSheet, data={"Id":50000000298003},                     headers={'retailer': 'testz12', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '87401', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoyMzQxNDcsImlhdCI6MTY0NDkxNDYxMCwiZXhwIjoxNjQ3MzMzODEwLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiIzN2RjM2NiZjE4Yzc0OGQ1ODk3ODVjMzJlYzdmYjFiYyIsImt2dWlkIjoyMzQxNDcsImt2bGFuZyI6InZpLVZOIiwia3Z1dHlwZSI6MCwia3Z1bGltaXQiOiJGYWxzZSIsImt2dWFkbWluIjoiVHJ1ZSIsImt2dWFjdCI6IlRydWUiLCJrdnVsaW1pdHRyYW5zIjoiRmFsc2UiLCJrdnVzaG93c3VtIjoiVHJ1ZSIsImt2YmlkIjo4NzQwMSwia3ZyaW5kaWQiOjExLCJrdnJjb2RlIjoidGVzdHoxMiIsImt2cmlkIjo1NTk1NSwia3Z1cmlkIjo1NTk1NSwia3ZyZ2lkIjoxMiwicGVybXMiOiIifQ.FAEe-CiqBqWmZGH2guztLz7S4yQdIANft3C9ZGE0FExQApM37g00Wi2C8NZ6ysMbUJNKhFLuC3ZWbM_MzPYAoXsJCZpI1IM5DfFiDn6HTLu34Xb0qIK-0xVQjUwEErCUc9C8M6RStZwHlbKKigNjcZK_9CD9mL6U_WVpnNTyQBEwWCM3klbcHpskM_YB6QOM_EmQZTaFM6LI24eai6UWCfG6HlkGro56LCdQH8OSbu9motCbEAQEWv_dwcCrGS1_dChDUxRwEWWHEQ19PtUxX1sXkSOSMkcV0cszy7dOOhnQu02QNykx5Lw7P6q1ktuVYUgpO9NCitnwAsIEmKRbNA'}, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:33.731" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:33.732" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:32.748" endtime="20220215 15:43:33.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.733" level="INFO">{'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220215 15:43:33.732" endtime="20220215 15:43:33.733"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.733" endtime="20220215 15:43:33.734"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.734" endtime="20220215 15:43:33.735"></status>
</kw>
<msg timestamp="20220215 15:43:33.735" level="INFO">${resp} = {'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220215 15:43:32.748" endtime="20220215 15:43:33.735"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_validate}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:33.763" level="INFO">${result} = ['Hủy lịch làm việc thành công']</msg>
<status status="PASS" starttime="20220215 15:43:33.736" endtime="20220215 15:43:33.763"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 15:43:33.763" level="INFO">Length is 1</msg>
<msg timestamp="20220215 15:43:33.764" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 15:43:33.763" endtime="20220215 15:43:33.764"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 15:43:33.764" level="INFO">${result} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220215 15:43:33.764" endtime="20220215 15:43:33.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.764" endtime="20220215 15:43:33.764"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:33.764" endtime="20220215 15:43:33.764"></status>
</kw>
<msg timestamp="20220215 15:43:33.764" level="INFO">${mess_validate} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220215 15:43:33.736" endtime="20220215 15:43:33.764"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_validate}</arg>
<arg>Hủy lịch làm việc thành công</arg>
</arguments>
<status status="PASS" starttime="20220215 15:43:33.765" endtime="20220215 15:43:33.765"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:32.745" endtime="20220215 15:43:33.765"></status>
</kw>
<doc>Xóa lịch làm việc của nhân viên tại tab lịch làm việc của màn hình nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee1</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:32.745" endtime="20220215 15:43:33.765" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Delete employee">
<kw name="Get Random ID Employee" library="employee">
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:33.832" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220215 15:43:33.832" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:33.832" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.766" endtime="20220215 15:43:33.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.833" level="INFO">{'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:14:17.6200000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366494, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213727}]}, {'id': 180000000000405, 'code': 'NV000058', 'name': '3333333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': '72396B3C315C440C34F4FB66FE228378F560EE6A64718901DF63C714DB80C467', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2021-03-01T15:27:24.9970000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T10:05:31.6050000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 180000000000405}, {'id': 180000000005705, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 180000000000405}]}, {'id': 160000000213804, 'code': 'NV000108', 'name': 'Phước 4', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:26:07.4300000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-14T16:30:08.0170000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366504, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213804}]}, {'id': 140000000106018, 'code': 'NV000110', 'name': 'AA', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-02-10T15:16:23.8100000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:44:23.8010000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000215621, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 140000000106018}]}, {'id': 80000000135805, 'code': 'NV62963274', 'name': 'IBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2022-02-15T15:43:30.6900000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177505, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 80000000135805}]}, {'id': 120000000126285, 'code': 'NV86635237', 'name': 'jKzu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T09:48:09.4030000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:48:10.7440000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191611, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 120000000126285}]}, {'id': 60000000180048, 'code': 'NV000086', 'name': 'kkkk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-05-20T08:51:21.2900000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-13T21:48:08.2960000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001416350, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 60000000180048}]}, {'id': 150000000109109, 'code': 'NV000113_1', 'name': 'NV000113_1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:35:26.2770000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001014630, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 150000000109109}]}, {'id': 40000000002224, 'code': 'NV000020', 'name': 'nv6', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 60000000144302, 'department': {'id': 60000000144302, 'name': 'Phòng 1', 'description': '', 'isActive': True, 'tenantId': 55955, 'createdBy': 234147, 'createdDate': '2021-01-21T09:43:07.3400000+07:00', 'isDeleted': False}, 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:46.7230000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-12T22:03:08.0280000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': 'Phòng 1', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000033501, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 40000000002224}]}, {'id': 160000000213801, 'code': 'NV000105', 'name': 'Phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:27:20.9830000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:29:42.6600000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366501, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213801}]}, {'id': 160000000213803, 'code': 'NV000107', 'name': 'Phuoc3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:46:09.7970000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T15:01:50.1290000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366503, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213803}]}, {'id': 160000000213805, 'code': 'NV000109', 'name': 'Phuoc5', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T16:32:16.8770000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-10T15:12:05.5080000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366505, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213805}]}, {'id': 160000000213901, 'code': 'NV000106', 'name': 'Phươc2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-27T14:35:01.2970000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-15T15:43:32.5560000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366601, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213901}]}, {'id': 160000000213710, 'code': 'NV89174442', 'name': 'qxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T09:01:16.8400000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366473, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213710}]}, {'id': 160000000213704, 'code': 'NV63500086', 'name': 'rtZE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:38:52.9200000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366466, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213704}]}, {'id': 110000000121585, 'code': 'NV000104', 'name': 'SBD', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-20T11:17:10.8600000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-27T14:23:12.3160000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000001023526, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121585}]}, {'id': 50000000124571, 'code': 'NV000102', 'name': 'testcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402999, 'createdBy': 234147, 'createdDate': '2021-07-09T16:43:57.4800000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:33:36.1110000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000213467, 'tenantId': 55955, 'branchId': 402999, 'employeeId': 50000000124571}]}, {'id': 160000000005601, 'code': 'NV000007', 'name': 'Tin', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402876, 'createdBy': 234147, 'createdDate': '2020-02-24T23:56:04.2720000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000142101, 'tenantId': 55955, 'branchId': 402876, 'employeeId': 160000000005601}]}, {'id': 36368, 'code': 'UD04845189', 'name': 'UpdateeaMl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:20.5500000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T20:10:39.4600000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366462, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36368}]}, {'id': 30000000124351, 'code': 'UD71619774', 'name': 'UpdateESXj', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T21:21:04.3070000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.3750000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256555, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 30000000124351}]}, {'id': 160000000213707, 'code': 'UD62963274', 'name': 'UpdateIBNZ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:42:51.6170000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-02-15T15:43:31.9670000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329040, 'tenantId': 55955, 'branchId': 87401, 'employeeId': 160000000213707}]}, {'id': 36257, 'code': 'UD15710512', 'name': 'UpdateqqcE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 87401, 'createdBy': 234147, 'createdDate': '2020-06-30T17:36:51.2570000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T09:45:00.1260000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235474, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 36257}]}, {'id': 90000001072665, 'code': 'UD89174442', 'name': 'Updateqxsk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-13T22:01:13.0500000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T09:01:18.3310000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366418, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 90000001072665}]}, {'id': 160000000213703, 'code': 'UD24162114', 'name': 'UpdateycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:37:00.3770000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-15T22:43:38.1320000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366465, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213703}]}, {'id': 60000000001803, 'code': 'UD07554618', 'name': 'UpdateZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 402841, 'createdBy': 234147, 'createdDate': '2020-02-13T03:11:22.8250000+07:00', 'modifiedBy': 234147, 'modifiedDate': '2022-01-16T08:59:57.4660000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 234147, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000235423, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 60000000001803}]}, {'id': 110000000121505, 'code': 'NV24162114', 'name': 'ycEw', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-15T22:43:36.9600000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191634, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 110000000121505}]}, {'id': 160000000213709, 'code': 'NV07554618', 'name': 'ZjgX', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-16T08:59:55.8830000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000366472, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213709}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:33.832" endtime="20220215 15:43:33.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:33.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.833" endtime="20220215 15:43:33.833"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.833" endtime="20220215 15:43:33.834"></status>
</kw>
<msg timestamp="20220215 15:43:33.834" level="INFO">${resp} = {'result': {'total': 27, 'data': [{'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220215 15:43:33.766" endtime="20220215 15:43:33.834"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:33.852" level="INFO">${list} = [160000000213727, 180000000000405, 160000000213804, 140000000106018, 80000000135805, 120000000126285, 60000000180048, 150000000109109, 40000000002224, 160000000213801, 160000000213803, 160000000213805...</msg>
<status status="PASS" starttime="20220215 15:43:33.834" endtime="20220215 15:43:33.853"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:33.853" level="INFO">${value} = 160000000213727</msg>
<status status="PASS" starttime="20220215 15:43:33.853" endtime="20220215 15:43:33.853"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.854" endtime="20220215 15:43:33.854"></status>
</kw>
<msg timestamp="20220215 15:43:33.854" level="INFO">${id_employee} = 160000000213727</msg>
<status status="PASS" starttime="20220215 15:43:33.765" endtime="20220215 15:43:33.854"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:33.948" level="INFO">Get Request using : alias=session, uri=/employees/160000000213727, headers=None json=None</msg>
<msg timestamp="20220215 15:43:33.948" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:33.948" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.855" endtime="20220215 15:43:33.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.949" level="INFO">{'result': {'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 55955, 'branchId': 302728, 'createdBy': 234147, 'createdDate': '2022-01-17T09:14:17.6200000', 'isDeleted': False, 'clockings': [{'id': 210000002269744, 'shiftId': 220000000002249, 'timeSheetId': 50000000284556, 'employeeId': 160000000213727, 'workById': 160000000213727, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 210000002269747, 'shiftId': 220000000002249, 'timeSheetId': 50000000284556, 'employeeId': 160000000213727, 'workById': 160000000213727, 'clockingStatus': 3, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2022-01-07T07:00:00.0000000', 'checkOutDate': '2022-01-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 210000002269746, 'shiftId': 220000000002249, 'timeSheetId': 50000000284556, 'employeeId': 160000000213727, 'workById': 160000000213727, 'clockingStatus': 3, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2022-01-06T07:00:00.0000000', 'checkOutDate': '2022-01-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 210000002269745, 'shiftId': 220000000002249, 'timeSheetId': 50000000284556, 'employeeId': 160000000213727, 'workById': 160000000213727, 'clockingStatus': 3, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'branchId': 302728, 'tenantId': 55955, 'isDeleted': False, 'checkInDate': '2022-01-05T07:00:00.0000000', 'checkOutDate': '2022-01-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 160000000366494, 'tenantId': 55955, 'branchId': 302728, 'employeeId': 160000000213727}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 15:43:33.948" endtime="20220215 15:43:33.949"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 15:43:33.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.949" endtime="20220215 15:43:33.949"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.949" endtime="20220215 15:43:33.949"></status>
</kw>
<msg timestamp="20220215 15:43:33.950" level="INFO">${resp} = {'result': {'id': 160000000213727, 'code': 'NV000103', 'name': '111', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardNa...</msg>
<status status="PASS" starttime="20220215 15:43:33.854" endtime="20220215 15:43:33.950"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 15:43:33.967" level="INFO">${list} = ['NV000103']</msg>
<status status="PASS" starttime="20220215 15:43:33.950" endtime="20220215 15:43:33.967"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 15:43:33.967" level="INFO">${value} = NV000103</msg>
<status status="PASS" starttime="20220215 15:43:33.967" endtime="20220215 15:43:33.967"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.968" endtime="20220215 15:43:33.968"></status>
</kw>
<msg timestamp="20220215 15:43:33.968" level="INFO">${code_employee} = NV000103</msg>
<status status="PASS" starttime="20220215 15:43:33.854" endtime="20220215 15:43:33.968"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 15:43:33.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:33.968" endtime="20220215 15:43:33.968"></status>
</kw>
<msg timestamp="20220215 15:43:33.968" level="INFO">${id_employee} = 160000000213727</msg>
<status status="PASS" starttime="20220215 15:43:33.765" endtime="20220215 15:43:33.968"></status>
</kw>
<kw name="Delete Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>200</arg>
</arguments>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 15:43:34.418" level="INFO">Delete Request using : alias=session, uri=/employees/160000000213727, data=(),                     headers=None, allow_redirects=True </msg>
<msg timestamp="20220215 15:43:34.418" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 15:43:34.419" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 15:43:33.968" endtime="20220215 15:43:34.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:34.419" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220215 15:43:34.419" endtime="20220215 15:43:34.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 15:43:34.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 15:43:34.419" endtime="20220215 15:43:34.419"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 15:43:34.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 15:43:34.419" endtime="20220215 15:43:34.420"></status>
</kw>
<status status="PASS" starttime="20220215 15:43:33.968" endtime="20220215 15:43:34.420"></status>
</kw>
<doc>Xóa 1 nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 15:43:33.765" endtime="20220215 15:43:34.420" critical="yes"></status>
</test>
<status status="PASS" starttime="20220215 15:43:28.960" endtime="20220215 15:43:34.420"></status>
</suite>
<status status="PASS" starttime="20220215 15:43:28.959" endtime="20220215 15:43:34.422"></status>
</suite>
<status status="PASS" starttime="20220215 15:43:28.942" endtime="20220215 15:43:34.423"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">all</stat>
<stat pass="7" fail="0">employee</stat>
<stat pass="1" fail="0">employee1</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="8" fail="0" id="s1-s1-s1" name="Employee">Testsuites.NhanVien.Employee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
