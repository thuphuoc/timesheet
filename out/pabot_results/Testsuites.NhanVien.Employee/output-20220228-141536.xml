<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220228 14:15:36.201">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Employee" source="D:\timesheet\testsuites\NhanVien\employee.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone61=https://testz61.kiotviet.vn/api</arg>
<arg>zone21=https://testz221.kiotviet.vn/api</arg>
<arg>zone9=https://taphoa.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>zone59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>zone59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb59508=https://phuoc59508.kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:36.396" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone61': 'https://test...</msg>
<status status="PASS" starttime="20220228 14:15:36.396" endtime="20220228 14:15:36.396"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>zone61=/auth/salelogin</arg>
<arg>zone21=/auth/salelogin</arg>
<arg>zone9=/auth/salelogin</arg>
<arg>zone59902=/auth/salelogin</arg>
<arg>zone59903=/auth/salelogin</arg>
<arg>fnb59508=/auth/salelogin</arg>
<arg>booking=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:36.397" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', 'zone61': '/auth/salelogin', 'zone21': '/auth/salelogin'...</msg>
<status status="PASS" starttime="20220228 14:15:36.397" endtime="20220228 14:15:36.397"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>zone61=https://api-timesheet.kiotviet.vn</arg>
<arg>zone21=https://api-timesheet.kiotviet.vn</arg>
<arg>zone9=https://api-timesheet2.kiotviet.vn</arg>
<arg>zone59902=https://kvpos.com:55002</arg>
<arg>zone59903=https://kvpos.com:55003</arg>
<arg>fnb59508=https://kvpos.com:55008</arg>
<arg>booking=https://timesheetapi.kvpos.com:9009</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220228 14:15:36.397" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220228 14:15:36.397" endtime="20220228 14:15:36.397"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>zone61=https://api-man3.kiotviet.vn/api</arg>
<arg>zone21=https://api-man3.kiotviet.vn/api</arg>
<arg>zone9=https://api-man3.kiotviet.vn/api</arg>
<arg>zone59902=https://kvpos.com:59932/api</arg>
<arg>zone59903=https://kvpos.com:59933/api</arg>
<arg>fnb59508=https://kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220228 14:15:36.398" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220228 14:15:36.397" endtime="20220228 14:15:36.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=admin</arg>
<arg>zone21=admin</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220228 14:15:36.398" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', 'zone9': 'taphoa', 'zone61': 'admin', 'zone21': 'admin', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '...</msg>
<status status="PASS" starttime="20220228 14:15:36.398" endtime="20220228 14:15:36.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>zone9=123456</arg>
<arg>zone61=123456</arg>
<arg>zone21=123456</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220228 14:15:36.398" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', 'zone9': '123456', 'zone61': '123456', 'zone21': '123456', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1'...</msg>
<status status="PASS" starttime="20220228 14:15:36.398" endtime="20220228 14:15:36.398"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=testz61</arg>
<arg>zone21=testz221</arg>
<arg>zone59902=phuoc902</arg>
<arg>zone59903=phuoc903</arg>
<arg>fnb59508=phuoc59508</arg>
<arg>booking=phuoc009</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220228 14:15:36.399" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', 'zone9': 'taphoa', 'zone61': 'testz61', 'zone21': 'testz221', 'zone59902': 'phuoc902', 'zone59903': ...</msg>
<status status="PASS" starttime="20220228 14:15:36.398" endtime="20220228 14:15:36.399"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220228 14:15:36.399" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 14:15:36.399" endtime="20220228 14:15:36.399"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220228 14:15:36.399" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:36.399" endtime="20220228 14:15:36.399"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220228 14:15:36.400" level="INFO">${retailer} = testz221</msg>
<status status="PASS" starttime="20220228 14:15:36.399" endtime="20220228 14:15:36.400"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:36.400" level="INFO">${url_saleLogin} = https://testz221.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:36.400" endtime="20220228 14:15:36.400"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:36.400" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 14:15:36.400" endtime="20220228 14:15:36.400"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220228 14:15:36.400" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 14:15:36.400" endtime="20220228 14:15:36.400"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220228 14:15:36.401" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:36.401" endtime="20220228 14:15:36.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.401" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 14:15:36.401" endtime="20220228 14:15:36.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.401" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:36.401" endtime="20220228 14:15:36.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.402" level="INFO">${retailer} = testz221</msg>
<status status="PASS" starttime="20220228 14:15:36.401" endtime="20220228 14:15:36.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.402" level="INFO">${url_saleLogin} = https://testz221.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:36.402" endtime="20220228 14:15:36.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.402" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 14:15:36.402" endtime="20220228 14:15:36.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.402" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 14:15:36.402" endtime="20220228 14:15:36.402"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.403" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:36.402" endtime="20220228 14:15:36.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 14:15:36.403" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220228 14:15:36.403" endtime="20220228 14:15:36.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:36.403" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123456'}</msg>
<status status="PASS" starttime="20220228 14:15:36.403" endtime="20220228 14:15:36.403"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:36.404" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz221.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:36.403" endtime="20220228 14:15:36.404"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:37.027" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123456"}, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:37.027" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz221.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:37.027" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:36.404" endtime="20220228 14:15:37.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.029" level="INFO">{'UserId': 103, 'UserName': 'admin', 'SessionId': 'RbfygoglmO10mzIMacbI', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA', 'CurrentBranchId': 37, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220228 14:15:37.028" endtime="20220228 14:15:37.029"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:37.061" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia...</msg>
<status status="PASS" starttime="20220228 14:15:37.031" endtime="20220228 14:15:37.061"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:37.062" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:37.062" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:37.061" endtime="20220228 14:15:37.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:37.062" endtime="20220228 14:15:37.062"></status>
</kw>
<msg timestamp="20220228 14:15:37.063" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3Z...</msg>
<status status="PASS" starttime="20220228 14:15:37.062" endtime="20220228 14:15:37.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.063" endtime="20220228 14:15:37.063"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.063" endtime="20220228 14:15:37.063"></status>
</kw>
<msg timestamp="20220228 14:15:37.063" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3Z...</msg>
<status status="PASS" starttime="20220228 14:15:37.029" endtime="20220228 14:15:37.063"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220228 14:15:37.064" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIi...</msg>
<status status="PASS" starttime="20220228 14:15:37.063" endtime="20220228 14:15:37.064"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:37.083" level="INFO">${result} = [103]</msg>
<status status="PASS" starttime="20220228 14:15:37.064" endtime="20220228 14:15:37.083"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:37.083" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:37.083" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:37.083" endtime="20220228 14:15:37.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:37.083" endtime="20220228 14:15:37.084"></status>
</kw>
<msg timestamp="20220228 14:15:37.084" level="INFO">${result} = 103</msg>
<status status="PASS" starttime="20220228 14:15:37.083" endtime="20220228 14:15:37.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.084" endtime="20220228 14:15:37.084"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.084" endtime="20220228 14:15:37.084"></status>
</kw>
<msg timestamp="20220228 14:15:37.084" level="INFO">${user_login} = 103</msg>
<status status="PASS" starttime="20220228 14:15:37.064" endtime="20220228 14:15:37.084"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.085" level="INFO">${user_login} = 103</msg>
<status status="PASS" starttime="20220228 14:15:37.084" endtime="20220228 14:15:37.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.085" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIi...</msg>
<status status="PASS" starttime="20220228 14:15:37.085" endtime="20220228 14:15:37.085"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220228 14:15:37.085" level="INFO">${random_str} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:37.085" endtime="20220228 14:15:37.085"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.085" endtime="20220228 14:15:37.086"></status>
</kw>
<msg timestamp="20220228 14:15:37.086" level="INFO">${random_str} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:37.085" endtime="20220228 14:15:37.086"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.086" level="INFO">${random_str} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:37.086" endtime="20220228 14:15:37.086"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220228 14:15:37.086" level="INFO">${random_number} = 13827152</msg>
<status status="PASS" starttime="20220228 14:15:37.086" endtime="20220228 14:15:37.086"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.087" endtime="20220228 14:15:37.087"></status>
</kw>
<msg timestamp="20220228 14:15:37.087" level="INFO">${random_number} = 13827152</msg>
<status status="PASS" starttime="20220228 14:15:37.086" endtime="20220228 14:15:37.087"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.087" level="INFO">${random_number} = 13827152</msg>
<status status="PASS" starttime="20220228 14:15:37.087" endtime="20220228 14:15:37.087"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:37.109" level="INFO">${result} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:37.088" endtime="20220228 14:15:37.109"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:37.110" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:37.110" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:37.109" endtime="20220228 14:15:37.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:37.110" endtime="20220228 14:15:37.110"></status>
</kw>
<msg timestamp="20220228 14:15:37.110" level="INFO">${result} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.110" endtime="20220228 14:15:37.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.111" endtime="20220228 14:15:37.111"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.110" endtime="20220228 14:15:37.111"></status>
</kw>
<msg timestamp="20220228 14:15:37.111" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.087" endtime="20220228 14:15:37.111"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.112" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.111" endtime="20220228 14:15:37.112"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<assign>
<var>${is_run_retail}</var>
<var>${value}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:37.112" endtime="20220228 14:15:37.112"></status>
</kw>
<msg timestamp="20220228 14:15:37.112" level="INFO">${is_run_retail} = PASS</msg>
<msg timestamp="20220228 14:15:37.112" level="INFO">${value} = None</msg>
<status status="PASS" starttime="20220228 14:15:37.112" endtime="20220228 14:15:37.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${is_run_retail}' == 'PASS'</arg>
<arg>${true}</arg>
<arg>${false}</arg>
</arguments>
<assign>
<var>${run}</var>
</assign>
<msg timestamp="20220228 14:15:37.112" level="INFO">${run} = True</msg>
<status status="PASS" starttime="20220228 14:15:37.112" endtime="20220228 14:15:37.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${run}'=='True'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb Or Booking</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RunRetail</arg>
</arguments>
<msg timestamp="20220228 14:15:37.113" level="INFO">RunRetail</msg>
<status status="PASS" starttime="20220228 14:15:37.113" endtime="20220228 14:15:37.113"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.113" endtime="20220228 14:15:37.113"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 14:15:37.114" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.114" endtime="20220228 14:15:37.114"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 14:15:37.114" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViI...</msg>
<status status="PASS" starttime="20220228 14:15:37.114" endtime="20220228 14:15:37.114"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220228 14:15:37.115" level="INFO">${headers_not_contenType} = {'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODE...</msg>
<status status="PASS" starttime="20220228 14:15:37.114" endtime="20220228 14:15:37.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.115" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViI...</msg>
<status status="PASS" starttime="20220228 14:15:37.115" endtime="20220228 14:15:37.115"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.115" level="INFO">${headers_not_contenType} = {'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODE...</msg>
<status status="PASS" starttime="20220228 14:15:37.115" endtime="20220228 14:15:37.115"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.115" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:37.115" endtime="20220228 14:15:37.116"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.116" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man3.kiotviet.vn/api, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:37.116" endtime="20220228 14:15:37.116"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220228 14:15:37.117" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220228 14:15:37.116" endtime="20220228 14:15:37.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220228 14:15:37.118" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220228 14:15:37.117" endtime="20220228 14:15:37.118"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:37.627" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/37, headers=None json=None</msg>
<msg timestamp="20220228 14:15:37.627" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-man3.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:37.627" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:37.118" endtime="20220228 14:15:37.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.627" level="INFO">{'Id': 37, 'Name': 'Chi nhánh trung tâm', 'Type': 0, 'Address': '221 Đội Cấn', 'Province': 'Hà Nội', 'District': 'Quận Ba Đình', 'ContactNumber': '0987654321', 'IsActive': True, 'RetailerId': 916276, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Hà Nội - Quận Ba Đình', 'WardName': 'Phường Đội Cấn', 'isAcceptBookClosing': False, 'GmbStatus': 2, 'GmbLocationName': 'locations/13772733012578985132', 'GmbEmail': 'dung.pt@citigo.com.vn', 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'OrderSuppliers': [], 'WarrantyBranchGroups': [], 'BranchTakingAddresses': [], 'Patients': [], 'Clinics': [], 'Doctors': [], 'DoctorQualifications': [], 'DoctorSpecialities': [], 'Prescriptions': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'IdOld': 0, 'TotalUser': 0, 'CompareBranchName': 'Chi nhánh trung tâm', 'StatusGmbValue': 'Chờ xác thực', 'IsTimeSheetException': False, 'LocationId': 0, 'WardId': 0, 'SyncProductSearchEventId': 0}</msg>
<status status="PASS" starttime="20220228 14:15:37.627" endtime="20220228 14:15:37.627"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220228 14:15:37.654" level="INFO">${name} = ['Chi nhánh trung tâm']</msg>
<status status="PASS" starttime="20220228 14:15:37.627" endtime="20220228 14:15:37.654"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.654" endtime="20220228 14:15:37.654"></status>
</kw>
<msg timestamp="20220228 14:15:37.654" level="INFO">${name_branch} = ['Chi nhánh trung tâm']</msg>
<status status="PASS" starttime="20220228 14:15:37.118" endtime="20220228 14:15:37.654"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.113" endtime="20220228 14:15:37.654"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:36.396" endtime="20220228 14:15:37.654"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create employee">
<kw name="Create Employee" library="employee">
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>100000</arg>
<arg>200</arg>
<arg>300</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${code_employee}</arg>
<arg>${name_employee}</arg>
<arg>${branchId_salary}</arg>
<arg>${branchId_work}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.655" level="INFO">${list_format} = ['1235698', 'NV13827152', 'VXgk', 37, 37]</msg>
<status status="PASS" starttime="20220228 14:15:37.655" endtime="20220228 14:15:37.655"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${default}</arg>
<arg>${value_holiday}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${list_salary}</var>
</assign>
<msg timestamp="20220228 14:15:37.656" level="INFO">${list_salary} = ['100000', '200', '300']</msg>
<status status="PASS" starttime="20220228 14:15:37.655" endtime="20220228 14:15:37.656"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:37.656" level="INFO">Length is 5</msg>
<msg timestamp="20220228 14:15:37.656" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 14:15:37.656" endtime="20220228 14:15:37.656"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.657" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:37.656" endtime="20220228 14:15:37.657"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.657" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:37.657" endtime="20220228 14:15:37.657"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.657" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:37.657" endtime="20220228 14:15:37.657"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.656" endtime="20220228 14:15:37.657"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.658" level="INFO">${value_temp} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:37.657" endtime="20220228 14:15:37.658"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.658" level="INFO">${value_temp} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:37.658" endtime="20220228 14:15:37.658"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.658" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:37.658" endtime="20220228 14:15:37.658"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.657" endtime="20220228 14:15:37.658"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.658" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:37.658" endtime="20220228 14:15:37.658"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.659" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:37.659" endtime="20220228 14:15:37.659"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.659" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":"VXgk","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:37.659" endtime="20220228 14:15:37.659"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.658" endtime="20220228 14:15:37.659"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.659" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.659" endtime="20220228 14:15:37.659"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.659" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.659" endtime="20220228 14:15:37.660"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.660" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:37.660" endtime="20220228 14:15:37.660"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.659" endtime="20220228 14:15:37.660"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.660" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.660" endtime="20220228 14:15:37.660"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.661" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:37.660" endtime="20220228 14:15:37.661"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.661" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:37.661" endtime="20220228 14:15:37.661"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.660" endtime="20220228 14:15:37.661"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.656" endtime="20220228 14:15:37.661"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.661" endtime="20220228 14:15:37.661"></status>
</kw>
<msg timestamp="20220228 14:15:37.661" level="INFO">${data} = {"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:37.656" endtime="20220228 14:15:37.661"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_set_salary}</arg>
<arg>${list_salary}</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:37.662" level="INFO">Length is 3</msg>
<msg timestamp="20220228 14:15:37.662" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 14:15:37.661" endtime="20220228 14:15:37.662"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.662" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220228 14:15:37.662" endtime="20220228 14:15:37.662"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.662" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220228 14:15:37.662" endtime="20220228 14:15:37.662"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.663" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":[D1],"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"valu...</msg>
<status status="PASS" starttime="20220228 14:15:37.662" endtime="20220228 14:15:37.663"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.662" endtime="20220228 14:15:37.663"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.663" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220228 14:15:37.663" endtime="20220228 14:15:37.663"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.663" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220228 14:15:37.663" endtime="20220228 14:15:37.663"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.663" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 14:15:37.663" endtime="20220228 14:15:37.664"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.663" endtime="20220228 14:15:37.664"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.664" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220228 14:15:37.664" endtime="20220228 14:15:37.664"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:37.664" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220228 14:15:37.664" endtime="20220228 14:15:37.664"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:37.664" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 14:15:37.664" endtime="20220228 14:15:37.664"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.664" endtime="20220228 14:15:37.664"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:37.662" endtime="20220228 14:15:37.664"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:37.664" endtime="20220228 14:15:37.665"></status>
</kw>
<msg timestamp="20220228 14:15:37.665" level="INFO">${data_set_salary} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 14:15:37.661" endtime="20220228 14:15:37.665"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 14:15:37.665" level="INFO">${data} = (None, '{"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:37.665" endtime="20220228 14:15:37.665"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data_set_salary}')</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<msg timestamp="20220228 14:15:37.665" level="INFO">${data_set_salary} = (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":...</msg>
<status status="PASS" starttime="20220228 14:15:37.665" endtime="20220228 14:15:37.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.665" level="INFO">(None, '{"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:37.665" endtime="20220228 14:15:37.665"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
<arg>payRate=${data_set_salary}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 14:15:37.666" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDe...</msg>
<status status="PASS" starttime="20220228 14:15:37.666" endtime="20220228 14:15:37.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 14:15:37.666" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}</msg>
<status status="PASS" starttime="20220228 14:15:37.666" endtime="20220228 14:15:37.666"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:38.427" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV13827152","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:38.427" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:38.427" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:37.666" endtime="20220228 14:15:38.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.428" level="INFO">{'result': {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, 'message': 'Tạo nhân viên thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:38.428" endtime="20220228 14:15:38.428"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:38.428" endtime="20220228 14:15:38.428"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.429" endtime="20220228 14:15:38.429"></status>
</kw>
<msg timestamp="20220228 14:15:38.429" level="INFO">${resp} = {'result': {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220228 14:15:37.666" endtime="20220228 14:15:38.429"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:38.446" level="INFO">${result} = [50000000129027]</msg>
<status status="PASS" starttime="20220228 14:15:38.429" endtime="20220228 14:15:38.446"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.446" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:38.446" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:38.446" endtime="20220228 14:15:38.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.447" endtime="20220228 14:15:38.447"></status>
</kw>
<msg timestamp="20220228 14:15:38.447" level="INFO">${result} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:38.446" endtime="20220228 14:15:38.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.447" endtime="20220228 14:15:38.447"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.447" endtime="20220228 14:15:38.447"></status>
</kw>
<msg timestamp="20220228 14:15:38.447" level="INFO">${id_employee} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:38.429" endtime="20220228 14:15:38.447"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:38.465" level="INFO">${result} = ['NV13827152']</msg>
<status status="PASS" starttime="20220228 14:15:38.448" endtime="20220228 14:15:38.465"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.465" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:38.465" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:38.465" endtime="20220228 14:15:38.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.465" endtime="20220228 14:15:38.466"></status>
</kw>
<msg timestamp="20220228 14:15:38.466" level="INFO">${result} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.465" endtime="20220228 14:15:38.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.466" endtime="20220228 14:15:38.466"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.466" endtime="20220228 14:15:38.466"></status>
</kw>
<msg timestamp="20220228 14:15:38.466" level="INFO">${code_employee} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.448" endtime="20220228 14:15:38.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${code_employee}</arg>
<arg>${code_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.467" level="INFO">${code_employee} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.466" endtime="20220228 14:15:38.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.467" level="INFO">${id_employee} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:38.467" endtime="20220228 14:15:38.467"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 14:15:38.467" level="INFO">${branchId} = 37.0</msg>
<status status="PASS" starttime="20220228 14:15:38.467" endtime="20220228 14:15:38.467"></status>
</kw>
<kw name="Verify Input And Output Employee" library="employee">
<arguments>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
</arguments>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:38.721" level="INFO">Get Request using : alias=session, uri=/employees/50000000129027, headers=None json=None</msg>
<msg timestamp="20220228 14:15:38.723" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:38.723" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:38.468" endtime="20220228 14:15:38.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.724" level="INFO">{'result': {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:38.723" endtime="20220228 14:15:38.724"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:38.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:38.724" endtime="20220228 14:15:38.724"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.724" endtime="20220228 14:15:38.724"></status>
</kw>
<msg timestamp="20220228 14:15:38.725" level="INFO">${resp} = {'result': {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220228 14:15:38.468" endtime="20220228 14:15:38.725"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:38.743" level="INFO">${result} = ['NV13827152']</msg>
<status status="PASS" starttime="20220228 14:15:38.725" endtime="20220228 14:15:38.743"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.743" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:38.743" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:38.743" endtime="20220228 14:15:38.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.744" endtime="20220228 14:15:38.744"></status>
</kw>
<msg timestamp="20220228 14:15:38.744" level="INFO">${result} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.743" endtime="20220228 14:15:38.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.744" endtime="20220228 14:15:38.744"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.744" endtime="20220228 14:15:38.744"></status>
</kw>
<msg timestamp="20220228 14:15:38.744" level="INFO">${code_output} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.725" endtime="20220228 14:15:38.744"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.name</arg>
</arguments>
<assign>
<var>${name_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:38.764" level="INFO">${result} = ['VXgk']</msg>
<status status="PASS" starttime="20220228 14:15:38.745" endtime="20220228 14:15:38.764"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.764" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:38.764" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:38.764" endtime="20220228 14:15:38.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.765" endtime="20220228 14:15:38.765"></status>
</kw>
<msg timestamp="20220228 14:15:38.765" level="INFO">${result} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:38.764" endtime="20220228 14:15:38.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.765" endtime="20220228 14:15:38.765"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.765" endtime="20220228 14:15:38.765"></status>
</kw>
<msg timestamp="20220228 14:15:38.766" level="INFO">${name_output} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:38.744" endtime="20220228 14:15:38.766"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.branchId</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:38.787" level="INFO">${result} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:38.766" endtime="20220228 14:15:38.787"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.787" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:38.788" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:38.787" endtime="20220228 14:15:38.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.788" endtime="20220228 14:15:38.788"></status>
</kw>
<msg timestamp="20220228 14:15:38.789" level="INFO">${result} = 37</msg>
<status status="PASS" starttime="20220228 14:15:38.788" endtime="20220228 14:15:38.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:38.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:38.791" endtime="20220228 14:15:38.791"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.789" endtime="20220228 14:15:38.791"></status>
</kw>
<msg timestamp="20220228 14:15:38.791" level="INFO">${branch_output} = 37</msg>
<status status="PASS" starttime="20220228 14:15:38.766" endtime="20220228 14:15:38.791"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<msg timestamp="20220228 14:15:38.791" level="INFO">${branch_output} = 37.0</msg>
<status status="PASS" starttime="20220228 14:15:38.791" endtime="20220228 14:15:38.791"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_input}</arg>
<arg>${name_input}</arg>
<arg>${branch_input}</arg>
</arguments>
<assign>
<var>${list_input}</var>
</assign>
<msg timestamp="20220228 14:15:38.792" level="INFO">${list_input} = ['NV13827152', 'VXgk', 37.0]</msg>
<status status="PASS" starttime="20220228 14:15:38.792" endtime="20220228 14:15:38.792"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_output}</arg>
<arg>${name_output}</arg>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${list_output}</var>
</assign>
<msg timestamp="20220228 14:15:38.792" level="INFO">${list_output} = ['NV13827152', 'VXgk', 37.0]</msg>
<status status="PASS" starttime="20220228 14:15:38.792" endtime="20220228 14:15:38.792"></status>
</kw>
<kw name="Verify List Input And Output" library="share">
<arguments>
<arg>${list_input}</arg>
<arg>${list_output}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listinput}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:38.793" level="INFO">Length is 3</msg>
<msg timestamp="20220228 14:15:38.793" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 14:15:38.792" endtime="20220228 14:15:38.793"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 14:15:38.793" level="INFO">${value_input} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.793" endtime="20220228 14:15:38.793"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 14:15:38.793" level="INFO">${value_output} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:38.793" endtime="20220228 14:15:38.793"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.793" endtime="20220228 14:15:38.793"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 14:15:38.794" level="INFO">${value_input} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:38.794" endtime="20220228 14:15:38.794"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 14:15:38.794" level="INFO">${value_output} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:38.794" endtime="20220228 14:15:38.794"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.793" endtime="20220228 14:15:38.794"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 14:15:38.794" level="INFO">${value_input} = 37.0</msg>
<status status="PASS" starttime="20220228 14:15:38.794" endtime="20220228 14:15:38.794"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 14:15:38.795" level="INFO">${value_output} = 37.0</msg>
<status status="PASS" starttime="20220228 14:15:38.795" endtime="20220228 14:15:38.795"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.794" endtime="20220228 14:15:38.795"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.793" endtime="20220228 14:15:38.795"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value_input}</arg>
<arg>${value_output}</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:38.795" endtime="20220228 14:15:38.795"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.792" endtime="20220228 14:15:38.795"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.467" endtime="20220228 14:15:38.795"></status>
</kw>
<msg timestamp="20220228 14:15:38.795" level="INFO">${resp} = None</msg>
<status status="PASS" starttime="20220228 14:15:37.655" endtime="20220228 14:15:38.795"></status>
</kw>
<doc>Tạo mới nhân viên và thiết lập lương ko có mẫu lương</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:37.654" endtime="20220228 14:15:38.795" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Create duplicate employee">
<kw name="Create Duplicate Employee" library="employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:39.082" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220228 14:15:39.082" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:39.082" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:38.802" endtime="20220228 14:15:39.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.083" level="INFO">{'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Vận hành', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T01:59:02.4300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Vận hành', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088712, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004212}]}, {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Vận hành', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T04:27:09.1330000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Vận hành', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088714, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004214}]}, {'id': 100000000004120, 'code': 'NV000009', 'name': '221', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Vận hành', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T16:22:24.6300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Vận hành', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088620, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004120}]}, {'id': 40000000110209, 'code': 'NV000002', 'name': 'nv app', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:06.0600000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:59:17.0210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236616, 'tenantId': 916276, 'branchId': 37, 'employeeId': 40000000110209}]}, {'id': 230000000015209, 'code': 'NV000013', 'name': 'thêm mới check audit', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:05:47.9230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898909, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015209}]}, {'id': 60000000186902, 'code': 'NV000010', 'name': 'cccccccc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-10T18:23:25.4570000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T15:27:40.3580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001423702, 'tenantId': 916276, 'branchId': 37, 'employeeId': 60000000186902}]}, {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-15T11:49:39.4330000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:58:46.8380000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011555403, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006403}]}, {'id': 110000000120852, 'code': 'NV000015', 'name': 'fđfbfd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T17:15:50.5400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000263758, 'tenantId': 916276, 'branchId': 37, 'employeeId': 110000000120852}]}, {'id': 230000000015213, 'code': 'NV000014', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 1000113059, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:12:49.2870000', 'modifiedBy': 103, 'modifiedDate': '2021-12-21T15:12:52.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015213}]}, {'id': 210000001006514, 'code': 'NV000005', 'name': 'Dung test', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Vận hành', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:46.7870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Vận hành', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011564314, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006514}]}, {'id': 120000000125511, 'code': 'NV000011', 'name': 'test123456', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 90000001011702, 'department': {'id': 90000001011702, 'name': 'phong 1', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:16.8700000', 'isDeleted': False}, 'jobTitleId': 90000001011902, 'jobTitle': {'id': 90000001011902, 'name': 'phong 2', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:23.0170000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:24.5270000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T16:06:25.9280000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'phong 1', 'jobTitleName': 'phong 2', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000234611, 'tenantId': 916276, 'branchId': 37, 'employeeId': 120000000125511}]}, {'id': 210000001013405, 'code': 'NV000012', 'name': 'bánh tét', 'isActive': True, 'identityNumber': '123', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': 'CDA5BA1C77DE8DCC956CA275E2D05B7AE0B2BA7B1EEBDD5C2F63B5BEC9A7DD50', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T14:25:56.6530000', 'modifiedBy': 0, 'modifiedDate': '2021-12-21T15:17:32.5260000', 'isDeleted': False, 'secretKeyTakenUserId': 103, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000012196205, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001013405}]}, {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:33.0970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107211}]}, {'id': 100000000107210, 'code': 'NV927562', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:28.6870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191912, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107210}]}, {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, {'id': 150000000103418, 'code': 'NV000003', 'name': 'nv web', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:20.9870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 150000003517625, 'tenantId': 916276, 'branchId': 37, 'employeeId': 150000000103418}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:39.082" endtime="20220228 14:15:39.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:39.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.083" endtime="20220228 14:15:39.083"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.083" endtime="20220228 14:15:39.083"></status>
</kw>
<msg timestamp="20220228 14:15:39.084" level="INFO">${resp} = {'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': ''...</msg>
<status status="PASS" starttime="20220228 14:15:38.802" endtime="20220228 14:15:39.084"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:39.102" level="INFO">${list} = ['NV000006', 'NV000007', 'NV000009', 'NV000002', 'NV000013', 'NV000010', 'NV000004', 'NV000015', 'NV000014', 'NV000005', 'NV000011', 'NV000012', 'NV133002', 'NV927562', 'NV13827152', 'NV000003']</msg>
<status status="PASS" starttime="20220228 14:15:39.084" endtime="20220228 14:15:39.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:39.106" level="INFO">${value} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:39.103" endtime="20220228 14:15:39.106"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.106" endtime="20220228 14:15:39.106"></status>
</kw>
<msg timestamp="20220228 14:15:39.106" level="INFO">${code_employee} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:38.802" endtime="20220228 14:15:39.106"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.106" level="INFO">${list_format} = ['1235698', 'NV000007', 'VXgk', 37, 37]</msg>
<status status="PASS" starttime="20220228 14:15:39.106" endtime="20220228 14:15:39.106"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:39.107" level="INFO">Length is 5</msg>
<msg timestamp="20220228 14:15:39.107" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.107"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.107" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.107"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.107" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.107"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.108" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.108"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.108"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.108" level="INFO">${value_temp} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:39.108" endtime="20220228 14:15:39.108"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.108" level="INFO">${value_temp} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:39.108" endtime="20220228 14:15:39.108"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.108" level="INFO">${data_format} = {"id":1235698,"code":"NV000007","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.108" endtime="20220228 14:15:39.109"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.108" endtime="20220228 14:15:39.109"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.109" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:39.109" endtime="20220228 14:15:39.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.109" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:39.109" endtime="20220228 14:15:39.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.109" level="INFO">${data_format} = {"id":1235698,"code":"NV000007","name":"VXgk","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.109" endtime="20220228 14:15:39.109"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.109" endtime="20220228 14:15:39.109"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.110" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.110" endtime="20220228 14:15:39.110"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.110" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.110" endtime="20220228 14:15:39.110"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.110" level="INFO">${data_format} = {"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.110" endtime="20220228 14:15:39.110"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.109" endtime="20220228 14:15:39.110"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.111" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.110" endtime="20220228 14:15:39.111"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.111" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.111" endtime="20220228 14:15:39.111"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.111" level="INFO">${data_format} = {"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:39.111" endtime="20220228 14:15:39.111"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.110" endtime="20220228 14:15:39.111"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.107" endtime="20220228 14:15:39.111"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.111" endtime="20220228 14:15:39.111"></status>
</kw>
<msg timestamp="20220228 14:15:39.111" level="INFO">${data} = {"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:39.106" endtime="20220228 14:15:39.111"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 14:15:39.112" level="INFO">${data} = (None, '{"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:39.112" endtime="20220228 14:15:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.112" level="INFO">(None, '{"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:39.112" endtime="20220228 14:15:39.112"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 14:15:39.112" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:39.112" endtime="20220228 14:15:39.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.113" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:39.112" endtime="20220228 14:15:39.113"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:39.269" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV000007","name":"VXgk","branchId":37,"userId":null,"workBranchIds":[37]}')}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:39.269" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:39.270" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.113" endtime="20220228 14:15:39.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.270" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 14:15:39.270" endtime="20220228 14:15:39.270"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.270" endtime="20220228 14:15:39.271"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.271" endtime="20220228 14:15:39.271"></status>
</kw>
<msg timestamp="20220228 14:15:39.271" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 14:15:39.113" endtime="20220228 14:15:39.271"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:39.288" level="INFO">${result} = ['Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220228 14:15:39.271" endtime="20220228 14:15:39.288"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:39.288" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:39.288" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:39.288" endtime="20220228 14:15:39.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:39.289" endtime="20220228 14:15:39.289"></status>
</kw>
<msg timestamp="20220228 14:15:39.289" level="INFO">${result} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220228 14:15:39.288" endtime="20220228 14:15:39.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.289" endtime="20220228 14:15:39.289"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.289" endtime="20220228 14:15:39.289"></status>
</kw>
<msg timestamp="20220228 14:15:39.289" level="INFO">${mess_err} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220228 14:15:39.271" endtime="20220228 14:15:39.290"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Mã nhân viên đã tồn tại trong cửa hàng</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:39.290" endtime="20220228 14:15:39.290"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:38.801" endtime="20220228 14:15:39.290"></status>
</kw>
<doc>Tạo mới nhân viên trùng mã nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:38.796" endtime="20220228 14:15:39.290" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Create empty employee">
<kw name="Create Empty Employee" library="employee">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>\ \</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.291" level="INFO">${list_format} = ['1235698', 'NV13827152', ' ', 37, 37]</msg>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.291"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:39.291" level="INFO">Length is 5</msg>
<msg timestamp="20220228 14:15:39.291" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.291"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.292" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.292"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.292" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 14:15:39.292" endtime="20220228 14:15:39.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.292" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.292" endtime="20220228 14:15:39.292"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.292"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.292" level="INFO">${value_temp} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:39.292" endtime="20220228 14:15:39.292"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.293" level="INFO">${value_temp} = NV13827152</msg>
<status status="PASS" starttime="20220228 14:15:39.293" endtime="20220228 14:15:39.293"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.293" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.293" endtime="20220228 14:15:39.293"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.292" endtime="20220228 14:15:39.293"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.293" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220228 14:15:39.293" endtime="20220228 14:15:39.293"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.294" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220228 14:15:39.293" endtime="20220228 14:15:39.294"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.294" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":" ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.294" endtime="20220228 14:15:39.294"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.293" endtime="20220228 14:15:39.294"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.294" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.294" endtime="20220228 14:15:39.294"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.294" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.294" endtime="20220228 14:15:39.294"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.295" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:39.294" endtime="20220228 14:15:39.295"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.294" endtime="20220228 14:15:39.295"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.295" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.295" endtime="20220228 14:15:39.295"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.295" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.295" endtime="20220228 14:15:39.295"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.296" level="INFO">${data_format} = {"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:39.295" endtime="20220228 14:15:39.296"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.295" endtime="20220228 14:15:39.296"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.296"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.296" endtime="20220228 14:15:39.296"></status>
</kw>
<msg timestamp="20220228 14:15:39.296" level="INFO">${data} = {"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:39.291" endtime="20220228 14:15:39.296"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 14:15:39.296" level="INFO">${data} = (None, '{"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:39.296" endtime="20220228 14:15:39.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.296" level="INFO">(None, '{"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:39.296" endtime="20220228 14:15:39.296"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 14:15:39.297" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:39.297" endtime="20220228 14:15:39.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.297" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:39.297" endtime="20220228 14:15:39.297"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:39.822" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV13827152","name":" ","branchId":37,"userId":null,"workBranchIds":[37]}')}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:39.822" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:39.822" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.297" endtime="20220228 14:15:39.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.822" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 14:15:39.822" endtime="20220228 14:15:39.822"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.822" endtime="20220228 14:15:39.823"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.823" endtime="20220228 14:15:39.823"></status>
</kw>
<msg timestamp="20220228 14:15:39.823" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPre...</msg>
<status status="PASS" starttime="20220228 14:15:39.297" endtime="20220228 14:15:39.823"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:39.840" level="INFO">${result} = ['Tên nhân viên không được để trống', 'Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220228 14:15:39.823" endtime="20220228 14:15:39.840"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:39.840" level="INFO">Length is 2</msg>
<msg timestamp="20220228 14:15:39.840" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 14:15:39.840" endtime="20220228 14:15:39.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:39.841" endtime="20220228 14:15:39.841"></status>
</kw>
<msg timestamp="20220228 14:15:39.841" level="INFO">${result} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220228 14:15:39.840" endtime="20220228 14:15:39.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.841" endtime="20220228 14:15:39.841"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.841" endtime="20220228 14:15:39.841"></status>
</kw>
<msg timestamp="20220228 14:15:39.841" level="INFO">${mess_err} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220228 14:15:39.823" endtime="20220228 14:15:39.841"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Tên nhân viên không được để trống</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:39.842" endtime="20220228 14:15:39.842"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.290" endtime="20220228 14:15:39.842"></status>
</kw>
<doc>Tạo mới nhân viên rỗng</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:39.290" endtime="20220228 14:15:39.842" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Update employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.843" level="INFO">${list_format} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.843"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:39.843" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:39.843" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.843"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.844" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.844"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:39.844" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:39.844" endtime="20220228 14:15:39.844"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:39.844" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:39.844" endtime="20220228 14:15:39.844"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.844"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.844"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.844" endtime="20220228 14:15:39.844"></status>
</kw>
<msg timestamp="20220228 14:15:39.845" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:39.843" endtime="20220228 14:15:39.845"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:39.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:39.845" endtime="20220228 14:15:39.845"></status>
</kw>
<msg timestamp="20220228 14:15:39.845" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:39.842" endtime="20220228 14:15:39.845"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:40.480" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37, headers=None json=None</msg>
<msg timestamp="20220228 14:15:40.480" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:40.480" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:39.845" endtime="20220228 14:15:40.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.481" level="INFO">{'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Update nJZK', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:40.9040000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T01:59:02.4300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Update nJZK', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088712, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004212}]}, {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Update nJZK', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:40.9040000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T04:27:09.1330000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Update nJZK', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088714, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004214}]}, {'id': 100000000004120, 'code': 'NV000009', 'name': '221', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Update nJZK', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:40.9040000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T16:22:24.6300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Update nJZK', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088620, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004120}]}, {'id': 40000000110209, 'code': 'NV000002', 'name': 'nv app', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:06.0600000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:59:17.0210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['12'], 'employeeBranches': [{'id': 40000000236616, 'tenantId': 916276, 'branchId': 37, 'employeeId': 40000000110209}]}, {'id': 230000000015209, 'code': 'NV000013', 'name': 'thêm mới check audit', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:05:47.9230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898909, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015209}]}, {'id': 60000000186902, 'code': 'NV000010', 'name': 'cccccccc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-10T18:23:25.4570000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T15:27:40.3580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001423702, 'tenantId': 916276, 'branchId': 37, 'employeeId': 60000000186902}]}, {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-15T11:49:39.4330000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:58:46.8380000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011555403, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006403}]}, {'id': 110000000120852, 'code': 'NV000015', 'name': 'fđfbfd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T17:15:50.5400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000263758, 'tenantId': 916276, 'branchId': 37, 'employeeId': 110000000120852}]}, {'id': 230000000015213, 'code': 'NV000014', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 1000113059, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:12:49.2870000', 'modifiedBy': 103, 'modifiedDate': '2021-12-21T15:12:52.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015213}]}, {'id': 210000001006514, 'code': 'NV000005', 'name': 'Dung test', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 210000001001003, 'department': {'id': 210000001001003, 'name': 'Update nJZK', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:34.6030000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:40.9040000', 'isDeleted': False}, 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:46.7870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Update nJZK', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011564314, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006514}]}, {'id': 120000000125511, 'code': 'NV000011', 'name': 'test123456', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 90000001011702, 'department': {'id': 90000001011702, 'name': 'phong 1', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:16.8700000', 'isDeleted': False}, 'jobTitleId': 90000001011902, 'jobTitle': {'id': 90000001011902, 'name': 'phong 2', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:23.0170000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:24.5270000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T16:06:25.9280000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'phong 1', 'jobTitleName': 'phong 2', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000234611, 'tenantId': 916276, 'branchId': 37, 'employeeId': 120000000125511}]}, {'id': 210000001013405, 'code': 'NV000012', 'name': 'bánh tét', 'isActive': True, 'identityNumber': '123', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': 'CDA5BA1C77DE8DCC956CA275E2D05B7AE0B2BA7B1EEBDD5C2F63B5BEC9A7DD50', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T14:25:56.6530000', 'modifiedBy': 0, 'modifiedDate': '2021-12-21T15:17:32.5260000', 'isDeleted': False, 'secretKeyTakenUserId': 103, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000012196205, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001013405}]}, {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:33.0970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107211}]}, {'id': 100000000107210, 'code': 'NV927562', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:28.6870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191912, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107210}]}, {'id': 50000000129027, 'code': 'NV13827152', 'name': 'VXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, {'id': 150000000103418, 'code': 'NV000003', 'name': 'nv web', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:20.9870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 150000003517625, 'tenantId': 916276, 'branchId': 37, 'employeeId': 150000000103418}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:40.480" endtime="20220228 14:15:40.481"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:40.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:40.481" endtime="20220228 14:15:40.481"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.481" endtime="20220228 14:15:40.482"></status>
</kw>
<msg timestamp="20220228 14:15:40.482" level="INFO">${resp} = {'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': ''...</msg>
<status status="PASS" starttime="20220228 14:15:39.845" endtime="20220228 14:15:40.482"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:40.499" level="INFO">${list} = [100000000004212, 100000000004214, 100000000004120, 40000000110209, 230000000015209, 60000000186902, 210000001006403, 110000000120852, 230000000015213, 210000001006514, 120000000125511, 21000000101340...</msg>
<status status="PASS" starttime="20220228 14:15:40.482" endtime="20220228 14:15:40.500"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:40.500" level="INFO">${value} = 210000001006403</msg>
<status status="PASS" starttime="20220228 14:15:40.500" endtime="20220228 14:15:40.501"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.501" endtime="20220228 14:15:40.501"></status>
</kw>
<msg timestamp="20220228 14:15:40.501" level="INFO">${id_employee} = 210000001006403</msg>
<status status="PASS" starttime="20220228 14:15:39.845" endtime="20220228 14:15:40.501"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:40.808" level="INFO">Get Request using : alias=session, uri=/employees/210000001006403, headers=None json=None</msg>
<msg timestamp="20220228 14:15:40.808" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:40.808" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:40.501" endtime="20220228 14:15:40.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.811" level="INFO">{'result': {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-15T11:49:39.4330000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:58:46.8380000', 'isDeleted': False, 'clockings': [{'id': 50000002325229, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-01T08:30:00.0000000', 'endTime': '2021-06-01T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-01T08:30:00.0000000', 'checkOutDate': '2021-06-01T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325230, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-02T08:30:00.0000000', 'endTime': '2021-06-02T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-02T08:30:00.0000000', 'checkOutDate': '2021-06-02T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325231, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-03T08:30:00.0000000', 'endTime': '2021-06-03T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-03T08:30:00.0000000', 'checkOutDate': '2021-06-03T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325232, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-04T08:30:00.0000000', 'endTime': '2021-06-04T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-04T08:30:00.0000000', 'checkOutDate': '2021-06-04T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325233, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-05T08:30:00.0000000', 'endTime': '2021-06-05T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-05T08:30:00.0000000', 'checkOutDate': '2021-06-05T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325234, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-06T08:30:00.0000000', 'endTime': '2021-06-06T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-06T08:30:00.0000000', 'checkOutDate': '2021-06-06T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325235, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-07T08:30:00.0000000', 'endTime': '2021-06-07T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-07T08:30:00.0000000', 'checkOutDate': '2021-06-07T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325236, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-08T08:30:00.0000000', 'endTime': '2021-06-08T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-08T08:30:00.0000000', 'checkOutDate': '2021-06-08T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325237, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-09T08:30:00.0000000', 'endTime': '2021-06-09T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-09T08:30:00.0000000', 'checkOutDate': '2021-06-09T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325238, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-10T08:30:00.0000000', 'endTime': '2021-06-10T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-10T08:30:00.0000000', 'checkOutDate': '2021-06-10T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325239, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-11T08:30:00.0000000', 'endTime': '2021-06-11T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-11T08:30:00.0000000', 'checkOutDate': '2021-06-11T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325240, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-12T08:30:00.0000000', 'endTime': '2021-06-12T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-12T08:30:00.0000000', 'checkOutDate': '2021-06-12T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325241, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-13T08:30:00.0000000', 'endTime': '2021-06-13T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-13T08:30:00.0000000', 'checkOutDate': '2021-06-13T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325242, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-14T08:30:00.0000000', 'endTime': '2021-06-14T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-14T08:30:00.0000000', 'checkOutDate': '2021-06-14T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325243, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-15T08:30:00.0000000', 'endTime': '2021-06-15T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-15T08:30:00.0000000', 'checkOutDate': '2021-06-15T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325244, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-16T08:30:00.0000000', 'endTime': '2021-06-16T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-16T08:30:00.0000000', 'checkOutDate': '2021-06-16T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325245, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-17T08:30:00.0000000', 'endTime': '2021-06-17T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-17T08:30:00.0000000', 'checkOutDate': '2021-06-17T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325246, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-18T08:30:00.0000000', 'endTime': '2021-06-18T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-18T08:30:00.0000000', 'checkOutDate': '2021-06-18T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325247, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-19T08:30:00.0000000', 'endTime': '2021-06-19T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-19T08:30:00.0000000', 'checkOutDate': '2021-06-19T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325248, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-20T08:30:00.0000000', 'endTime': '2021-06-20T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-20T08:30:00.0000000', 'checkOutDate': '2021-06-20T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325249, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-21T08:30:00.0000000', 'endTime': '2021-06-21T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-21T08:30:00.0000000', 'checkOutDate': '2021-06-21T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325250, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-22T08:30:00.0000000', 'endTime': '2021-06-22T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-22T08:30:00.0000000', 'checkOutDate': '2021-06-22T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325251, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-23T08:30:00.0000000', 'endTime': '2021-06-23T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-23T08:30:00.0000000', 'checkOutDate': '2021-06-23T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325252, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-24T08:30:00.0000000', 'endTime': '2021-06-24T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-24T08:30:00.0000000', 'checkOutDate': '2021-06-24T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325253, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-25T08:30:00.0000000', 'endTime': '2021-06-25T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-25T08:30:00.0000000', 'checkOutDate': '2021-06-25T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325254, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-26T08:30:00.0000000', 'endTime': '2021-06-26T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-26T08:30:00.0000000', 'checkOutDate': '2021-06-26T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325255, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-27T08:30:00.0000000', 'endTime': '2021-06-27T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-27T08:30:00.0000000', 'checkOutDate': '2021-06-27T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325256, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-28T08:30:00.0000000', 'endTime': '2021-06-28T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-28T08:30:00.0000000', 'checkOutDate': '2021-06-28T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325257, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-06-29T08:30:00.0000000', 'endTime': '2021-06-29T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-06-29T08:30:00.0000000', 'checkOutDate': '2021-06-29T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002325258, 'shiftId': 50000000116703, 'timeSheetId': 50000000239015, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-06-30T08:30:00.0000000', 'endTime': '2021-06-30T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334015, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-01T08:30:00.0000000', 'endTime': '2021-07-01T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-01T08:30:00.0000000', 'checkOutDate': '2021-07-01T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334016, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-02T08:30:00.0000000', 'endTime': '2021-07-02T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-02T08:30:00.0000000', 'checkOutDate': '2021-07-02T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334017, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-03T08:30:00.0000000', 'endTime': '2021-07-03T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-03T08:30:00.0000000', 'checkOutDate': '2021-07-03T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334018, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-04T08:30:00.0000000', 'endTime': '2021-07-04T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-04T08:30:00.0000000', 'checkOutDate': '2021-07-04T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334019, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-05T08:30:00.0000000', 'endTime': '2021-07-05T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-05T08:30:00.0000000', 'checkOutDate': '2021-07-05T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334020, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-06T08:30:00.0000000', 'endTime': '2021-07-06T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-06T08:30:00.0000000', 'checkOutDate': '2021-07-06T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334021, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-07T08:30:00.0000000', 'endTime': '2021-07-07T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-07T08:30:00.0000000', 'checkOutDate': '2021-07-07T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334022, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-08T08:30:00.0000000', 'endTime': '2021-07-08T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-08T08:30:00.0000000', 'checkOutDate': '2021-07-08T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334023, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-09T08:30:00.0000000', 'endTime': '2021-07-09T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-09T08:30:00.0000000', 'checkOutDate': '2021-07-09T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334024, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-10T08:30:00.0000000', 'endTime': '2021-07-10T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-10T08:30:00.0000000', 'checkOutDate': '2021-07-10T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334025, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-11T08:30:00.0000000', 'endTime': '2021-07-11T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-11T08:30:00.0000000', 'checkOutDate': '2021-07-11T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334026, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-12T08:30:00.0000000', 'endTime': '2021-07-12T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-12T08:30:00.0000000', 'checkOutDate': '2021-07-12T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334027, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-13T08:30:00.0000000', 'endTime': '2021-07-13T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-13T08:30:00.0000000', 'checkOutDate': '2021-07-13T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334028, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-14T08:30:00.0000000', 'endTime': '2021-07-14T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-14T08:30:00.0000000', 'checkOutDate': '2021-07-14T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334029, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-07-15T08:30:00.0000000', 'endTime': '2021-07-15T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-07-15T08:30:00.0000000', 'checkOutDate': '2021-07-15T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334030, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-16T08:30:00.0000000', 'endTime': '2021-07-16T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334031, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-17T08:30:00.0000000', 'endTime': '2021-07-17T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334032, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-18T08:30:00.0000000', 'endTime': '2021-07-18T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334033, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-19T08:30:00.0000000', 'endTime': '2021-07-19T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334034, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-20T08:30:00.0000000', 'endTime': '2021-07-20T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334035, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-21T08:30:00.0000000', 'endTime': '2021-07-21T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334036, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-22T08:30:00.0000000', 'endTime': '2021-07-22T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334037, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-23T08:30:00.0000000', 'endTime': '2021-07-23T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334038, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-24T08:30:00.0000000', 'endTime': '2021-07-24T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334039, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-25T08:30:00.0000000', 'endTime': '2021-07-25T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334040, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-26T08:30:00.0000000', 'endTime': '2021-07-26T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334041, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-27T08:30:00.0000000', 'endTime': '2021-07-27T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334042, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-28T08:30:00.0000000', 'endTime': '2021-07-28T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334043, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-29T08:30:00.0000000', 'endTime': '2021-07-29T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002334044, 'shiftId': 50000000116703, 'timeSheetId': 50000000240012, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-07-30T08:30:00.0000000', 'endTime': '2021-07-30T18:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799564, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-01T07:00:00.0000000', 'endTime': '2021-08-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-01T07:00:00.0000000', 'checkOutDate': '2021-08-01T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799565, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-02T07:00:00.0000000', 'endTime': '2021-08-02T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-02T07:00:00.0000000', 'checkOutDate': '2021-08-02T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799566, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-03T07:00:00.0000000', 'endTime': '2021-08-03T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-03T07:00:00.0000000', 'checkOutDate': '2021-08-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799567, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-04T07:00:00.0000000', 'endTime': '2021-08-04T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-04T07:00:00.0000000', 'checkOutDate': '2021-08-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799568, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-05T07:00:00.0000000', 'endTime': '2021-08-05T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-05T07:00:00.0000000', 'checkOutDate': '2021-08-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799569, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-06T07:00:00.0000000', 'endTime': '2021-08-06T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-06T07:00:00.0000000', 'checkOutDate': '2021-08-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799570, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-07T07:00:00.0000000', 'endTime': '2021-08-07T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-07T07:00:00.0000000', 'checkOutDate': '2021-08-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799571, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-08T07:00:00.0000000', 'endTime': '2021-08-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-08T07:00:00.0000000', 'checkOutDate': '2021-08-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799572, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-09T07:00:00.0000000', 'endTime': '2021-08-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-09T07:00:00.0000000', 'checkOutDate': '2021-08-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799573, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-10T07:00:00.0000000', 'endTime': '2021-08-10T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-10T07:00:00.0000000', 'checkOutDate': '2021-08-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799574, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-11T07:00:00.0000000', 'endTime': '2021-08-11T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-11T07:00:00.0000000', 'checkOutDate': '2021-08-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799575, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-12T07:00:00.0000000', 'endTime': '2021-08-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-12T07:00:00.0000000', 'checkOutDate': '2021-08-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799576, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-13T07:00:00.0000000', 'endTime': '2021-08-13T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-13T07:00:00.0000000', 'checkOutDate': '2021-08-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799577, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 3, 'startTime': '2021-08-14T07:00:00.0000000', 'endTime': '2021-08-14T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-14T07:00:00.0000000', 'checkOutDate': '2021-08-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004799578, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-15T07:00:00.0000000', 'endTime': '2021-08-15T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799579, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-16T07:00:00.0000000', 'endTime': '2021-08-16T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799580, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-17T07:00:00.0000000', 'endTime': '2021-08-17T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799581, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-18T07:00:00.0000000', 'endTime': '2021-08-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799582, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-19T07:00:00.0000000', 'endTime': '2021-08-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799583, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-20T07:00:00.0000000', 'endTime': '2021-08-20T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799584, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-21T07:00:00.0000000', 'endTime': '2021-08-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799585, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-22T07:00:00.0000000', 'endTime': '2021-08-22T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799586, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-23T07:00:00.0000000', 'endTime': '2021-08-23T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799587, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-24T07:00:00.0000000', 'endTime': '2021-08-24T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799588, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-25T07:00:00.0000000', 'endTime': '2021-08-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799589, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-26T07:00:00.0000000', 'endTime': '2021-08-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799590, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-27T07:00:00.0000000', 'endTime': '2021-08-27T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799591, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-28T07:00:00.0000000', 'endTime': '2021-08-28T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799592, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-29T07:00:00.0000000', 'endTime': '2021-08-29T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799593, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-30T07:00:00.0000000', 'endTime': '2021-08-30T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799594, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-08-31T07:00:00.0000000', 'endTime': '2021-08-31T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799595, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-01T07:00:00.0000000', 'endTime': '2021-09-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799596, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-03T07:00:00.0000000', 'endTime': '2021-09-03T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799597, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-04T07:00:00.0000000', 'endTime': '2021-09-04T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799598, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-05T07:00:00.0000000', 'endTime': '2021-09-05T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799599, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-06T07:00:00.0000000', 'endTime': '2021-09-06T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799600, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-07T07:00:00.0000000', 'endTime': '2021-09-07T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799601, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-08T07:00:00.0000000', 'endTime': '2021-09-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799602, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-09T07:00:00.0000000', 'endTime': '2021-09-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799603, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-10T07:00:00.0000000', 'endTime': '2021-09-10T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799604, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-11T07:00:00.0000000', 'endTime': '2021-09-11T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799605, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-12T07:00:00.0000000', 'endTime': '2021-09-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799606, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-13T07:00:00.0000000', 'endTime': '2021-09-13T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799607, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-14T07:00:00.0000000', 'endTime': '2021-09-14T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799608, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-15T07:00:00.0000000', 'endTime': '2021-09-15T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799609, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-16T07:00:00.0000000', 'endTime': '2021-09-16T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799610, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-17T07:00:00.0000000', 'endTime': '2021-09-17T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799611, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-18T07:00:00.0000000', 'endTime': '2021-09-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799612, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-19T07:00:00.0000000', 'endTime': '2021-09-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799613, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-20T07:00:00.0000000', 'endTime': '2021-09-20T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799614, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-21T07:00:00.0000000', 'endTime': '2021-09-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799615, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-22T07:00:00.0000000', 'endTime': '2021-09-22T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799616, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-23T07:00:00.0000000', 'endTime': '2021-09-23T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799617, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-24T07:00:00.0000000', 'endTime': '2021-09-24T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799618, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-25T07:00:00.0000000', 'endTime': '2021-09-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799619, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-26T07:00:00.0000000', 'endTime': '2021-09-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799620, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-27T07:00:00.0000000', 'endTime': '2021-09-27T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799621, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-28T07:00:00.0000000', 'endTime': '2021-09-28T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799622, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-29T07:00:00.0000000', 'endTime': '2021-09-29T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799623, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-09-30T07:00:00.0000000', 'endTime': '2021-09-30T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799624, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-01T07:00:00.0000000', 'endTime': '2021-10-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799625, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-02T07:00:00.0000000', 'endTime': '2021-10-02T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799626, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-03T07:00:00.0000000', 'endTime': '2021-10-03T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799627, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-04T07:00:00.0000000', 'endTime': '2021-10-04T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799628, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-05T07:00:00.0000000', 'endTime': '2021-10-05T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799629, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-06T07:00:00.0000000', 'endTime': '2021-10-06T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799630, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-07T07:00:00.0000000', 'endTime': '2021-10-07T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799631, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-08T07:00:00.0000000', 'endTime': '2021-10-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799632, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-09T07:00:00.0000000', 'endTime': '2021-10-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799633, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-10T07:00:00.0000000', 'endTime': '2021-10-10T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799634, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-11T07:00:00.0000000', 'endTime': '2021-10-11T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799635, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-12T07:00:00.0000000', 'endTime': '2021-10-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799636, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-13T07:00:00.0000000', 'endTime': '2021-10-13T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799637, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-14T07:00:00.0000000', 'endTime': '2021-10-14T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799638, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-15T07:00:00.0000000', 'endTime': '2021-10-15T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799639, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-16T07:00:00.0000000', 'endTime': '2021-10-16T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799640, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-17T07:00:00.0000000', 'endTime': '2021-10-17T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799641, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-18T07:00:00.0000000', 'endTime': '2021-10-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799642, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-19T07:00:00.0000000', 'endTime': '2021-10-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799643, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-20T07:00:00.0000000', 'endTime': '2021-10-20T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799644, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-21T07:00:00.0000000', 'endTime': '2021-10-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799645, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-22T07:00:00.0000000', 'endTime': '2021-10-22T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799646, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-23T07:00:00.0000000', 'endTime': '2021-10-23T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799647, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-24T07:00:00.0000000', 'endTime': '2021-10-24T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799648, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-25T07:00:00.0000000', 'endTime': '2021-10-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799649, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-26T07:00:00.0000000', 'endTime': '2021-10-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799650, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-27T07:00:00.0000000', 'endTime': '2021-10-27T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799651, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-28T07:00:00.0000000', 'endTime': '2021-10-28T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799652, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-29T07:00:00.0000000', 'endTime': '2021-10-29T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799653, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-30T07:00:00.0000000', 'endTime': '2021-10-30T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799654, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-10-31T07:00:00.0000000', 'endTime': '2021-10-31T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004799655, 'shiftId': 50000000116705, 'timeSheetId': 60000000633054, 'employeeId': 210000001006403, 'workById': 210000001006403, 'clockingStatus': 1, 'startTime': '2021-11-01T07:00:00.0000000', 'endTime': '2021-11-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 210000011555403, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006403}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:40.809" endtime="20220228 14:15:40.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:40.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:40.812" endtime="20220228 14:15:40.812"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.812" endtime="20220228 14:15:40.812"></status>
</kw>
<msg timestamp="20220228 14:15:40.814" level="INFO">${resp} = {'result': {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': ''...</msg>
<status status="PASS" starttime="20220228 14:15:40.501" endtime="20220228 14:15:40.814"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:40.838" level="INFO">${list} = ['NV000004']</msg>
<status status="PASS" starttime="20220228 14:15:40.814" endtime="20220228 14:15:40.838"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:40.839" level="INFO">${value} = NV000004</msg>
<status status="PASS" starttime="20220228 14:15:40.838" endtime="20220228 14:15:40.839"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.839" endtime="20220228 14:15:40.839"></status>
</kw>
<msg timestamp="20220228 14:15:40.839" level="INFO">${code_employee} = NV000004</msg>
<status status="PASS" starttime="20220228 14:15:40.501" endtime="20220228 14:15:40.839"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.839" endtime="20220228 14:15:40.839"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:39.842" endtime="20220228 14:15:40.839"></status>
</kw>
<kw name="Update Employee" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>UD${random_number}</arg>
<arg>Update${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:40.840" level="INFO">${list} = [50000000129027, 'UD13827152', 'UpdateVXgk', 37, 37]</msg>
<status status="PASS" starttime="20220228 14:15:40.840" endtime="20220228 14:15:40.840"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:40.841" level="INFO">Length is 5</msg>
<msg timestamp="20220228 14:15:40.841" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 14:15:40.840" endtime="20220228 14:15:40.841"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.841" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:40.841" endtime="20220228 14:15:40.841"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.841" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:40.841" endtime="20220228 14:15:40.841"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:40.842" level="INFO">${data_format} = {"id":50000000129027,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:40.841" endtime="20220228 14:15:40.842"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.841" endtime="20220228 14:15:40.842"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.842" level="INFO">${value_temp} = UD13827152</msg>
<status status="PASS" starttime="20220228 14:15:40.842" endtime="20220228 14:15:40.842"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.842" level="INFO">${value_temp} = UD13827152</msg>
<status status="PASS" starttime="20220228 14:15:40.842" endtime="20220228 14:15:40.842"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:40.843" level="INFO">${data_format} = {"id":50000000129027,"code":"UD13827152","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:40.842" endtime="20220228 14:15:40.843"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.842" endtime="20220228 14:15:40.843"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.843" level="INFO">${value_temp} = UpdateVXgk</msg>
<status status="PASS" starttime="20220228 14:15:40.843" endtime="20220228 14:15:40.843"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.843" level="INFO">${value_temp} = UpdateVXgk</msg>
<status status="PASS" starttime="20220228 14:15:40.843" endtime="20220228 14:15:40.843"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:40.844" level="INFO">${data_format} = {"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:40.843" endtime="20220228 14:15:40.844"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.843" endtime="20220228 14:15:40.844"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.844" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:40.844" endtime="20220228 14:15:40.844"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.844" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:40.844" endtime="20220228 14:15:40.844"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:40.844" level="INFO">${data_format} = {"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 14:15:40.844" endtime="20220228 14:15:40.844"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.844" endtime="20220228 14:15:40.844"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.845" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:40.845" endtime="20220228 14:15:40.845"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:40.845" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:40.845" endtime="20220228 14:15:40.845"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:40.845" level="INFO">${data_format} = {"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:40.845" endtime="20220228 14:15:40.845"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.844" endtime="20220228 14:15:40.845"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.841" endtime="20220228 14:15:40.845"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:40.845" endtime="20220228 14:15:40.846"></status>
</kw>
<msg timestamp="20220228 14:15:40.846" level="INFO">${data} = {"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[37]}</msg>
<status status="PASS" starttime="20220228 14:15:40.840" endtime="20220228 14:15:40.846"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 14:15:40.846" level="INFO">${data} = (None, '{"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[37]}')</msg>
<status status="PASS" starttime="20220228 14:15:40.846" endtime="20220228 14:15:40.846"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 14:15:40.846" level="INFO">${formdata} = {'employee': (None, '{"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:40.846" endtime="20220228 14:15:40.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 14:15:40.847" level="INFO">{'employee': (None, '{"id":50000000129027,"code":"UD13827152","name":"UpdateVXgk","branchId":37,"userId":null,"workBranchIds":[37]}')}</msg>
<status status="PASS" starttime="20220228 14:15:40.847" endtime="20220228 14:15:40.847"></status>
</kw>
<kw name="Update Request Json KV Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:41.279" level="INFO">Put Request using : alias=session, uri=/employees/50000000129027, data=None,                     headers={'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:41.279" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:41.279" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:40.847" endtime="20220228 14:15:41.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.279" level="INFO">{'result': {'id': 50000000129027, 'code': 'UD13827152', 'name': 'UpdateVXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.9008117+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': []}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:41.279" endtime="20220228 14:15:41.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.279" endtime="20220228 14:15:41.279"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.280" endtime="20220228 14:15:41.280"></status>
</kw>
<msg timestamp="20220228 14:15:41.280" level="INFO">${resp} = {'result': {'id': 50000000129027, 'code': 'UD13827152', 'name': 'UpdateVXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '',...</msg>
<status status="PASS" starttime="20220228 14:15:40.847" endtime="20220228 14:15:41.280"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:40.840" endtime="20220228 14:15:41.280"></status>
</kw>
<doc>Cập nhật nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:39.842" endtime="20220228 14:15:41.280" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Get pin code">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:41.281" level="INFO">${list_format} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:41.281" endtime="20220228 14:15:41.281"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:41.281" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:41.282" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:41.281" endtime="20220228 14:15:41.282"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.282" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:41.282" endtime="20220228 14:15:41.282"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.282" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:41.282" endtime="20220228 14:15:41.282"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:41.282" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:41.282" endtime="20220228 14:15:41.282"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.282" endtime="20220228 14:15:41.282"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.282" endtime="20220228 14:15:41.282"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.283" endtime="20220228 14:15:41.283"></status>
</kw>
<msg timestamp="20220228 14:15:41.283" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:41.281" endtime="20220228 14:15:41.283"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.283" endtime="20220228 14:15:41.283"></status>
</kw>
<msg timestamp="20220228 14:15:41.283" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:41.281" endtime="20220228 14:15:41.283"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:41.546" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37, headers=None json=None</msg>
<msg timestamp="20220228 14:15:41.546" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:41.546" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.284" endtime="20220228 14:15:41.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.547" level="INFO">{'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T01:59:02.4300000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088712, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004212}]}, {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T04:27:09.1330000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088714, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004214}]}, {'id': 100000000004120, 'code': 'NV000009', 'name': '221', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T16:22:24.6300000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088620, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004120}]}, {'id': 40000000110209, 'code': 'NV000002', 'name': 'nv app', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:06.0600000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:59:17.0210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['12'], 'employeeBranches': [{'id': 40000000236616, 'tenantId': 916276, 'branchId': 37, 'employeeId': 40000000110209}]}, {'id': 230000000015209, 'code': 'NV000013', 'name': 'thêm mới check audit', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:05:47.9230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898909, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015209}]}, {'id': 60000000186902, 'code': 'NV000010', 'name': 'cccccccc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-10T18:23:25.4570000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T15:27:40.3580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001423702, 'tenantId': 916276, 'branchId': 37, 'employeeId': 60000000186902}]}, {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-15T11:49:39.4330000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:58:46.8380000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011555403, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006403}]}, {'id': 110000000120852, 'code': 'NV000015', 'name': 'fđfbfd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T17:15:50.5400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000263758, 'tenantId': 916276, 'branchId': 37, 'employeeId': 110000000120852}]}, {'id': 230000000015213, 'code': 'NV000014', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 1000113059, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:12:49.2870000', 'modifiedBy': 103, 'modifiedDate': '2021-12-21T15:12:52.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015213}]}, {'id': 210000001006514, 'code': 'NV000005', 'name': 'Dung test', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Nhân viên', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:46.7870000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Nhân viên', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011564314, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006514}]}, {'id': 120000000125511, 'code': 'NV000011', 'name': 'test123456', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 90000001011702, 'department': {'id': 90000001011702, 'name': 'phong 1', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:16.8700000', 'isDeleted': False}, 'jobTitleId': 90000001011902, 'jobTitle': {'id': 90000001011902, 'name': 'phong 2', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:23.0170000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:24.5270000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T16:06:25.9280000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'phong 1', 'jobTitleName': 'phong 2', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000234611, 'tenantId': 916276, 'branchId': 37, 'employeeId': 120000000125511}]}, {'id': 210000001013405, 'code': 'NV000012', 'name': 'bánh tét', 'isActive': True, 'identityNumber': '123', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': 'CDA5BA1C77DE8DCC956CA275E2D05B7AE0B2BA7B1EEBDD5C2F63B5BEC9A7DD50', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T14:25:56.6530000', 'modifiedBy': 0, 'modifiedDate': '2021-12-21T15:17:32.5260000', 'isDeleted': False, 'secretKeyTakenUserId': 103, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000012196205, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001013405}]}, {'id': 50000000129027, 'code': 'UD13827152', 'name': 'UpdateVXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.9000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:33.0970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107211}]}, {'id': 100000000107210, 'code': 'NV927562', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:28.6870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191912, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107210}]}, {'id': 150000000103418, 'code': 'NV000003', 'name': 'nv web', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:20.9870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 150000003517625, 'tenantId': 916276, 'branchId': 37, 'employeeId': 150000000103418}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:41.546" endtime="20220228 14:15:41.547"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:41.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.547" endtime="20220228 14:15:41.547"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.548" endtime="20220228 14:15:41.548"></status>
</kw>
<msg timestamp="20220228 14:15:41.548" level="INFO">${resp} = {'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': ''...</msg>
<status status="PASS" starttime="20220228 14:15:41.283" endtime="20220228 14:15:41.548"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:41.565" level="INFO">${list} = [100000000004212, 100000000004214, 100000000004120, 40000000110209, 230000000015209, 60000000186902, 210000001006403, 110000000120852, 230000000015213, 210000001006514, 120000000125511, 21000000101340...</msg>
<status status="PASS" starttime="20220228 14:15:41.548" endtime="20220228 14:15:41.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:41.566" level="INFO">${value} = 100000000107211</msg>
<status status="PASS" starttime="20220228 14:15:41.565" endtime="20220228 14:15:41.566"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.566" endtime="20220228 14:15:41.566"></status>
</kw>
<msg timestamp="20220228 14:15:41.566" level="INFO">${id_employee} = 100000000107211</msg>
<status status="PASS" starttime="20220228 14:15:41.283" endtime="20220228 14:15:41.566"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:41.828" level="INFO">Get Request using : alias=session, uri=/employees/100000000107211, headers=None json=None</msg>
<msg timestamp="20220228 14:15:41.828" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:41.828" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.567" endtime="20220228 14:15:41.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.829" level="INFO">{'result': {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:33.0970000+07:00', 'isDeleted': False, 'clockings': [{'id': 220000000272001, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-04T07:00:00.0000000+07:00', 'endTime': '2022-02-04T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272002, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-07T07:00:00.0000000+07:00', 'endTime': '2022-02-07T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272003, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-08T07:00:00.0000000+07:00', 'endTime': '2022-02-08T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272004, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-09T07:00:00.0000000+07:00', 'endTime': '2022-02-09T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272005, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-10T07:00:00.0000000+07:00', 'endTime': '2022-02-10T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272006, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-11T07:00:00.0000000+07:00', 'endTime': '2022-02-11T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272007, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-14T07:00:00.0000000+07:00', 'endTime': '2022-02-14T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272008, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-15T07:00:00.0000000+07:00', 'endTime': '2022-02-15T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272009, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-16T07:00:00.0000000+07:00', 'endTime': '2022-02-16T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272010, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-17T07:00:00.0000000+07:00', 'endTime': '2022-02-17T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272011, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-18T07:00:00.0000000+07:00', 'endTime': '2022-02-18T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272012, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-21T07:00:00.0000000+07:00', 'endTime': '2022-02-21T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272013, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-22T07:00:00.0000000+07:00', 'endTime': '2022-02-22T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272014, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-23T07:00:00.0000000+07:00', 'endTime': '2022-02-23T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272015, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-24T07:00:00.0000000+07:00', 'endTime': '2022-02-24T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272016, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-25T07:00:00.0000000+07:00', 'endTime': '2022-02-25T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272017, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-02-28T07:00:00.0000000+07:00', 'endTime': '2022-02-28T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272018, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-01T07:00:00.0000000+07:00', 'endTime': '2022-03-01T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272019, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-02T07:00:00.0000000+07:00', 'endTime': '2022-03-02T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272020, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-03T07:00:00.0000000+07:00', 'endTime': '2022-03-03T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272021, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-04T07:00:00.0000000+07:00', 'endTime': '2022-03-04T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272022, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-07T07:00:00.0000000+07:00', 'endTime': '2022-03-07T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272023, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-08T07:00:00.0000000+07:00', 'endTime': '2022-03-08T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272024, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-09T07:00:00.0000000+07:00', 'endTime': '2022-03-09T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272025, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-10T07:00:00.0000000+07:00', 'endTime': '2022-03-10T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272026, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-11T07:00:00.0000000+07:00', 'endTime': '2022-03-11T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272027, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-14T07:00:00.0000000+07:00', 'endTime': '2022-03-14T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272028, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-15T07:00:00.0000000+07:00', 'endTime': '2022-03-15T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272029, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-16T07:00:00.0000000+07:00', 'endTime': '2022-03-16T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272030, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-17T07:00:00.0000000+07:00', 'endTime': '2022-03-17T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272031, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-18T07:00:00.0000000+07:00', 'endTime': '2022-03-18T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272032, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-21T07:00:00.0000000+07:00', 'endTime': '2022-03-21T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272033, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-22T07:00:00.0000000+07:00', 'endTime': '2022-03-22T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272034, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-23T07:00:00.0000000+07:00', 'endTime': '2022-03-23T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272035, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-24T07:00:00.0000000+07:00', 'endTime': '2022-03-24T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272036, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-25T07:00:00.0000000+07:00', 'endTime': '2022-03-25T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272037, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-28T07:00:00.0000000+07:00', 'endTime': '2022-03-28T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272038, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-29T07:00:00.0000000+07:00', 'endTime': '2022-03-29T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272039, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-30T07:00:00.0000000+07:00', 'endTime': '2022-03-30T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272040, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-03-31T07:00:00.0000000+07:00', 'endTime': '2022-03-31T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272041, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-01T07:00:00.0000000+07:00', 'endTime': '2022-04-01T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272042, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-04T07:00:00.0000000+07:00', 'endTime': '2022-04-04T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272043, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-05T07:00:00.0000000+07:00', 'endTime': '2022-04-05T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272044, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-06T07:00:00.0000000+07:00', 'endTime': '2022-04-06T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272045, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-07T07:00:00.0000000+07:00', 'endTime': '2022-04-07T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272046, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-08T07:00:00.0000000+07:00', 'endTime': '2022-04-08T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272047, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-11T07:00:00.0000000+07:00', 'endTime': '2022-04-11T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272048, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-12T07:00:00.0000000+07:00', 'endTime': '2022-04-12T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272049, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-13T07:00:00.0000000+07:00', 'endTime': '2022-04-13T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272050, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-14T07:00:00.0000000+07:00', 'endTime': '2022-04-14T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272051, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 2, 'startTime': '2022-04-15T07:00:00.0000000+07:00', 'endTime': '2022-04-15T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2022-04-15T07:26:00.0000000+07:00', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272052, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 3, 'startTime': '2022-04-18T07:00:00.0000000+07:00', 'endTime': '2022-04-18T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2022-04-18T07:00:00.0000000+07:00', 'checkOutDate': '2022-04-18T11:00:00.0000000+07:00', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272053, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-19T07:00:00.0000000+07:00', 'endTime': '2022-04-19T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272054, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-20T07:00:00.0000000+07:00', 'endTime': '2022-04-20T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272055, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-21T07:00:00.0000000+07:00', 'endTime': '2022-04-21T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272056, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-22T07:00:00.0000000+07:00', 'endTime': '2022-04-22T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272057, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-25T07:00:00.0000000+07:00', 'endTime': '2022-04-25T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272058, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-26T07:00:00.0000000+07:00', 'endTime': '2022-04-26T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272059, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-27T07:00:00.0000000+07:00', 'endTime': '2022-04-27T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272060, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-28T07:00:00.0000000+07:00', 'endTime': '2022-04-28T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272061, 'shiftId': 50000000120815, 'timeSheetId': 220000000026819, 'employeeId': 100000000107211, 'workById': 100000000107211, 'clockingStatus': 1, 'startTime': '2022-04-29T07:00:00.0000000+07:00', 'endTime': '2022-04-29T11:00:00.0000000+07:00', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000191913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107211}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:41.828" endtime="20220228 14:15:41.829"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:41.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.829" endtime="20220228 14:15:41.830"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.830" endtime="20220228 14:15:41.830"></status>
</kw>
<msg timestamp="20220228 14:15:41.831" level="INFO">${resp} = {'result': {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardN...</msg>
<status status="PASS" starttime="20220228 14:15:41.566" endtime="20220228 14:15:41.831"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:41.850" level="INFO">${list} = ['NV133002']</msg>
<status status="PASS" starttime="20220228 14:15:41.831" endtime="20220228 14:15:41.850"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:41.851" level="INFO">${value} = NV133002</msg>
<status status="PASS" starttime="20220228 14:15:41.850" endtime="20220228 14:15:41.851"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.851" endtime="20220228 14:15:41.851"></status>
</kw>
<msg timestamp="20220228 14:15:41.851" level="INFO">${code_employee} = NV133002</msg>
<status status="PASS" starttime="20220228 14:15:41.566" endtime="20220228 14:15:41.851"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.851" endtime="20220228 14:15:41.852"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.281" endtime="20220228 14:15:41.852"></status>
</kw>
<kw name="Get Pin Code" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${user_login}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:41.852" level="INFO">${list} = [50000000129027, 103]</msg>
<status status="PASS" starttime="20220228 14:15:41.852" endtime="20220228 14:15:41.852"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_pin_code}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${enp_pin_code}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:41.853" level="INFO">Length is 2</msg>
<msg timestamp="20220228 14:15:41.853" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 14:15:41.852" endtime="20220228 14:15:41.853"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.853" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:41.853" endtime="20220228 14:15:41.853"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.853" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:41.853" endtime="20220228 14:15:41.853"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:41.854" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=50000000129027&amp;UserId=[D1]</msg>
<status status="PASS" starttime="20220228 14:15:41.853" endtime="20220228 14:15:41.854"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.853" endtime="20220228 14:15:41.854"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.854" level="INFO">${value_temp} = 103</msg>
<status status="PASS" starttime="20220228 14:15:41.854" endtime="20220228 14:15:41.854"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:41.854" level="INFO">${value_temp} = 103</msg>
<status status="PASS" starttime="20220228 14:15:41.854" endtime="20220228 14:15:41.854"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:41.854" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=50000000129027&amp;UserId=103</msg>
<status status="PASS" starttime="20220228 14:15:41.854" endtime="20220228 14:15:41.854"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.854" endtime="20220228 14:15:41.854"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.853" endtime="20220228 14:15:41.854"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:41.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:41.855" endtime="20220228 14:15:41.855"></status>
</kw>
<msg timestamp="20220228 14:15:41.855" level="INFO">${enp_pin_code} = /employees/two-fa-pin?EmployeeId=50000000129027&amp;UserId=103</msg>
<status status="PASS" starttime="20220228 14:15:41.852" endtime="20220228 14:15:41.855"></status>
</kw>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_pin_code}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:42.112" level="INFO">Get Request using : alias=session, uri=/employees/two-fa-pin?EmployeeId=50000000129027&amp;UserId=103, headers=None json=None</msg>
<msg timestamp="20220228 14:15:42.112" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:42.112" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:41.855" endtime="20220228 14:15:42.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.113" level="INFO">{'result': {'pin': '203115'}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:42.112" endtime="20220228 14:15:42.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:42.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.113" endtime="20220228 14:15:42.113"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.113" endtime="20220228 14:15:42.113"></status>
</kw>
<msg timestamp="20220228 14:15:42.113" level="INFO">${resp} = {'result': {'pin': '203115'}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:41.855" endtime="20220228 14:15:42.113"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:41.852" endtime="20220228 14:15:42.113"></status>
</kw>
<doc>Lấy mã xác nhận cho chấm công gps</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:41.280" endtime="20220228 14:15:42.114" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Add work schedule">
<kw name="Add Work Schedule" library="employee">
<kw name="Format enp shift branch" library="shift">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.115" level="INFO">${list_format} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:42.115" endtime="20220228 14:15:42.115"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_shift_branch}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:42.115" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:42.116" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:42.115" endtime="20220228 14:15:42.116"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.116" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.116" endtime="20220228 14:15:42.116"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.116" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.116" endtime="20220228 14:15:42.116"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.117" level="INFO">${data_format} = /shifts/multiple-branch/orderby-from-to?BranchIds=37&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 14:15:42.116" endtime="20220228 14:15:42.117"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.116" endtime="20220228 14:15:42.117"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.116" endtime="20220228 14:15:42.117"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.117" endtime="20220228 14:15:42.117"></status>
</kw>
<msg timestamp="20220228 14:15:42.117" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=37&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 14:15:42.115" endtime="20220228 14:15:42.117"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${enp_shift_branch}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.117" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=37&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 14:15:42.117" endtime="20220228 14:15:42.117"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.114" endtime="20220228 14:15:42.117"></status>
</kw>
<kw name="Create Shift" library="shift">
<arguments>
<arg>123456</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp_shift}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id}</arg>
<arg>${name}</arg>
<arg>${branch_id}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.118" level="INFO">${list_format} = ['123456', 'VXgk', 37]</msg>
<status status="PASS" starttime="20220228 14:15:42.118" endtime="20220228 14:15:42.118"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_shift}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_shift}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:42.118" level="INFO">Length is 3</msg>
<msg timestamp="20220228 14:15:42.118" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 14:15:42.118" endtime="20220228 14:15:42.118"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.119" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:42.119" endtime="20220228 14:15:42.119"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.119" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:42.119" endtime="20220228 14:15:42.119"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.119" level="INFO">${data_format} = {"shift":{"id":123456,"name":"[D1]","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 14:15:42.119" endtime="20220228 14:15:42.120"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.119" endtime="20220228 14:15:42.120"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.120" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:42.120" endtime="20220228 14:15:42.120"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.120" level="INFO">${value_temp} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:42.120" endtime="20220228 14:15:42.120"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.120" level="INFO">${data_format} = {"shift":{"id":123456,"name":"VXgk","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 14:15:42.120" endtime="20220228 14:15:42.120"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.120" endtime="20220228 14:15:42.120"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.121" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.121" endtime="20220228 14:15:42.121"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.121" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.121" endtime="20220228 14:15:42.121"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.121" level="INFO">${data_format} = {"shift":{"id":123456,"name":"VXgk","from":420,"to":660,"isActive":true,"branchId":37,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 14:15:42.121" endtime="20220228 14:15:42.121"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.121" endtime="20220228 14:15:42.121"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.119" endtime="20220228 14:15:42.121"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.122" endtime="20220228 14:15:42.122"></status>
</kw>
<msg timestamp="20220228 14:15:42.122" level="INFO">${data_shift} = {"shift":{"id":123456,"name":"VXgk","from":420,"to":660,"isActive":true,"branchId":37,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 14:15:42.118" endtime="20220228 14:15:42.122"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}</arg>
<arg>${data_shift}</arg>
<arg>${expected_statusCode}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:42.554" level="INFO">Post Request using : alias=session, uri=/shifts, data={"shift":{"id":123456,"name":"VXgk","from":420,"to":660,"isActive":true,"branchId":37,"checkInBefore":240,"checkOutAfter":840}}, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:42.554" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:42.554" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.122" endtime="20220228 14:15:42.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.555" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:42.554" endtime="20220228 14:15:42.555"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.555" endtime="20220228 14:15:42.555"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.555" endtime="20220228 14:15:42.555"></status>
</kw>
<msg timestamp="20220228 14:15:42.555" level="INFO">${resp} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:42.122" endtime="20220228 14:15:42.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.556" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:42.556" endtime="20220228 14:15:42.556"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.556" endtime="20220228 14:15:42.556"></status>
</kw>
<msg timestamp="20220228 14:15:42.556" level="INFO">${resp_shift} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:42.117" endtime="20220228 14:15:42.556"></status>
</kw>
<kw name="Get RanDom ID Shift And Get Name From ID" library="shift">
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift_branch}</arg>
<arg>$..result[?(@.isActive==true)].id</arg>
</arguments>
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:42.705" level="INFO">Get Request using : alias=session, uri=/shifts/multiple-branch/orderby-from-to?BranchIds=37&amp;ShiftIds=, headers=None json=None</msg>
<msg timestamp="20220228 14:15:42.705" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:42.705" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.557" endtime="20220228 14:15:42.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.705" level="INFO">{'result': [{'id': 50000000120816, 'name': 'VXgk', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 50000000120815, 'name': 'dPPy', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 50000000116705, 'name': 'Ca full', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 40000000108106, 'name': 'UpdatedPPy', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 50000000116703, 'name': 'HC', 'from': 510, 'oldFrom': 0, 'to': 1080, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 330, 'checkOutAfter': 1260}, {'id': 60000000152708, 'name': 'Ca chiều', 'from': 840, 'oldFrom': 0, 'to': 1080, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 810, 'checkOutAfter': 1110}], 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:42.705" endtime="20220228 14:15:42.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:42.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.705" endtime="20220228 14:15:42.706"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.706" endtime="20220228 14:15:42.706"></status>
</kw>
<msg timestamp="20220228 14:15:42.706" level="INFO">${resp} = {'result': [{'id': 50000000120816, 'name': 'VXgk', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, ...</msg>
<status status="PASS" starttime="20220228 14:15:42.557" endtime="20220228 14:15:42.706"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:42.723" level="INFO">${list} = [50000000120816, 50000000120815, 50000000116705, 40000000108106, 50000000116703, 60000000152708]</msg>
<status status="PASS" starttime="20220228 14:15:42.706" endtime="20220228 14:15:42.723"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:42.724" level="INFO">${value} = 50000000120816</msg>
<status status="PASS" starttime="20220228 14:15:42.723" endtime="20220228 14:15:42.724"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.724" endtime="20220228 14:15:42.724"></status>
</kw>
<msg timestamp="20220228 14:15:42.725" level="INFO">${id_shift} = 50000000120816</msg>
<status status="PASS" starttime="20220228 14:15:42.556" endtime="20220228 14:15:42.725"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}/${id_shift}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${name_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:42.815" level="INFO">Get Request using : alias=session, uri=/shifts/50000000120816, headers=None json=None</msg>
<msg timestamp="20220228 14:15:42.815" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:42.816" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.725" endtime="20220228 14:15:42.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.816" level="INFO">{'result': {'id': 50000000120816, 'name': 'VXgk', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:42.816" endtime="20220228 14:15:42.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:42.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.816" endtime="20220228 14:15:42.816"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.816" endtime="20220228 14:15:42.817"></status>
</kw>
<msg timestamp="20220228 14:15:42.817" level="INFO">${resp} = {'result': {'id': 50000000120816, 'name': 'VXgk', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 37, 'tenantId': 916276, 'checkInBefore': 240, 'checkOutAfter': 840}, '...</msg>
<status status="PASS" starttime="20220228 14:15:42.725" endtime="20220228 14:15:42.817"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:42.834" level="INFO">${result} = ['VXgk']</msg>
<status status="PASS" starttime="20220228 14:15:42.817" endtime="20220228 14:15:42.834"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:42.834" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:42.834" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:42.834" endtime="20220228 14:15:42.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:42.835" endtime="20220228 14:15:42.835"></status>
</kw>
<msg timestamp="20220228 14:15:42.835" level="INFO">${result} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:42.834" endtime="20220228 14:15:42.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.835" endtime="20220228 14:15:42.835"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.835" endtime="20220228 14:15:42.835"></status>
</kw>
<msg timestamp="20220228 14:15:42.835" level="INFO">${value} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:42.817" endtime="20220228 14:15:42.835"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.836" endtime="20220228 14:15:42.836"></status>
</kw>
<msg timestamp="20220228 14:15:42.836" level="INFO">${name_shift} = VXgk</msg>
<status status="PASS" starttime="20220228 14:15:42.725" endtime="20220228 14:15:42.836"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_shift}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.836" endtime="20220228 14:15:42.836"></status>
</kw>
<msg timestamp="20220228 14:15:42.836" level="INFO">${id_shift} = 50000000120816</msg>
<status status="PASS" starttime="20220228 14:15:42.556" endtime="20220228 14:15:42.836"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>12-12-2021</arg>
<arg>12-01-2022</arg>
<arg>${id_employee}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>${id_shift}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.836" level="INFO">${list_format} = ['12-12-2021', '12-01-2022', 50000000129027, 37, 37, 50000000120816]</msg>
<status status="PASS" starttime="20220228 14:15:42.836" endtime="20220228 14:15:42.836"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_add_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:42.837" level="INFO">Length is 6</msg>
<msg timestamp="20220228 14:15:42.837" level="INFO">${length} = 6</msg>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.837"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.837" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.837"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.838" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.838"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.838" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"[D1]","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts":[{"sh...</msg>
<status status="PASS" starttime="20220228 14:15:42.838" endtime="20220228 14:15:42.838"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.838"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.838" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220228 14:15:42.838" endtime="20220228 14:15:42.838"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.838" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220228 14:15:42.838" endtime="20220228 14:15:42.838"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.839" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts"...</msg>
<status status="PASS" starttime="20220228 14:15:42.839" endtime="20220228 14:15:42.839"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.838" endtime="20220228 14:15:42.839"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.839" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:42.839" endtime="20220228 14:15:42.839"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.839" level="INFO">${value_temp} = 50000000129027</msg>
<status status="PASS" starttime="20220228 14:15:42.839" endtime="20220228 14:15:42.839"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.840" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSh...</msg>
<status status="PASS" starttime="20220228 14:15:42.839" endtime="20220228 14:15:42.840"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.839" endtime="20220228 14:15:42.840"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.840" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.840" endtime="20220228 14:15:42.840"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.840" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.840" endtime="20220228 14:15:42.840"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.840" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":37,"branchIds":[[D4]],"timeShee...</msg>
<status status="PASS" starttime="20220228 14:15:42.840" endtime="20220228 14:15:42.840"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.840" endtime="20220228 14:15:42.840"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.841" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.841" endtime="20220228 14:15:42.841"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.841" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:42.841" endtime="20220228 14:15:42.841"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.842" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":37,"branchIds":[37],"timeSheetS...</msg>
<status status="PASS" starttime="20220228 14:15:42.841" endtime="20220228 14:15:42.842"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.841" endtime="20220228 14:15:42.842"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.842" level="INFO">${value_temp} = 50000000120816</msg>
<status status="PASS" starttime="20220228 14:15:42.842" endtime="20220228 14:15:42.842"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:42.842" level="INFO">${value_temp} = 50000000120816</msg>
<status status="PASS" starttime="20220228 14:15:42.842" endtime="20220228 14:15:42.842"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:42.842" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":37,"branchIds":[37],"timeSheetS...</msg>
<status status="PASS" starttime="20220228 14:15:42.842" endtime="20220228 14:15:42.843"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.842" endtime="20220228 14:15:42.843"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.843"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:42.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:42.843" endtime="20220228 14:15:42.843"></status>
</kw>
<msg timestamp="20220228 14:15:42.843" level="INFO">${data} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":37,"branchIds":[37],"timeSheetS...</msg>
<status status="PASS" starttime="20220228 14:15:42.837" endtime="20220228 14:15:42.843"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_add_work_schedule}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:43.279" level="INFO">Post Request using : alias=session, uri=/timesheets, data={"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":50000000129027,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":37,"branchIds":[37],"timeSheetShifts":[{"shiftIds":"50000000120816","repeatDaysOfWeek":null}]}}, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:43.279" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:43.279" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:42.843" endtime="20220228 14:15:43.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.280" level="INFO">{'result': {'id': 220000000026820, 'employeeId': 50000000129027, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'saveOnDaysOffOfBranch': False, 'saveOnHoliday': False, 'timeSheetStatus': 1, 'clockings': [{'id': 220000000272062, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272063, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272064, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272065, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272066, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272067, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272068, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272069, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272070, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-24T07:00:00.0000000', 'endTime': '2021-12-24T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272071, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-27T07:00:00.0000000', 'endTime': '2021-12-27T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272072, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-28T07:00:00.0000000', 'endTime': '2021-12-28T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272073, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-29T07:00:00.0000000', 'endTime': '2021-12-29T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272074, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-30T07:00:00.0000000', 'endTime': '2021-12-30T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272075, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-31T07:00:00.0000000', 'endTime': '2021-12-31T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272076, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-03T07:00:00.0000000', 'endTime': '2022-01-03T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272077, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272078, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272079, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272080, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272081, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-10T07:00:00.0000000', 'endTime': '2022-01-10T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272082, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-11T07:00:00.0000000', 'endTime': '2022-01-11T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 220000000272083, 'timeSheetId': 220000000026820, 'shiftId': 50000000120816, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-12T07:00:00.0000000', 'endTime': '2022-01-12T11:00:00.0000000', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:43.7670000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'clockingsOverlapTime': [{'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-09T07:00:00.0000000', 'endTime': '2022-01-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-08T07:00:00.0000000', 'endTime': '2022-01-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-02T07:00:00.0000000', 'endTime': '2022-01-02T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2022-01-01T07:00:00.0000000', 'endTime': '2022-01-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'Tết Dương lịch', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-26T07:00:00.0000000', 'endTime': '2021-12-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-25T07:00:00.0000000', 'endTime': '2021-12-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'FD', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-19T07:00:00.0000000', 'endTime': '2021-12-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-18T07:00:00.0000000', 'endTime': '2021-12-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 50000000120816, 'timeSheetId': -1, 'employeeId': 50000000129027, 'workById': 50000000129027, 'clockingStatus': 1, 'startTime': '2021-12-12T07:00:00.0000000', 'endTime': '2021-12-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}], 'timeSheetShifts': [{'id': -9223372036854773964, 'shiftIds': '50000000120816', 'timeSheetShiftStatus': 0, 'timeSheetId': 220000000026820}], 'hasEndDate': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:43.280" endtime="20220228 14:15:43.280"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.281" endtime="20220228 14:15:43.281"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.281" endtime="20220228 14:15:43.281"></status>
</kw>
<msg timestamp="20220228 14:15:43.282" level="INFO">${resp} = {'result': {'id': 220000000026820, 'employeeId': 50000000129027, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay...</msg>
<status status="PASS" starttime="20220228 14:15:42.843" endtime="20220228 14:15:43.282"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_work_schedule}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:43.298" level="INFO">${result} = [220000000026820]</msg>
<status status="PASS" starttime="20220228 14:15:43.282" endtime="20220228 14:15:43.298"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:43.299" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:43.299" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:43.298" endtime="20220228 14:15:43.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:43.299" endtime="20220228 14:15:43.299"></status>
</kw>
<msg timestamp="20220228 14:15:43.299" level="INFO">${result} = 220000000026820</msg>
<status status="PASS" starttime="20220228 14:15:43.299" endtime="20220228 14:15:43.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.299" endtime="20220228 14:15:43.300"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.299" endtime="20220228 14:15:43.300"></status>
</kw>
<msg timestamp="20220228 14:15:43.300" level="INFO">${id_work_schedule} = 220000000026820</msg>
<status status="PASS" starttime="20220228 14:15:43.282" endtime="20220228 14:15:43.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
<arg>${id_work_schedule}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.300" level="INFO">${id_work_schedule} = 220000000026820</msg>
<status status="PASS" starttime="20220228 14:15:43.300" endtime="20220228 14:15:43.300"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:42.114" endtime="20220228 14:15:43.300"></status>
</kw>
<doc>Thêm lịch làm việc cho nhân viên tại MH nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:42.114" endtime="20220228 14:15:43.300" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Delete work schedule">
<kw name="Delete Work Schedule" library="employee">
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:43.301" level="INFO">${list_format} = [220000000026820]</msg>
<status status="PASS" starttime="20220228 14:15:43.301" endtime="20220228 14:15:43.301"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_del_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_del_work_schedule}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:43.302" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:43.302" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:43.302" endtime="20220228 14:15:43.302"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:43.302" level="INFO">${value_temp} = 220000000026820</msg>
<status status="PASS" starttime="20220228 14:15:43.302" endtime="20220228 14:15:43.302"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:43.302" level="INFO">${value_temp} = 220000000026820</msg>
<status status="PASS" starttime="20220228 14:15:43.302" endtime="20220228 14:15:43.302"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:43.303" level="INFO">${data_format} = {"Id":220000000026820}</msg>
<status status="PASS" starttime="20220228 14:15:43.303" endtime="20220228 14:15:43.303"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.302" endtime="20220228 14:15:43.303"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.302" endtime="20220228 14:15:43.303"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.303" endtime="20220228 14:15:43.303"></status>
</kw>
<msg timestamp="20220228 14:15:43.303" level="INFO">${data_del_work_schedule} = {"Id":220000000026820}</msg>
<status status="PASS" starttime="20220228 14:15:43.301" endtime="20220228 14:15:43.303"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_delete_work_schedule}</arg>
<arg>${data_del_work_schedule}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:43.575" level="INFO">Put Request using : alias=session, uri=/timesheets/cancelTimeSheet, data={"Id":220000000026820},                     headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjYxMiwiZXhwIjoxNjQ4NDUxODEyLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiI4MWNiMWExY2ZiMWM0NGMyOWMxZWU2YWI5NWJjNzhmNyIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.k0yEUyL6RFGKN1h9w_SicMbiTMQkUR54ed4hPMh_850EhO-BlCqxg_Gqth3-7_4rUU1ihiVYsgwq-Lv4cPSAF7avucMdrtnrr22KvBCgzsbA-ik4Irom4GYcCEnnr-3Y63bLJPX_9M2nq6Oij6iPs1XKcNXP5i5EfsNgx2Wc50dcfjts7oQq0ocTPXUkNwzgTt7UOJ2apELaeoZtIRP3en2mYC0ZzGhZP3vIROnfvyNFmrlOnIXFoebdZ7bOcboPfShci1KejT6h7wXipmUcapVaKLjc__ZAewEwB9Nwj3-zAy3UCDBwHTn5aYDRHjR-bM_Z4uLYpZdydRWgGWO1QA'}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:43.575" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:43.576" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.304" endtime="20220228 14:15:43.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.576" level="INFO">{'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:43.576" endtime="20220228 14:15:43.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.576" endtime="20220228 14:15:43.576"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.577" endtime="20220228 14:15:43.577"></status>
</kw>
<msg timestamp="20220228 14:15:43.577" level="INFO">${resp} = {'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:43.303" endtime="20220228 14:15:43.577"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_validate}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:43.595" level="INFO">${result} = ['Hủy lịch làm việc thành công']</msg>
<status status="PASS" starttime="20220228 14:15:43.577" endtime="20220228 14:15:43.595"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:43.595" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:43.595" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:43.595" endtime="20220228 14:15:43.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:43.596" endtime="20220228 14:15:43.596"></status>
</kw>
<msg timestamp="20220228 14:15:43.596" level="INFO">${result} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220228 14:15:43.595" endtime="20220228 14:15:43.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.596" endtime="20220228 14:15:43.596"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.596" endtime="20220228 14:15:43.596"></status>
</kw>
<msg timestamp="20220228 14:15:43.597" level="INFO">${mess_validate} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220228 14:15:43.577" endtime="20220228 14:15:43.597"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_validate}</arg>
<arg>Hủy lịch làm việc thành công</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:43.597" endtime="20220228 14:15:43.597"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.301" endtime="20220228 14:15:43.597"></status>
</kw>
<doc>Xóa lịch làm việc của nhân viên tại tab lịch làm việc của màn hình nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:43.300" endtime="20220228 14:15:43.597" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Delete Employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:43.598" level="INFO">${list_format} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:43.598" endtime="20220228 14:15:43.598"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:43.598" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:43.599" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:43.598" endtime="20220228 14:15:43.599"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:43.599" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:43.599" endtime="20220228 14:15:43.599"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:43.599" level="INFO">${value_temp} = 37</msg>
<status status="PASS" starttime="20220228 14:15:43.599" endtime="20220228 14:15:43.599"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:43.600" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:43.599" endtime="20220228 14:15:43.600"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.599" endtime="20220228 14:15:43.600"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.599" endtime="20220228 14:15:43.600"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.600" endtime="20220228 14:15:43.600"></status>
</kw>
<msg timestamp="20220228 14:15:43.600" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:43.598" endtime="20220228 14:15:43.600"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.600" endtime="20220228 14:15:43.600"></status>
</kw>
<msg timestamp="20220228 14:15:43.600" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37</msg>
<status status="PASS" starttime="20220228 14:15:43.598" endtime="20220228 14:15:43.600"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:43.710" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=37, headers=None json=None</msg>
<msg timestamp="20220228 14:15:43.710" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:43.711" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.601" endtime="20220228 14:15:43.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.711" level="INFO">{'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Update tSmx', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.4590000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T01:59:02.4300000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Update tSmx', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088712, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004212}]}, {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Update tSmx', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.4590000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T04:27:09.1330000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Update tSmx', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088714, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004214}]}, {'id': 100000000004120, 'code': 'NV000009', 'name': '221', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Update tSmx', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.4590000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T16:22:24.6300000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Update tSmx', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088620, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004120}]}, {'id': 40000000110209, 'code': 'NV000002', 'name': 'nv app', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:06.0600000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:59:17.0210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['12'], 'employeeBranches': [{'id': 40000000236616, 'tenantId': 916276, 'branchId': 37, 'employeeId': 40000000110209}]}, {'id': 230000000015209, 'code': 'NV000013', 'name': 'thêm mới check audit', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:05:47.9230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898909, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015209}]}, {'id': 60000000186902, 'code': 'NV000010', 'name': 'cccccccc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-10T18:23:25.4570000', 'modifiedBy': 103, 'modifiedDate': '2021-12-11T15:27:40.3580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001423702, 'tenantId': 916276, 'branchId': 37, 'employeeId': 60000000186902}]}, {'id': 210000001006403, 'code': 'NV000004', 'name': 'nv chấm công', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-15T11:49:39.4330000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:58:46.8380000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011555403, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006403}]}, {'id': 110000000120852, 'code': 'NV000015', 'name': 'fđfbfd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T17:15:50.5400000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000263758, 'tenantId': 916276, 'branchId': 37, 'employeeId': 110000000120852}]}, {'id': 230000000015213, 'code': 'NV000014', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 1000113059, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T15:12:49.2870000', 'modifiedBy': 103, 'modifiedDate': '2021-12-21T15:12:52.6600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000898913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 230000000015213}]}, {'id': 210000001006514, 'code': 'NV000005', 'name': 'Dung test', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Update tSmx', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.4590000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:46.7870000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': 'Update tSmx', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011564314, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001006514}]}, {'id': 120000000125511, 'code': 'NV000011', 'name': 'test123456', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 90000001011702, 'department': {'id': 90000001011702, 'name': 'phong 1', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:16.8700000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-11T15:35:24.5270000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.7110000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'phong 1', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 120000000234611, 'tenantId': 916276, 'branchId': 37, 'employeeId': 120000000125511}]}, {'id': 210000001013405, 'code': 'NV000012', 'name': 'bánh tét', 'isActive': True, 'identityNumber': '123', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'identityKeyClocking': 'CDA5BA1C77DE8DCC956CA275E2D05B7AE0B2BA7B1EEBDD5C2F63B5BEC9A7DD50', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-12-21T14:25:56.6530000', 'modifiedBy': 0, 'modifiedDate': '2021-12-21T15:17:32.5260000', 'isDeleted': False, 'secretKeyTakenUserId': 103, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000012196205, 'tenantId': 916276, 'branchId': 37, 'employeeId': 210000001013405}]}, {'id': 50000000129027, 'code': 'UD13827152', 'name': 'UpdateVXgk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:38.9070000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:42.8090000', 'isDeleted': False, 'secretKeyTakenUserId': 103, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329628, 'tenantId': 916276, 'branchId': 37, 'employeeId': 50000000129027}]}, {'id': 100000000107211, 'code': 'NV133002', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:33.0970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191913, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107211}]}, {'id': 100000000107210, 'code': 'NV927562', 'name': 'vokd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2022-02-28T14:15:28.6870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000191912, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000107210}]}, {'id': 150000000103418, 'code': 'NV000003', 'name': 'nv web', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:20.9870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 150000003517625, 'tenantId': 916276, 'branchId': 37, 'employeeId': 150000000103418}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:43.711" endtime="20220228 14:15:43.712"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:43.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.712" endtime="20220228 14:15:43.712"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.712" endtime="20220228 14:15:43.712"></status>
</kw>
<msg timestamp="20220228 14:15:43.713" level="INFO">${resp} = {'result': {'total': 16, 'data': [{'id': 100000000004212, 'code': 'NV000006', 'name': 'Dung 0608', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': ''...</msg>
<status status="PASS" starttime="20220228 14:15:43.601" endtime="20220228 14:15:43.713"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:43.731" level="INFO">${list} = [100000000004212, 100000000004214, 100000000004120, 40000000110209, 230000000015209, 60000000186902, 210000001006403, 110000000120852, 230000000015213, 210000001006514, 120000000125511, 21000000101340...</msg>
<status status="PASS" starttime="20220228 14:15:43.713" endtime="20220228 14:15:43.731"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:43.731" level="INFO">${value} = 100000000004214</msg>
<status status="PASS" starttime="20220228 14:15:43.731" endtime="20220228 14:15:43.732"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.732" endtime="20220228 14:15:43.732"></status>
</kw>
<msg timestamp="20220228 14:15:43.732" level="INFO">${id_employee} = 100000000004214</msg>
<status status="PASS" starttime="20220228 14:15:43.600" endtime="20220228 14:15:43.732"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:43.916" level="INFO">Get Request using : alias=session, uri=/employees/100000000004214, headers=None json=None</msg>
<msg timestamp="20220228 14:15:43.916" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:43.916" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.732" endtime="20220228 14:15:43.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.917" level="INFO">{'result': {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'jobTitleId': 210000001000803, 'jobTitle': {'id': 210000001000803, 'name': 'Update tSmx', 'description': '', 'isActive': True, 'tenantId': 916276, 'createdBy': 103, 'createdDate': '2021-07-16T03:56:44.0400000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:43.4590000', 'isDeleted': False}, 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-08-06T04:27:09.1330000', 'modifiedBy': 103, 'modifiedDate': '2022-02-28T14:15:41.4630000', 'isDeleted': False, 'clockings': [{'id': 100000000501089, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-01T07:00:00.0000000', 'endTime': '2021-08-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-01T07:00:00.0000000', 'checkOutDate': '2021-08-01T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501090, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-02T07:00:00.0000000', 'endTime': '2021-08-02T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-02T07:00:00.0000000', 'checkOutDate': '2021-08-02T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501091, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-03T07:00:00.0000000', 'endTime': '2021-08-03T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-03T07:00:00.0000000', 'checkOutDate': '2021-08-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501092, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-04T07:00:00.0000000', 'endTime': '2021-08-04T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-04T07:00:00.0000000', 'checkOutDate': '2021-08-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501093, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-05T07:00:00.0000000', 'endTime': '2021-08-05T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-05T07:00:00.0000000', 'checkOutDate': '2021-08-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501094, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-06T07:00:00.0000000', 'endTime': '2021-08-06T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-06T07:00:00.0000000', 'checkOutDate': '2021-08-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501095, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-07T07:00:00.0000000', 'endTime': '2021-08-07T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-07T07:00:00.0000000', 'checkOutDate': '2021-08-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501096, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-08T07:00:00.0000000', 'endTime': '2021-08-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-08T07:00:00.0000000', 'checkOutDate': '2021-08-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501097, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-09T07:00:00.0000000', 'endTime': '2021-08-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-09T07:00:00.0000000', 'checkOutDate': '2021-08-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501098, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-10T07:00:00.0000000', 'endTime': '2021-08-10T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-10T07:00:00.0000000', 'checkOutDate': '2021-08-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501099, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-11T07:00:00.0000000', 'endTime': '2021-08-11T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-11T07:00:00.0000000', 'checkOutDate': '2021-08-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501100, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-12T07:00:00.0000000', 'endTime': '2021-08-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-12T07:00:00.0000000', 'checkOutDate': '2021-08-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501101, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-13T07:00:00.0000000', 'endTime': '2021-08-13T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-13T07:00:00.0000000', 'checkOutDate': '2021-08-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501102, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 3, 'startTime': '2021-08-14T07:00:00.0000000', 'endTime': '2021-08-14T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'checkInDate': '2021-08-14T07:00:00.0000000', 'checkOutDate': '2021-08-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501103, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-15T07:00:00.0000000', 'endTime': '2021-08-15T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501104, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-16T07:00:00.0000000', 'endTime': '2021-08-16T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501105, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-17T07:00:00.0000000', 'endTime': '2021-08-17T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501106, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-18T07:00:00.0000000', 'endTime': '2021-08-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501107, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-19T07:00:00.0000000', 'endTime': '2021-08-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501108, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-20T07:00:00.0000000', 'endTime': '2021-08-20T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501109, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-21T07:00:00.0000000', 'endTime': '2021-08-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501110, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-22T07:00:00.0000000', 'endTime': '2021-08-22T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501111, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-23T07:00:00.0000000', 'endTime': '2021-08-23T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501112, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-24T07:00:00.0000000', 'endTime': '2021-08-24T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501113, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-25T07:00:00.0000000', 'endTime': '2021-08-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501114, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-26T07:00:00.0000000', 'endTime': '2021-08-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501115, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-27T07:00:00.0000000', 'endTime': '2021-08-27T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501116, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-28T07:00:00.0000000', 'endTime': '2021-08-28T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501117, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-29T07:00:00.0000000', 'endTime': '2021-08-29T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501118, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-30T07:00:00.0000000', 'endTime': '2021-08-30T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501119, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-08-31T07:00:00.0000000', 'endTime': '2021-08-31T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501120, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-01T07:00:00.0000000', 'endTime': '2021-09-01T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501121, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-03T07:00:00.0000000', 'endTime': '2021-09-03T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501122, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-04T07:00:00.0000000', 'endTime': '2021-09-04T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501123, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-05T07:00:00.0000000', 'endTime': '2021-09-05T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501124, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-06T07:00:00.0000000', 'endTime': '2021-09-06T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501125, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-07T07:00:00.0000000', 'endTime': '2021-09-07T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501126, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-08T07:00:00.0000000', 'endTime': '2021-09-08T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501127, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-09T07:00:00.0000000', 'endTime': '2021-09-09T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501128, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-10T07:00:00.0000000', 'endTime': '2021-09-10T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501129, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-11T07:00:00.0000000', 'endTime': '2021-09-11T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501130, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-12T07:00:00.0000000', 'endTime': '2021-09-12T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501131, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-13T07:00:00.0000000', 'endTime': '2021-09-13T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501132, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-14T07:00:00.0000000', 'endTime': '2021-09-14T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501133, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-15T07:00:00.0000000', 'endTime': '2021-09-15T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501134, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-16T07:00:00.0000000', 'endTime': '2021-09-16T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501135, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-17T07:00:00.0000000', 'endTime': '2021-09-17T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501136, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-18T07:00:00.0000000', 'endTime': '2021-09-18T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501137, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-19T07:00:00.0000000', 'endTime': '2021-09-19T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501138, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-20T07:00:00.0000000', 'endTime': '2021-09-20T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501139, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-21T07:00:00.0000000', 'endTime': '2021-09-21T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501140, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-22T07:00:00.0000000', 'endTime': '2021-09-22T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501141, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-23T07:00:00.0000000', 'endTime': '2021-09-23T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501142, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-24T07:00:00.0000000', 'endTime': '2021-09-24T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501143, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-25T07:00:00.0000000', 'endTime': '2021-09-25T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501144, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-26T07:00:00.0000000', 'endTime': '2021-09-26T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501145, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-27T07:00:00.0000000', 'endTime': '2021-09-27T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501146, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-28T07:00:00.0000000', 'endTime': '2021-09-28T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501147, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-29T07:00:00.0000000', 'endTime': '2021-09-29T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000501148, 'shiftId': 50000000116705, 'timeSheetId': 100000000058174, 'employeeId': 100000000004214, 'workById': 100000000004214, 'clockingStatus': 1, 'startTime': '2021-09-30T07:00:00.0000000', 'endTime': '2021-09-30T11:00:00.0000000', 'branchId': 37, 'tenantId': 916276, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': 'Update tSmx', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000088714, 'tenantId': 916276, 'branchId': 37, 'employeeId': 100000000004214}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:43.916" endtime="20220228 14:15:43.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:43.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.917" endtime="20220228 14:15:43.918"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.918" endtime="20220228 14:15:43.918"></status>
</kw>
<msg timestamp="20220228 14:15:43.919" level="INFO">${resp} = {'result': {'id': 100000000004214, 'code': 'NV000007', 'name': 'test 0806', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', '...</msg>
<status status="PASS" starttime="20220228 14:15:43.732" endtime="20220228 14:15:43.919"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:43.939" level="INFO">${list} = ['NV000007']</msg>
<status status="PASS" starttime="20220228 14:15:43.919" endtime="20220228 14:15:43.939"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:43.940" level="INFO">${value} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:43.939" endtime="20220228 14:15:43.940"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.940" endtime="20220228 14:15:43.940"></status>
</kw>
<msg timestamp="20220228 14:15:43.940" level="INFO">${code_employee} = NV000007</msg>
<status status="PASS" starttime="20220228 14:15:43.732" endtime="20220228 14:15:43.940"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 14:15:43.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:43.940" endtime="20220228 14:15:43.940"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.597" endtime="20220228 14:15:43.940"></status>
</kw>
<kw name="Delete Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>200</arg>
</arguments>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:44.413" level="INFO">Delete Request using : alias=session, uri=/employees/50000000129027, data=(),                     headers=None, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:44.413" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:44.413" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:43.941" endtime="20220228 14:15:44.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:44.413" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220228 14:15:44.413" endtime="20220228 14:15:44.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:44.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:44.413" endtime="20220228 14:15:44.414"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:44.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:44.414" endtime="20220228 14:15:44.414"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:43.940" endtime="20220228 14:15:44.414"></status>
</kw>
<doc>Xóa 1 nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:43.597" endtime="20220228 14:15:44.414" critical="yes"></status>
</test>
<status status="PASS" starttime="20220228 14:15:36.220" endtime="20220228 14:15:44.415"></status>
</suite>
<status status="PASS" starttime="20220228 14:15:36.219" endtime="20220228 14:15:44.416"></status>
</suite>
<status status="PASS" starttime="20220228 14:15:36.202" endtime="20220228 14:15:44.418"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">all</stat>
<stat pass="8" fail="0">employee</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="8" fail="0" id="s1-s1-s1" name="Employee">Testsuites.NhanVien.Employee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
