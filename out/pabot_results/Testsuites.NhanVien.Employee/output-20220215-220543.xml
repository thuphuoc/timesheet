<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220215 22:05:43.094">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Employee" source="D:\timesheet\testsuites\NhanVien\employee.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:43.324" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone1': 'https://testz...</msg>
<status status="PASS" starttime="20220215 22:05:43.323" endtime="20220215 22:05:43.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>59902=/auth/salelogin</arg>
<arg>59903=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:43.324" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', '59902': '/auth/salelogin', '59903': '/auth/salelogin', ...</msg>
<status status="PASS" starttime="20220215 22:05:43.324" endtime="20220215 22:05:43.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>59902=https://kvpos.com:55002</arg>
<arg>59903=https://kvpos.com:55003</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220215 22:05:43.324" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220215 22:05:43.324" endtime="20220215 22:05:43.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>59902=https://kvpos.com:59932/api</arg>
<arg>59903=https://kvpos.com:59933/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220215 22:05:43.325" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220215 22:05:43.324" endtime="20220215 22:05:43.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220215 22:05:43.325" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', '59902': '1', '59903': '1', 'fnb15': 'admin'}</msg>
<status status="PASS" starttime="20220215 22:05:43.325" endtime="20220215 22:05:43.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220215 22:05:43.325" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', '59902': '1', '59903': '1', 'fnb15': '123'}</msg>
<status status="PASS" starttime="20220215 22:05:43.325" endtime="20220215 22:05:43.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>59902=phuoc902</arg>
<arg>59903=phuoc903</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220215 22:05:43.326" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', '59902': 'phuoc902', '59903': 'phuoc903', 'fnb15': 'testfnbz15a'}</msg>
<status status="PASS" starttime="20220215 22:05:43.325" endtime="20220215 22:05:43.326"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220215 22:05:43.326" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 22:05:43.326" endtime="20220215 22:05:43.326"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220215 22:05:43.326" level="INFO">${password} = 123</msg>
<status status="PASS" starttime="20220215 22:05:43.326" endtime="20220215 22:05:43.326"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220215 22:05:43.326" level="INFO">${retailer} = testz1</msg>
<status status="PASS" starttime="20220215 22:05:43.326" endtime="20220215 22:05:43.326"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:43.327" level="INFO">${url_saleLogin} = https://testz1.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:43.326" endtime="20220215 22:05:43.327"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:43.327" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 22:05:43.327" endtime="20220215 22:05:43.327"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220215 22:05:43.327" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 22:05:43.327" endtime="20220215 22:05:43.327"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220215 22:05:43.328" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:43.327" endtime="20220215 22:05:43.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.328" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 22:05:43.328" endtime="20220215 22:05:43.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.328" level="INFO">${password} = 123</msg>
<status status="PASS" starttime="20220215 22:05:43.328" endtime="20220215 22:05:43.328"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.329" level="INFO">${retailer} = testz1</msg>
<status status="PASS" starttime="20220215 22:05:43.328" endtime="20220215 22:05:43.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.329" level="INFO">${url_saleLogin} = https://testz1.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:43.329" endtime="20220215 22:05:43.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.329" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 22:05:43.329" endtime="20220215 22:05:43.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.329" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 22:05:43.329" endtime="20220215 22:05:43.329"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.330" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:43.330" endtime="20220215 22:05:43.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 22:05:43.330" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220215 22:05:43.330" endtime="20220215 22:05:43.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:43.330" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123'}</msg>
<status status="PASS" starttime="20220215 22:05:43.330" endtime="20220215 22:05:43.330"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.331" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz1.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:43.330" endtime="20220215 22:05:43.331"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:43.589" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123"}, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:43.589" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz1.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:43.589" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:43.331" endtime="20220215 22:05:43.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.590" level="INFO">{'UserId': 14164, 'UserName': 'admin', 'SessionId': 'DIU7fVq9rskSRLOMetVn', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg', 'CurrentBranchId': 172909, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220215 22:05:43.589" endtime="20220215 22:05:43.590"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.610" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdL...</msg>
<status status="PASS" starttime="20220215 22:05:43.590" endtime="20220215 22:05:43.610"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:43.610" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:43.610" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:43.610" endtime="20220215 22:05:43.610"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.610" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220215 22:05:43.610" endtime="20220215 22:05:43.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.611" endtime="20220215 22:05:43.611"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.610" endtime="20220215 22:05:43.611"></status>
</kw>
<msg timestamp="20220215 22:05:43.611" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220215 22:05:43.590" endtime="20220215 22:05:43.611"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220215 22:05:43.611" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220215 22:05:43.611" endtime="20220215 22:05:43.611"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.629" level="INFO">${result} = [172909]</msg>
<status status="PASS" starttime="20220215 22:05:43.612" endtime="20220215 22:05:43.629"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:43.629" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:43.629" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:43.629" endtime="20220215 22:05:43.629"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.629" level="INFO">${result} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.629" endtime="20220215 22:05:43.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.630" endtime="20220215 22:05:43.630"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.629" endtime="20220215 22:05:43.630"></status>
</kw>
<msg timestamp="20220215 22:05:43.630" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.611" endtime="20220215 22:05:43.630"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220215 22:05:43.630" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.630" endtime="20220215 22:05:43.630"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.630" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.630" endtime="20220215 22:05:43.630"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.649" level="INFO">${result} = [14164]</msg>
<status status="PASS" starttime="20220215 22:05:43.631" endtime="20220215 22:05:43.649"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:43.649" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:43.649" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:43.649" endtime="20220215 22:05:43.649"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.650" level="INFO">${result} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:43.649" endtime="20220215 22:05:43.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.650" endtime="20220215 22:05:43.650"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.650" endtime="20220215 22:05:43.650"></status>
</kw>
<msg timestamp="20220215 22:05:43.650" level="INFO">${user_login} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:43.631" endtime="20220215 22:05:43.650"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.651" level="INFO">${user_login} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:43.650" endtime="20220215 22:05:43.651"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 22:05:43.651" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 22:05:43.651" endtime="20220215 22:05:43.651"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220215 22:05:43.651" level="INFO">${headers_not_contenType} = {'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczN...</msg>
<status status="PASS" starttime="20220215 22:05:43.651" endtime="20220215 22:05:43.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.652" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 22:05:43.652" endtime="20220215 22:05:43.652"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.652" level="INFO">${headers_not_contenType} = {'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczN...</msg>
<status status="PASS" starttime="20220215 22:05:43.652" endtime="20220215 22:05:43.652"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.653" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:43.652" endtime="20220215 22:05:43.653"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.653" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man.kiotviet.vn/api, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:43.653" endtime="20220215 22:05:43.653"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220215 22:05:43.654" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220215 22:05:43.654" endtime="20220215 22:05:43.655"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220215 22:05:43.656" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220215 22:05:43.655" endtime="20220215 22:05:43.656"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220215 22:05:43.657" level="INFO">${random_str} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:43.657" endtime="20220215 22:05:43.657"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.657" endtime="20220215 22:05:43.658"></status>
</kw>
<msg timestamp="20220215 22:05:43.658" level="INFO">${random_str} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:43.657" endtime="20220215 22:05:43.658"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.658" level="INFO">${random_str} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:43.658" endtime="20220215 22:05:43.658"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220215 22:05:43.659" level="INFO">${random_number} = 81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.659" endtime="20220215 22:05:43.659"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.659" endtime="20220215 22:05:43.659"></status>
</kw>
<msg timestamp="20220215 22:05:43.659" level="INFO">${random_number} = 81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.658" endtime="20220215 22:05:43.659"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.660" level="INFO">${random_number} = 81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.659" endtime="20220215 22:05:43.660"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.323" endtime="20220215 22:05:43.660"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create employee">
<kw name="Create Employee" library="employee">
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>100000</arg>
<arg>200</arg>
<arg>300</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${code_employee}</arg>
<arg>${name_employee}</arg>
<arg>${branchId_salary}</arg>
<arg>${branchId_work}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.661" level="INFO">${list_format} = ['1235698', 'NV81169100', 'GpaY', '172909', '172909']</msg>
<status status="PASS" starttime="20220215 22:05:43.661" endtime="20220215 22:05:43.661"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${default}</arg>
<arg>${value_holiday}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${list_salary}</var>
</assign>
<msg timestamp="20220215 22:05:43.662" level="INFO">${list_salary} = ['100000', '200', '300']</msg>
<status status="PASS" starttime="20220215 22:05:43.661" endtime="20220215 22:05:43.662"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:43.662" level="INFO">Length is 5</msg>
<msg timestamp="20220215 22:05:43.662" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 22:05:43.662" endtime="20220215 22:05:43.662"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.663" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:43.662" endtime="20220215 22:05:43.663"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.663" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:43.663" endtime="20220215 22:05:43.663"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.663" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:43.663" endtime="20220215 22:05:43.663"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.662" endtime="20220215 22:05:43.663"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.664" level="INFO">${value_temp} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.663" endtime="20220215 22:05:43.664"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.664" level="INFO">${value_temp} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.664" endtime="20220215 22:05:43.664"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.665" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:43.665" endtime="20220215 22:05:43.665"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.663" endtime="20220215 22:05:43.665"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.665" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:43.665" endtime="20220215 22:05:43.665"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.666" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:43.665" endtime="20220215 22:05:43.666"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.666" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":"GpaY","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:43.666" endtime="20220215 22:05:43.666"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.665" endtime="20220215 22:05:43.666"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.666" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.666" endtime="20220215 22:05:43.666"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.666" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.666" endtime="20220215 22:05:43.666"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.667" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:43.667" endtime="20220215 22:05:43.667"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.666" endtime="20220215 22:05:43.667"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.667" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.667" endtime="20220215 22:05:43.667"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.667" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:43.667" endtime="20220215 22:05:43.667"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.668" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:43.668" endtime="20220215 22:05:43.668"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.667" endtime="20220215 22:05:43.668"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.662" endtime="20220215 22:05:43.668"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.668" endtime="20220215 22:05:43.668"></status>
</kw>
<msg timestamp="20220215 22:05:43.668" level="INFO">${data} = {"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:43.662" endtime="20220215 22:05:43.668"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_set_salary}</arg>
<arg>${list_salary}</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:43.669" level="INFO">Length is 3</msg>
<msg timestamp="20220215 22:05:43.669" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220215 22:05:43.669" endtime="20220215 22:05:43.669"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.670" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220215 22:05:43.670" endtime="20220215 22:05:43.670"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.670" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220215 22:05:43.670" endtime="20220215 22:05:43.670"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.670" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":[D1],"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"valu...</msg>
<status status="PASS" starttime="20220215 22:05:43.670" endtime="20220215 22:05:43.670"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.670" endtime="20220215 22:05:43.670"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.671" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220215 22:05:43.671" endtime="20220215 22:05:43.671"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.671" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220215 22:05:43.671" endtime="20220215 22:05:43.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.672" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 22:05:43.671" endtime="20220215 22:05:43.672"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.670" endtime="20220215 22:05:43.672"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.672" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220215 22:05:43.672" endtime="20220215 22:05:43.672"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:43.672" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220215 22:05:43.672" endtime="20220215 22:05:43.672"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:43.672" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 22:05:43.672" endtime="20220215 22:05:43.672"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.672" endtime="20220215 22:05:43.673"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.669" endtime="20220215 22:05:43.673"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.673" endtime="20220215 22:05:43.673"></status>
</kw>
<msg timestamp="20220215 22:05:43.673" level="INFO">${data_set_salary} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220215 22:05:43.668" endtime="20220215 22:05:43.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 22:05:43.673" level="INFO">${data} = (None, '{"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:43.673" endtime="20220215 22:05:43.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data_set_salary}')</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<msg timestamp="20220215 22:05:43.674" level="INFO">${data_set_salary} = (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":...</msg>
<status status="PASS" starttime="20220215 22:05:43.673" endtime="20220215 22:05:43.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.674" level="INFO">(None, '{"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:43.674" endtime="20220215 22:05:43.674"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
<arg>payRate=${data_set_salary}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 22:05:43.675" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalar...</msg>
<status status="PASS" starttime="20220215 22:05:43.674" endtime="20220215 22:05:43.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.675" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}</msg>
<status status="PASS" starttime="20220215 22:05:43.675" endtime="20220215 22:05:43.675"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:43.920" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV81169100","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:43.920" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:43.920" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:43.675" endtime="20220215 22:05:43.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.921" level="INFO">{'result': {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, 'message': 'Tạo nhân viên thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:43.921" endtime="20220215 22:05:43.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:43.921" endtime="20220215 22:05:43.921"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.921" endtime="20220215 22:05:43.922"></status>
</kw>
<msg timestamp="20220215 22:05:43.922" level="INFO">${resp} = {'result': {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220215 22:05:43.675" endtime="20220215 22:05:43.922"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.959" level="INFO">${result} = [30000000124634]</msg>
<status status="PASS" starttime="20220215 22:05:43.922" endtime="20220215 22:05:43.959"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:43.959" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:43.959" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:43.959" endtime="20220215 22:05:43.959"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.959" level="INFO">${result} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:43.959" endtime="20220215 22:05:43.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.960" endtime="20220215 22:05:43.960"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.959" endtime="20220215 22:05:43.960"></status>
</kw>
<msg timestamp="20220215 22:05:43.960" level="INFO">${id_employee} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:43.922" endtime="20220215 22:05:43.960"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.979" level="INFO">${result} = ['NV81169100']</msg>
<status status="PASS" starttime="20220215 22:05:43.960" endtime="20220215 22:05:43.979"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:43.980" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:43.980" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:43.979" endtime="20220215 22:05:43.980"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:43.980" level="INFO">${result} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.980" endtime="20220215 22:05:43.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:43.980" endtime="20220215 22:05:43.980"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.980" endtime="20220215 22:05:43.980"></status>
</kw>
<msg timestamp="20220215 22:05:43.981" level="INFO">${code_employee} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.960" endtime="20220215 22:05:43.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${code_employee}</arg>
<arg>${code_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.981" level="INFO">${code_employee} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:43.981" endtime="20220215 22:05:43.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:43.981" level="INFO">${id_employee} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:43.981" endtime="20220215 22:05:43.981"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220215 22:05:43.982" level="INFO">${branchId} = 172909.0</msg>
<status status="PASS" starttime="20220215 22:05:43.981" endtime="20220215 22:05:43.982"></status>
</kw>
<kw name="Verify Input And Output Employee" library="employee">
<arguments>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
</arguments>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.095" level="INFO">Get Request using : alias=session, uri=/employees/30000000124634, headers=None json=None</msg>
<msg timestamp="20220215 22:05:44.095" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.096" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:43.982" endtime="20220215 22:05:44.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.096" level="INFO">{'result': {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:44.096" endtime="20220215 22:05:44.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:44.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.096" endtime="20220215 22:05:44.097"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.097" endtime="20220215 22:05:44.097"></status>
</kw>
<msg timestamp="20220215 22:05:44.097" level="INFO">${resp} = {'result': {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220215 22:05:43.982" endtime="20220215 22:05:44.097"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.117" level="INFO">${result} = ['NV81169100']</msg>
<status status="PASS" starttime="20220215 22:05:44.098" endtime="20220215 22:05:44.117"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:44.117" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:44.117" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:44.117" endtime="20220215 22:05:44.117"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.117" level="INFO">${result} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.117" endtime="20220215 22:05:44.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.117" endtime="20220215 22:05:44.117"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.117" endtime="20220215 22:05:44.117"></status>
</kw>
<msg timestamp="20220215 22:05:44.118" level="INFO">${code_output} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.097" endtime="20220215 22:05:44.118"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.name</arg>
</arguments>
<assign>
<var>${name_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.137" level="INFO">${result} = ['GpaY']</msg>
<status status="PASS" starttime="20220215 22:05:44.118" endtime="20220215 22:05:44.137"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:44.138" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:44.138" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:44.137" endtime="20220215 22:05:44.138"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.138" level="INFO">${result} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.138" endtime="20220215 22:05:44.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.138" endtime="20220215 22:05:44.138"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.138" endtime="20220215 22:05:44.138"></status>
</kw>
<msg timestamp="20220215 22:05:44.139" level="INFO">${name_output} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.118" endtime="20220215 22:05:44.139"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.branchId</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.157" level="INFO">${result} = [172909]</msg>
<status status="PASS" starttime="20220215 22:05:44.139" endtime="20220215 22:05:44.157"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:44.158" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:44.158" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:44.157" endtime="20220215 22:05:44.158"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.158" level="INFO">${result} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.158" endtime="20220215 22:05:44.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.159" endtime="20220215 22:05:44.160"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.159" endtime="20220215 22:05:44.160"></status>
</kw>
<msg timestamp="20220215 22:05:44.160" level="INFO">${branch_output} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.139" endtime="20220215 22:05:44.160"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<msg timestamp="20220215 22:05:44.160" level="INFO">${branch_output} = 172909.0</msg>
<status status="PASS" starttime="20220215 22:05:44.160" endtime="20220215 22:05:44.160"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_input}</arg>
<arg>${name_input}</arg>
<arg>${branch_input}</arg>
</arguments>
<assign>
<var>${list_input}</var>
</assign>
<msg timestamp="20220215 22:05:44.160" level="INFO">${list_input} = ['NV81169100', 'GpaY', 172909.0]</msg>
<status status="PASS" starttime="20220215 22:05:44.160" endtime="20220215 22:05:44.161"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_output}</arg>
<arg>${name_output}</arg>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${list_output}</var>
</assign>
<msg timestamp="20220215 22:05:44.161" level="INFO">${list_output} = ['NV81169100', 'GpaY', 172909.0]</msg>
<status status="PASS" starttime="20220215 22:05:44.161" endtime="20220215 22:05:44.161"></status>
</kw>
<kw name="Verify List Input And Output" library="share">
<arguments>
<arg>${list_input}</arg>
<arg>${list_output}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listinput}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:44.161" level="INFO">Length is 3</msg>
<msg timestamp="20220215 22:05:44.161" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220215 22:05:44.161" endtime="20220215 22:05:44.161"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 22:05:44.162" level="INFO">${value_input} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.162"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 22:05:44.162" level="INFO">${value_output} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.162"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.162"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 22:05:44.162" level="INFO">${value_input} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.162"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 22:05:44.163" level="INFO">${value_output} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.163"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.162" endtime="20220215 22:05:44.163"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220215 22:05:44.163" level="INFO">${value_input} = 172909.0</msg>
<status status="PASS" starttime="20220215 22:05:44.163" endtime="20220215 22:05:44.163"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220215 22:05:44.163" level="INFO">${value_output} = 172909.0</msg>
<status status="PASS" starttime="20220215 22:05:44.163" endtime="20220215 22:05:44.163"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.163" endtime="20220215 22:05:44.163"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.161" endtime="20220215 22:05:44.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value_input}</arg>
<arg>${value_output}</arg>
</arguments>
<status status="PASS" starttime="20220215 22:05:44.163" endtime="20220215 22:05:44.164"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.161" endtime="20220215 22:05:44.164"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:43.982" endtime="20220215 22:05:44.164"></status>
</kw>
<msg timestamp="20220215 22:05:44.164" level="INFO">${resp} = None</msg>
<status status="PASS" starttime="20220215 22:05:43.661" endtime="20220215 22:05:44.164"></status>
</kw>
<doc>Tạo mới nhân viên và thiết lập lương ko có mẫu lương</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:43.660" endtime="20220215 22:05:44.164" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Create duplicate employee">
<kw name="Create Duplicate Employee" library="employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.356" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220215 22:05:44.356" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.356" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.165" endtime="20220215 22:05:44.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.359" level="INFO">{'result': {'total': 87, 'data': [{'id': 37706, 'code': 'NV000102', 'name': 'NV 1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-07-23T17:12:26.3700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000010301, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 37706}]}, {'id': 30000000005918, 'code': 'NV000060', 'name': '1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451904, 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-09T09:29:15.5290000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-23T14:37:29.2990000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000018401, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 30000000005918}]}, {'id': 40000000000041, 'code': 'NV000006', 'name': 'mậm 1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-01-22T10:52:08.7080000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000020401, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 40000000000041}]}, {'id': 140000000104310, 'code': 'NV000420', 'name': '11:15PM', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274004, 'createdBy': 14164, 'createdDate': '2021-04-05T23:15:28.1230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162211, 'tenantId': 4765, 'branchId': 274004, 'employeeId': 140000000104310}]}, {'id': 180000000006313, 'code': 'NV000422', 'name': '11:16M', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173903, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:54.0800000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011615, 'tenantId': 4765, 'branchId': 173903, 'employeeId': 180000000006313}]}, {'id': 60000000178507, 'code': 'NV000423', 'name': '11:16PM', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173903, 'createdBy': 14164, 'createdDate': '2021-04-05T23:17:06.3400000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-05T23:29:46.0550000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001414611, 'tenantId': 4765, 'branchId': 173903, 'employeeId': 60000000178507}]}, {'id': 27102, 'code': 'NV000011', 'name': '123', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 449778, 'tenantId': 4765, 'branchId': 173483, 'createdBy': 14164, 'createdDate': '2020-02-15T01:12:12.1700000', 'modifiedBy': 14164, 'modifiedDate': '2020-05-06T16:22:47.9140000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000002401, 'tenantId': 4765, 'branchId': 173483, 'employeeId': 27102}]}, {'id': 30000000011101, 'code': 'NV000094', 'name': 'NV 123', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-07-13T18:35:53.1700000', 'modifiedBy': 14164, 'modifiedDate': '2020-07-13T18:40:19.9110000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000019201, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 30000000011101}]}, {'id': 27616, 'code': 'NV000012', 'name': '1b', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173512, 'createdBy': 14164, 'createdDate': '2020-02-25T10:22:06.3350000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000002501, 'tenantId': 4765, 'branchId': 173512, 'employeeId': 27616}]}, {'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451691, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-09T18:33:56.7630000', 'modifiedBy': 14164, 'modifiedDate': '2021-05-28T11:05:53.7860000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011904, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006604}]}, {'id': 40000000001509, 'code': 'NV000045', 'name': '2222', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173609, 'createdBy': 14164, 'createdDate': '2020-06-04T17:44:16.0800000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000026701, 'tenantId': 4765, 'branchId': 173609, 'employeeId': 40000000001509}]}, {'id': 36204, 'code': 'NV000092', 'name': '3333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 453305, 'tenantId': 4765, 'branchId': 173614, 'createdBy': 14164, 'createdDate': '2020-06-30T09:45:26.0030000', 'modifiedBy': 453321, 'modifiedDate': '2020-09-25T11:28:30.1230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000008401, 'tenantId': 4765, 'branchId': 173614, 'employeeId': 36204}]}, {'id': 40000000001605, 'code': 'NV000046', 'name': '3333', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173609, 'createdBy': 14164, 'createdDate': '2020-06-04T17:44:21.8920000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000026901, 'tenantId': 4765, 'branchId': 173609, 'employeeId': 40000000001605}]}, {'id': 30000000011102, 'code': 'NV000095', 'name': 'NV 4123', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-07-13T18:36:12.7570000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000019301, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 30000000011102}]}, {'id': 30000000011103, 'code': 'NV000096', 'name': 'NV 4572', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-07-13T18:36:26.6730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000019401, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 30000000011103}]}, {'id': 33126, 'code': 'NV000025', 'name': '8979', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': 'abc@gmail.com', 'facebook': 'facebook.com', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 449972, 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-04-29T16:17:26.0830000', 'modifiedBy': 14164, 'modifiedDate': '2020-05-04T14:28:29.7450000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000003601, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 33126}]}, {'id': 38417, 'code': 'NV000108', 'name': 'Phạm Thị A', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172969, 'createdBy': 14164, 'createdDate': '2020-08-04T16:01:25.4900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000010601, 'tenantId': 4765, 'branchId': 172969, 'employeeId': 38417}]}, {'id': 230000000003617, 'code': 'NV000452', 'name': 'Nhân Viên Chi Nhánh A', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 374209, 'createdBy': 14164, 'createdDate': '2021-11-08T13:37:08.2900000', 'modifiedBy': 14164, 'modifiedDate': '2021-11-08T13:41:00.7930000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000302618, 'tenantId': 4765, 'branchId': 374209, 'employeeId': 230000000003617}]}, {'id': 34936, 'code': 'NV000051', 'name': 'AAA', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-08T11:07:19.0330000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-08T11:08:11.2770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000005201, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 34936}]}, {'id': 210000001006225, 'code': 'NV000432', 'name': 'aaaaaaaa1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T11:27:04.4130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011537647, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006225}]}, {'id': 140000000104313, 'code': 'NV000424', 'name': 'abcbcbcbcbc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173903, 'createdBy': 14164, 'createdDate': '2021-04-05T23:24:33.8300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162214, 'tenantId': 4765, 'branchId': 173903, 'employeeId': 140000000104313}]}, {'id': 27771, 'code': 'NV000020', 'name': 'abcd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173509, 'createdBy': 14164, 'createdDate': '2020-03-09T11:47:40.7240000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-02T18:27:20.5180000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000003201, 'tenantId': 4765, 'branchId': 173509, 'employeeId': 27771}]}, {'id': 60000000178508, 'code': 'NV000425', 'name': 'abd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 555803, 'tenantId': 4765, 'branchId': 274004, 'createdBy': 14164, 'createdDate': '2021-04-05T23:25:44.1730000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-05T23:29:42.7100000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001414612, 'tenantId': 4765, 'branchId': 274004, 'employeeId': 60000000178508}]}, {'id': 33853, 'code': 'NV000034', 'name': 'Phương Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-05-21T16:51:12.3860000', 'modifiedBy': 14164, 'modifiedDate': '2020-05-21T17:06:29.3890000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000004201, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 33853}]}, {'id': 30000000011404, 'code': 'NV000376', 'name': 'Hoàng Nam Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:57:00.8700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:47.1490000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209805, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011404}]}, {'id': 30000000011407, 'code': 'NV000382', 'name': 'Nguyễn Thị Cúc Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:15.4700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T16:25:16.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209808, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011407}]}, {'id': 38418, 'code': 'NV000109', 'name': 'Phạm Thị B', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172969, 'createdBy': 14164, 'createdDate': '2020-08-04T16:01:33.3900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000010701, 'tenantId': 4765, 'branchId': 172969, 'employeeId': 38418}]}, {'id': 38509, 'code': 'NV000110', 'name': 'Nguyễn Thị C', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172969, 'createdBy': 14164, 'createdDate': '2020-08-04T16:01:52.6100000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000011601, 'tenantId': 4765, 'branchId': 172969, 'employeeId': 38509}]}, {'id': 180000000006314, 'code': 'NV000426', 'name': 'Nguyễn Thị Phương Chi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:26:44.0330000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-14T19:20:56.8580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011616, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006314}]}, {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, {'id': 35153, 'code': 'NV000067', 'name': 'ddd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173607, 'createdBy': 14164, 'createdDate': '2020-06-11T16:56:23.8210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000007301, 'tenantId': 4765, 'branchId': 173607, 'employeeId': 35153}]}, {'id': 220000000000810, 'code': 'NV000442', 'name': 'ddđ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 18011, 'department': {'id': 18011, 'name': '111111', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 452180, 'createdDate': '2020-07-03T15:05:08.3570000', 'isDeleted': False}, 'jobTitleId': 60000000003323, 'jobTitle': {'id': 60000000003323, 'name': 'Lễ tân 1', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-03-27T19:03:02.8260000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-18T14:53:35.4730000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T14:56:12.0200000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T17:50:27.6950000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '111111', 'jobTitleName': 'Lễ tân 1', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001010, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 220000000000810}]}, {'id': 35807, 'code': 'NV000077', 'name': 'fffff', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-22T10:47:23.3260000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000007901, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 35807}]}, {'id': 230000000002511, 'code': 'NV000450', 'name': 'ghgfhfgh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-11-02T15:31:57.6300000', 'modifiedBy': 14164, 'modifiedDate': '2021-12-04T12:42:58.2200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000204713, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 230000000002511}, {'id': 230000000311509, 'tenantId': 4765, 'branchId': 374208, 'employeeId': 230000000002511}]}, {'id': 180000000015919, 'code': 'NV000430', 'name': 'Tung Test Gio', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-06-10T10:55:22.5770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000021419, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000015919}]}, {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, {'id': 40000000000029, 'code': 'NV000003', 'name': 'h1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173015, 'createdBy': 14164, 'createdDate': '2020-01-22T10:33:09.1580000', 'modifiedBy': 14164, 'modifiedDate': '2020-01-22T10:33:40.5790000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000020101, 'tenantId': 4765, 'branchId': 173015, 'employeeId': 40000000000029}]}, {'id': 40000000000032, 'code': 'NV000004', 'name': 'h2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173015, 'createdBy': 14164, 'createdDate': '2020-01-22T10:36:33.2200000', 'modifiedBy': 14164, 'modifiedDate': '2020-02-15T01:55:39.5000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000020201, 'tenantId': 4765, 'branchId': 173015, 'employeeId': 40000000000032}]}, {'id': 30000000012836, 'code': 'NV000401', 'name': 'ha', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 452163, 'tenantId': 4765, 'branchId': 6984, 'createdBy': 14164, 'createdDate': '2020-12-04T10:05:16.0130000', 'modifiedBy': 14164, 'modifiedDate': '2020-12-04T10:15:41.0110000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001384755, 'tenantId': 4765, 'branchId': 6984, 'employeeId': 30000000012836}]}, {'id': 30000000017982, 'code': 'NV000414', 'name': 'ha', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173914, 'createdBy': 14164, 'createdDate': '2020-12-22T11:12:37.7970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000150282, 'tenantId': 4765, 'branchId': 173914, 'employeeId': 30000000017982}]}, {'id': 30000000000101, 'code': 'NV000010', 'name': 'Lê Hải', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173485, 'createdBy': 14164, 'createdDate': '2020-02-13T03:15:58.6130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000015901, 'tenantId': 4765, 'branchId': 173485, 'employeeId': 30000000000101}]}, {'id': 30000000011403, 'code': 'NV000374', 'name': 'Trương Thị Mỹ Hạnh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:56:44.2470000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:18:04.3370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209804, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011403}]}, {'id': 220000000001672, 'code': 'NV000451', 'name': 'mệt hj', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 374208, 'createdBy': 14164, 'createdDate': '2021-11-08T11:41:52.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001678, 'tenantId': 4765, 'branchId': 374208, 'employeeId': 220000000001672}]}, {'id': 140000000104304, 'code': 'NV000415', 'name': 'Nguyễn Thị Quỳnh Hoa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T22:19:35.3200000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:29.4360000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162205, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104304}]}, {'id': 100000000003221, 'code': 'NV000428', 'name': 'HuanTest', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-15T14:21:42.6670000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-02T10:22:17.0240000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000087927, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 100000000003221}]}, {'id': 80000000135821, 'code': 'NV502878', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:39.5900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177521, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135821}]}, {'id': 80000000135822, 'code': 'NV049334', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:42.3170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177522, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135822}]}, {'id': 40000000001394, 'code': 'NV000041', 'name': 'Linh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451650, 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-02T15:24:12.2080000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-02T15:24:15.8360000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000026401, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 40000000001394}]}, {'id': 34973, 'code': 'NV000061', 'name': 'Nhân viên test lương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-09T10:50:30.3210000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-09T10:53:39.5210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000005501, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 34973}]}, {'id': 40000000000040, 'code': 'NV000005', 'name': 'mậm', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-01-22T10:51:21.4330000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000020301, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 40000000000040}]}, {'id': 80000000135820, 'code': 'NV757290', 'name': 'MLxl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:51:48.3770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177520, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135820}]}, {'id': 220000000000814, 'code': 'NV000443', 'name': 'nv more', 'isActive': True, 'identityNumber': '', 'mobilePhone': '125412512512512', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T18:05:03.2730000', 'modifiedBy': 14164, 'modifiedDate': '2021-12-18T18:08:50.1660000', 'isDeleted': False, 'profilePictures': [{'id': 230000000004302, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/fee8cd0fff6449ebb6b740c63218d0b2', 'isMainImage': False, 'employeeId': 220000000000814, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011769085, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 220000000000814}]}, {'id': 210000001011002, 'code': 'NV000444', 'name': 'ngfn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-05T15:59:40.2130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011973702, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 210000001011002}]}, {'id': 30000000120801, 'code': 'NV000448', 'name': 'ngh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-14T12:55:25.4730000', 'modifiedBy': 14164, 'modifiedDate': '2021-10-14T13:07:55.7610000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000253101, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 30000000120801}]}, {'id': 30000000011427, 'code': 'NV000384', 'name': 'nhanvien123', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173614, 'createdBy': 14164, 'createdDate': '2020-08-22T14:28:03.0100000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209829, 'tenantId': 4765, 'branchId': 173614, 'employeeId': 30000000011427}]}, {'id': 30000000011801, 'code': 'NV000392', 'name': 'nhanvien2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6984, 'createdBy': 14164, 'createdDate': '2020-09-22T18:00:19.0900000', 'modifiedBy': 14164, 'modifiedDate': '2020-09-25T17:45:47.2780000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000149001, 'tenantId': 4765, 'branchId': 6984, 'employeeId': 30000000011801}]}, {'id': 20000000006305, 'code': 'NV000393', 'name': 'nhanvien2409', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6984, 'createdBy': 14164, 'createdDate': '2020-09-24T11:50:08.1600000', 'modifiedBy': 14164, 'modifiedDate': '2020-09-30T17:43:19.0570000', 'isDeleted': False, 'profilePictures': [{'id': 20000000001902, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/91cf977df5144cc6bbe230ddfa742f57', 'isMainImage': False, 'employeeId': 20000000006305, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 20000000156705, 'tenantId': 4765, 'branchId': 6984, 'employeeId': 20000000006305}]}, {'id': 20000000005218, 'code': 'NV000107', 'name': 'nhanvien3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172969, 'createdBy': 14164, 'createdDate': '2020-07-31T15:13:42.3730000', 'modifiedBy': 14164, 'modifiedDate': '2020-08-04T15:49:59.6690000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000014601, 'tenantId': 4765, 'branchId': 172969, 'employeeId': 20000000005218}]}, {'id': 30000000017948, 'code': 'NV000413', 'name': 'Nguyễn Thị Thùy Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-12-21T13:50:51.3230000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:41.1890000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000150248, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000017948}]}, {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, {'id': 30000000120702, 'code': 'NV000449', 'name': 'nmk', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 30000000101001, 'department': {'id': 30000000101001, 'name': 'DEV', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2021-10-14T12:55:35.6930000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-14T12:55:46.0830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'DEV', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000253002, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 30000000120702}]}, {'id': 20000000004568, 'code': 'NV000057', 'name': 'NV1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173607, 'createdBy': 14164, 'createdDate': '2020-06-08T17:52:10.1770000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-11T16:19:52.8660000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000014301, 'tenantId': 4765, 'branchId': 173607, 'employeeId': 20000000004568}]}, {'id': 40000000001812, 'code': 'NV000079', 'name': 'nv22', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 452010, 'tenantId': 4765, 'branchId': 173509, 'createdBy': 14164, 'createdDate': '2020-06-22T17:01:16.4300000', 'modifiedBy': 14164, 'modifiedDate': '2020-07-15T15:35:21.0070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000027401, 'tenantId': 4765, 'branchId': 173509, 'employeeId': 40000000001812}]}, {'id': 20000000004569, 'code': 'NV000059', 'name': 'NV3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173607, 'createdBy': 14164, 'createdDate': '2020-06-08T17:53:27.4530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000014401, 'tenantId': 4765, 'branchId': 173607, 'employeeId': 20000000004569}]}, {'id': 180000000017574, 'code': 'NV000431', 'name': 'phuoctesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-01T15:59:32.1900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417925, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000017574}]}, {'id': 50000000124617, 'code': 'NV000434', 'name': 'phuoctestchinhanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274126, 'createdBy': 14164, 'createdDate': '2021-07-12T16:52:54.1170000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T20:42:53.6150000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324828, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 50000000124617}]}, {'id': 220000000001412, 'code': 'NV000445', 'name': 'Phuoctestcn1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-13T16:18:30.9130000', 'modifiedBy': 14164, 'modifiedDate': '2021-10-13T16:22:01.8340000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000000038, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 220000000001412}]}, {'id': 220000000001330, 'code': 'NV000446', 'name': 'phuoctestcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-13T16:23:17.3830000', 'modifiedBy': 14164, 'modifiedDate': '2021-10-13T16:24:17.1310000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 230000000000040, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 220000000001330}]}, {'id': 30000000011405, 'code': 'NV000379', 'name': 'Lê Thị Ngọc Phương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:58:58.6270000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:28.8370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209806, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011405}]}, {'id': 27622, 'code': 'NV000016', 'name': 'Chi Pu', 'dob': '2020-02-27T00:00:00.0000000', 'gender': False, 'isActive': True, 'identityNumber': '153467890', 'mobilePhone': '0909090909', 'email': 'chipu@gmail.com', 'facebook': 'facebook.com/chi.pu', 'address': '1B Yết Kiêu', 'locationName': 'Hà Nội - Quận Hoàn Kiếm', 'wardName': 'Phường Trần Hưng Đạo', 'note': '', 'userId': 14164, 'departmentId': 60000000001241, 'department': {'id': 60000000001241, 'name': 'Phòng Kiểm thử', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-02-28T14:22:00.5800000', 'isDeleted': False}, 'jobTitleId': 60000000000947, 'jobTitle': {'id': 60000000000947, 'name': 'Update ouce', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-02-28T14:21:36.5360000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T21:51:52.7250000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-02-25T11:08:24.7220000', 'modifiedBy': 14164, 'modifiedDate': '2020-07-16T17:21:29.3420000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': 'Phòng Kiểm thử', 'jobTitleName': 'Update ouce', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000002601, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 27622}]}, {'id': 30000000000653, 'code': 'NV000018', 'name': 'qư', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-02-26T23:49:56.5520000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000017501, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 30000000000653}]}, {'id': 30000000120701, 'code': 'NV000447', 'name': 'nv test', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-10-14T12:51:03.3870000', 'modifiedBy': 14164, 'modifiedDate': '2021-10-14T12:58:38.2880000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000253001, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 30000000120701}]}, {'id': 40000000110212, 'code': 'NV000438', 'name': 'Ha Test', 'dob': '2000-06-23T00:00:00.0000000', 'gender': False, 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-15T09:06:46.5200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236619, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110212}]}, {'id': 180000000013124, 'code': 'NV000429', 'name': 'test1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 556660, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-05-04T10:27:01.3600000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-06T10:51:34.3710000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000018526, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000013124}]}, {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, {'id': 210000001006233, 'code': 'NV000435', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274126, 'createdBy': 14164, 'createdDate': '2021-07-12T20:45:53.6900000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T20:54:31.0290000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001418328, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 210000001006233}]}, {'id': 210000001006234, 'code': 'NV000436', 'name': 'testcn2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274097, 'createdBy': 14164, 'createdDate': '2021-07-12T20:47:39.9230000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T20:55:25.0220000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324829, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 210000001006234}]}, {'id': 50000000124621, 'code': 'NV000437', 'name': 'testcn3', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 274126, 'createdBy': 14164, 'createdDate': '2021-07-12T20:57:07.6570000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-15T16:21:22.2140000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324831, 'tenantId': 4765, 'branchId': 274097, 'employeeId': 50000000124621}]}, {'id': 40000000110435, 'code': 'NV000439', 'name': 'testdemo', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 557193, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-19T13:46:39.8270000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-19T13:47:46.6410000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236836, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110435}]}, {'id': 110000000019929, 'code': 'NV000440', 'name': 'testP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-29T15:33:27.1600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162830, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 110000000019929}]}, {'id': 210000001006944, 'code': 'NV000441', 'name': 'TrangcP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-30T11:29:29.4900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011599952, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006944}]}, {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, {'id': 35007, 'code': 'NV000064', 'name': 'v', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-11T09:50:08.7910000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000005701, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 35007}]}, {'id': 40000000001510, 'code': 'NV000047', 'name': 'wwwsdd', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173609, 'createdBy': 14164, 'createdDate': '2020-06-04T17:44:26.1600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000026801, 'tenantId': 4765, 'branchId': 173609, 'employeeId': 40000000001510}]}, {'id': 35105, 'code': 'NV000063', 'name': 'wwww', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 6983, 'createdBy': 14164, 'createdDate': '2020-06-11T09:49:52.4720000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000006001, 'tenantId': 4765, 'branchId': 6983, 'employeeId': 35105}]}, {'id': 40000000001606, 'code': 'NV000048', 'name': 'wwwwww', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 173609, 'createdBy': 14164, 'createdDate': '2020-06-04T17:44:29.7710000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000027001, 'tenantId': 4765, 'branchId': 173609, 'employeeId': 40000000001606}]}, {'id': 30000000124701, 'code': 'NV354758', 'name': 'ZWPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:11:01.8230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329070, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124701}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:44.356" endtime="20220215 22:05:44.361"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:44.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.361" endtime="20220215 22:05:44.361"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.362" endtime="20220215 22:05:44.362"></status>
</kw>
<msg timestamp="20220215 22:05:44.364" level="INFO">${resp} = {'result': {'total': 87, 'data': [{'id': 37706, 'code': 'NV000102', 'name': 'NV 1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName...</msg>
<status status="PASS" starttime="20220215 22:05:44.165" endtime="20220215 22:05:44.364"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:44.400" level="INFO">${list} = ['NV000102', 'NV000060', 'NV000006', 'NV000420', 'NV000422', 'NV000423', 'NV000011', 'NV000094', 'NV000012', 'NV000427', 'NV000045', 'NV000092', 'NV000046', 'NV000095', 'NV000096', 'NV000025', 'NV0001...</msg>
<status status="PASS" starttime="20220215 22:05:44.364" endtime="20220215 22:05:44.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:44.405" level="INFO">${value} = NV000376</msg>
<status status="PASS" starttime="20220215 22:05:44.400" endtime="20220215 22:05:44.405"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.405" endtime="20220215 22:05:44.406"></status>
</kw>
<msg timestamp="20220215 22:05:44.406" level="INFO">${code_employee} = NV000376</msg>
<status status="PASS" starttime="20220215 22:05:44.165" endtime="20220215 22:05:44.406"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.407" level="INFO">${list_format} = ['1235698', 'NV000376', 'GpaY', '172909', '172909']</msg>
<status status="PASS" starttime="20220215 22:05:44.406" endtime="20220215 22:05:44.407"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:44.407" level="INFO">Length is 5</msg>
<msg timestamp="20220215 22:05:44.408" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 22:05:44.407" endtime="20220215 22:05:44.408"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.408" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:44.408" endtime="20220215 22:05:44.408"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.408" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:44.408" endtime="20220215 22:05:44.408"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.409" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.408" endtime="20220215 22:05:44.409"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.408" endtime="20220215 22:05:44.409"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.409" level="INFO">${value_temp} = NV000376</msg>
<status status="PASS" starttime="20220215 22:05:44.409" endtime="20220215 22:05:44.409"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.409" level="INFO">${value_temp} = NV000376</msg>
<status status="PASS" starttime="20220215 22:05:44.409" endtime="20220215 22:05:44.409"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.410" level="INFO">${data_format} = {"id":1235698,"code":"NV000376","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.410" endtime="20220215 22:05:44.410"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.409" endtime="20220215 22:05:44.410"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.410" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.410" endtime="20220215 22:05:44.410"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.411" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.410" endtime="20220215 22:05:44.411"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.411" level="INFO">${data_format} = {"id":1235698,"code":"NV000376","name":"GpaY","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.411" endtime="20220215 22:05:44.411"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.410" endtime="20220215 22:05:44.411"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.412" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.411" endtime="20220215 22:05:44.412"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.412" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.412" endtime="20220215 22:05:44.412"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.412" level="INFO">${data_format} = {"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.412" endtime="20220215 22:05:44.412"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.411" endtime="20220215 22:05:44.412"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.413" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.412" endtime="20220215 22:05:44.413"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.413" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.413" endtime="20220215 22:05:44.413"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.413" level="INFO">${data_format} = {"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.413" endtime="20220215 22:05:44.413"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.412" endtime="20220215 22:05:44.413"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.408" endtime="20220215 22:05:44.413"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.413" endtime="20220215 22:05:44.414"></status>
</kw>
<msg timestamp="20220215 22:05:44.414" level="INFO">${data} = {"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.407" endtime="20220215 22:05:44.414"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 22:05:44.414" level="INFO">${data} = (None, '{"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:44.414" endtime="20220215 22:05:44.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.415" level="INFO">(None, '{"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:44.414" endtime="20220215 22:05:44.415"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 22:05:44.415" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.415" endtime="20220215 22:05:44.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.415" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.415" endtime="20220215 22:05:44.415"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.481" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV000376","name":"GpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')}, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:44.481" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.481" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.416" endtime="20220215 22:05:44.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.482" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 22:05:44.482" endtime="20220215 22:05:44.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.482" endtime="20220215 22:05:44.483"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.483" endtime="20220215 22:05:44.483"></status>
</kw>
<msg timestamp="20220215 22:05:44.483" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 22:05:44.415" endtime="20220215 22:05:44.484"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.517" level="INFO">${result} = ['Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220215 22:05:44.484" endtime="20220215 22:05:44.517"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:44.518" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:44.518" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:44.517" endtime="20220215 22:05:44.518"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.518" level="INFO">${result} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220215 22:05:44.518" endtime="20220215 22:05:44.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.519" endtime="20220215 22:05:44.519"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.519" endtime="20220215 22:05:44.519"></status>
</kw>
<msg timestamp="20220215 22:05:44.519" level="INFO">${mess_err} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220215 22:05:44.484" endtime="20220215 22:05:44.519"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Mã nhân viên đã tồn tại trong cửa hàng</arg>
</arguments>
<status status="PASS" starttime="20220215 22:05:44.520" endtime="20220215 22:05:44.520"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.165" endtime="20220215 22:05:44.520"></status>
</kw>
<doc>Tạo mới nhân viên trùng mã nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:44.164" endtime="20220215 22:05:44.521" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Create empty employee">
<kw name="Create Empty Employee" library="employee">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>\ \</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.523" level="INFO">${list_format} = ['1235698', 'NV81169100', ' ', '172909', '172909']</msg>
<status status="PASS" starttime="20220215 22:05:44.522" endtime="20220215 22:05:44.523"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:44.523" level="INFO">Length is 5</msg>
<msg timestamp="20220215 22:05:44.523" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 22:05:44.523" endtime="20220215 22:05:44.523"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.524" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:44.524" endtime="20220215 22:05:44.524"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.525" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220215 22:05:44.524" endtime="20220215 22:05:44.525"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.526" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.525" endtime="20220215 22:05:44.526"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.524" endtime="20220215 22:05:44.526"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.527" level="INFO">${value_temp} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.526" endtime="20220215 22:05:44.527"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.527" level="INFO">${value_temp} = NV81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.527" endtime="20220215 22:05:44.527"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.529" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.527" endtime="20220215 22:05:44.529"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.526" endtime="20220215 22:05:44.529"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.530" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 22:05:44.530" endtime="20220215 22:05:44.530"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.530" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 22:05:44.530" endtime="20220215 22:05:44.530"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.531" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":" ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.530" endtime="20220215 22:05:44.531"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.529" endtime="20220215 22:05:44.531"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.531" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.531" endtime="20220215 22:05:44.531"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.532" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.531" endtime="20220215 22:05:44.532"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.532" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.532" endtime="20220215 22:05:44.532"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.531" endtime="20220215 22:05:44.532"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.533" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.532" endtime="20220215 22:05:44.533"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.533" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.533" endtime="20220215 22:05:44.533"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.534" level="INFO">${data_format} = {"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.533" endtime="20220215 22:05:44.534"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.532" endtime="20220215 22:05:44.534"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.524" endtime="20220215 22:05:44.534"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.534" endtime="20220215 22:05:44.534"></status>
</kw>
<msg timestamp="20220215 22:05:44.534" level="INFO">${data} = {"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.523" endtime="20220215 22:05:44.534"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 22:05:44.534" level="INFO">${data} = (None, '{"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:44.534" endtime="20220215 22:05:44.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.535" level="INFO">(None, '{"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:44.535" endtime="20220215 22:05:44.536"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 22:05:44.536" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.536" endtime="20220215 22:05:44.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.537" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.536" endtime="20220215 22:05:44.537"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.634" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV81169100","name":" ","branchId":172909,"userId":null,"workBranchIds":[172909]}')}, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:44.635" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.635" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.537" endtime="20220215 22:05:44.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.636" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220215 22:05:44.635" endtime="20220215 22:05:44.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.636" endtime="20220215 22:05:44.636"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.637" endtime="20220215 22:05:44.637"></status>
</kw>
<msg timestamp="20220215 22:05:44.637" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPre...</msg>
<status status="PASS" starttime="20220215 22:05:44.537" endtime="20220215 22:05:44.637"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.670" level="INFO">${result} = ['Tên nhân viên không được để trống', 'Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220215 22:05:44.638" endtime="20220215 22:05:44.670"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:44.670" level="INFO">Length is 2</msg>
<msg timestamp="20220215 22:05:44.671" level="INFO">${lenght} = 2</msg>
<status status="PASS" starttime="20220215 22:05:44.670" endtime="20220215 22:05:44.671"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:44.671" level="INFO">${result} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220215 22:05:44.671" endtime="20220215 22:05:44.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.672" endtime="20220215 22:05:44.672"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.671" endtime="20220215 22:05:44.672"></status>
</kw>
<msg timestamp="20220215 22:05:44.672" level="INFO">${mess_err} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220215 22:05:44.637" endtime="20220215 22:05:44.672"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Tên nhân viên không được để trống</arg>
</arguments>
<status status="PASS" starttime="20220215 22:05:44.672" endtime="20220215 22:05:44.672"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.522" endtime="20220215 22:05:44.672"></status>
</kw>
<doc>Tạo mới nhân viên rỗng</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:44.521" endtime="20220215 22:05:44.673" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Update employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.674" level="INFO">${list_format} = ['172909']</msg>
<status status="PASS" starttime="20220215 22:05:44.674" endtime="20220215 22:05:44.674"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:44.675" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:44.675" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:44.674" endtime="20220215 22:05:44.675"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.675" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.675" endtime="20220215 22:05:44.675"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.675" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.675" endtime="20220215 22:05:44.675"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.676" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:44.675" endtime="20220215 22:05:44.676"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.675" endtime="20220215 22:05:44.676"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.675" endtime="20220215 22:05:44.676"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.676" endtime="20220215 22:05:44.676"></status>
</kw>
<msg timestamp="20220215 22:05:44.676" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:44.674" endtime="20220215 22:05:44.676"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.676" endtime="20220215 22:05:44.677"></status>
</kw>
<msg timestamp="20220215 22:05:44.677" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:44.673" endtime="20220215 22:05:44.677"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.819" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909, headers=None json=None</msg>
<msg timestamp="20220215 22:05:44.820" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.820" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.678" endtime="20220215 22:05:44.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.821" level="INFO">{'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451691, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-09T18:33:56.7630000', 'modifiedBy': 14164, 'modifiedDate': '2021-05-28T11:05:53.7860000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011904, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006604}]}, {'id': 210000001006225, 'code': 'NV000432', 'name': 'aaaaaaaa1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T11:27:04.4130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011537647, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006225}]}, {'id': 30000000011407, 'code': 'NV000382', 'name': 'Nguyễn Thị Cúc Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:15.4700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T16:25:16.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['17', '15', '21'], 'employeeBranches': [{'id': 140000000209808, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011407}]}, {'id': 30000000011404, 'code': 'NV000376', 'name': 'Hoàng Nam Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:57:00.8700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:47.1490000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209805, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011404}]}, {'id': 180000000006314, 'code': 'NV000426', 'name': 'Nguyễn Thị Phương Chi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:26:44.0330000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-14T19:20:56.8580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011616, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006314}]}, {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18', '17'], 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, {'id': 220000000000810, 'code': 'NV000442', 'name': 'ddđ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 18011, 'department': {'id': 18011, 'name': '111111', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 452180, 'createdDate': '2020-07-03T15:05:08.3570000', 'isDeleted': False}, 'jobTitleId': 60000000003323, 'jobTitle': {'id': 60000000003323, 'name': 'Lễ tân 1', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-03-27T19:03:02.8260000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-18T14:53:35.4730000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T14:56:12.0200000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T17:50:27.6950000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '111111', 'jobTitleName': 'Lễ tân 1', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001010, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 220000000000810}]}, {'id': 180000000015919, 'code': 'NV000430', 'name': 'Tung Test Gio', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-06-10T10:55:22.5770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000021419, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000015919}]}, {'id': 30000000124634, 'code': 'NV81169100', 'name': 'GpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, {'id': 30000000011403, 'code': 'NV000374', 'name': 'Trương Thị Mỹ Hạnh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:56:44.2470000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:18:04.3370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['19'], 'employeeBranches': [{'id': 140000000209804, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011403}]}, {'id': 140000000104304, 'code': 'NV000415', 'name': 'Nguyễn Thị Quỳnh Hoa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T22:19:35.3200000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:29.4360000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162205, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104304}]}, {'id': 100000000003221, 'code': 'NV000428', 'name': 'HuanTest', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-15T14:21:42.6670000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-02T10:22:17.0240000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000087927, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 100000000003221}]}, {'id': 80000000135822, 'code': 'NV049334', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:42.3170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177522, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135822}]}, {'id': 80000000135821, 'code': 'NV502878', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:39.5900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177521, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135821}]}, {'id': 80000000135820, 'code': 'NV757290', 'name': 'MLxl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:51:48.3770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177520, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135820}]}, {'id': 220000000000814, 'code': 'NV000443', 'name': 'nv more', 'isActive': True, 'identityNumber': '', 'mobilePhone': '125412512512512', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T18:05:03.2730000', 'modifiedBy': 14164, 'modifiedDate': '2021-12-18T18:08:50.1660000', 'isDeleted': False, 'profilePictures': [{'id': 230000000004302, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/fee8cd0fff6449ebb6b740c63218d0b2', 'isMainImage': False, 'employeeId': 220000000000814, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 210000011769085, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 220000000000814}]}, {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, {'id': 30000000017948, 'code': 'NV000413', 'name': 'Nguyễn Thị Thùy Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-12-21T13:50:51.3230000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:41.1890000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 30000000150248, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000017948}]}, {'id': 180000000017574, 'code': 'NV000431', 'name': 'phuoctesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-01T15:59:32.1900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417925, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000017574}]}, {'id': 30000000011405, 'code': 'NV000379', 'name': 'Lê Thị Ngọc Phương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:58:58.6270000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:28.8370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18'], 'employeeBranches': [{'id': 140000000209806, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011405}]}, {'id': 40000000110212, 'code': 'NV000438', 'name': 'Ha Test', 'dob': '2000-06-23T00:00:00.0000000', 'gender': False, 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-15T09:06:46.5200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236619, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110212}]}, {'id': 180000000013124, 'code': 'NV000429', 'name': 'test1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 556660, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-05-04T10:27:01.3600000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-06T10:51:34.3710000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000018526, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000013124}]}, {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, {'id': 40000000110435, 'code': 'NV000439', 'name': 'testdemo', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 557193, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-19T13:46:39.8270000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-19T13:47:46.6410000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236836, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110435}]}, {'id': 110000000019929, 'code': 'NV000440', 'name': 'testP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-29T15:33:27.1600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162830, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 110000000019929}]}, {'id': 210000001006944, 'code': 'NV000441', 'name': 'TrangcP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-30T11:29:29.4900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011599952, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006944}]}, {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, {'id': 30000000124701, 'code': 'NV354758', 'name': 'ZWPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:11:01.8230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329070, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124701}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:44.820" endtime="20220215 22:05:44.821"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:44.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.821" endtime="20220215 22:05:44.822"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.822" endtime="20220215 22:05:44.822"></status>
</kw>
<msg timestamp="20220215 22:05:44.823" level="INFO">${resp} = {'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address':...</msg>
<status status="PASS" starttime="20220215 22:05:44.677" endtime="20220215 22:05:44.824"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:44.849" level="INFO">${list} = [180000000006604, 210000001006225, 30000000011407, 30000000011404, 180000000006314, 30000000011406, 220000000000810, 180000000015919, 30000000124634, 30000000011403, 140000000104304, 100000000003221, ...</msg>
<status status="PASS" starttime="20220215 22:05:44.824" endtime="20220215 22:05:44.849"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:44.850" level="INFO">${value} = 50000000124614</msg>
<status status="PASS" starttime="20220215 22:05:44.849" endtime="20220215 22:05:44.850"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.850" endtime="20220215 22:05:44.850"></status>
</kw>
<msg timestamp="20220215 22:05:44.851" level="INFO">${id_employee} = 50000000124614</msg>
<status status="PASS" starttime="20220215 22:05:44.677" endtime="20220215 22:05:44.851"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:44.956" level="INFO">Get Request using : alias=session, uri=/employees/50000000124614, headers=None json=None</msg>
<msg timestamp="20220215 22:05:44.956" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:44.956" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.851" endtime="20220215 22:05:44.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.957" level="INFO">{'result': {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000', 'isDeleted': False, 'clockings': [{'id': 60000004639623, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 1, 'startTime': '2021-07-07T07:00:00.0000000', 'endTime': '2021-07-07T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639622, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 3, 'startTime': '2021-07-06T07:00:00.0000000', 'endTime': '2021-07-06T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'checkOutDate': '2021-07-06T10:59:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639621, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 3, 'startTime': '2021-07-05T07:00:00.0000000', 'endTime': '2021-07-05T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-07-05T07:00:00.0000000', 'checkOutDate': '2021-07-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639620, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 3, 'startTime': '2021-07-04T07:00:00.0000000', 'endTime': '2021-07-04T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-07-04T07:00:00.0000000', 'checkOutDate': '2021-07-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639619, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 1, 'startTime': '2021-07-03T07:00:00.0000000', 'endTime': '2021-07-03T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639618, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 1, 'startTime': '2021-07-02T07:00:00.0000000', 'endTime': '2021-07-02T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004639617, 'shiftId': 50000000116608, 'timeSheetId': 120000000157943, 'employeeId': 50000000124614, 'workById': 50000000124614, 'clockingStatus': 1, 'startTime': '2021-07-01T07:00:00.0000000', 'endTime': '2021-07-01T11:00:00.0000000', 'branchId': 274097, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:44.956" endtime="20220215 22:05:44.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:44.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.957" endtime="20220215 22:05:44.957"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.958" endtime="20220215 22:05:44.958"></status>
</kw>
<msg timestamp="20220215 22:05:44.958" level="INFO">${resp} = {'result': {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'ward...</msg>
<status status="PASS" starttime="20220215 22:05:44.851" endtime="20220215 22:05:44.958"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:44.979" level="INFO">${list} = ['NV000433']</msg>
<status status="PASS" starttime="20220215 22:05:44.958" endtime="20220215 22:05:44.979"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:44.980" level="INFO">${value} = NV000433</msg>
<status status="PASS" starttime="20220215 22:05:44.979" endtime="20220215 22:05:44.980"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.980" endtime="20220215 22:05:44.980"></status>
</kw>
<msg timestamp="20220215 22:05:44.981" level="INFO">${code_employee} = NV000433</msg>
<status status="PASS" starttime="20220215 22:05:44.851" endtime="20220215 22:05:44.981"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.981" endtime="20220215 22:05:44.981"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.673" endtime="20220215 22:05:44.981"></status>
</kw>
<kw name="Update Employee" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>UD${random_number}</arg>
<arg>Update${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:44.982" level="INFO">${list} = [30000000124634, 'UD81169100', 'UpdateGpaY', '172909', '172909']</msg>
<status status="PASS" starttime="20220215 22:05:44.981" endtime="20220215 22:05:44.982"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:44.982" level="INFO">Length is 5</msg>
<msg timestamp="20220215 22:05:44.982" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 22:05:44.982" endtime="20220215 22:05:44.982"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.982" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:44.982" endtime="20220215 22:05:44.982"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.983" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:44.983" endtime="20220215 22:05:44.983"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.983" level="INFO">${data_format} = {"id":30000000124634,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.983" endtime="20220215 22:05:44.983"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.982" endtime="20220215 22:05:44.983"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.983" level="INFO">${value_temp} = UD81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.983" endtime="20220215 22:05:44.983"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.984" level="INFO">${value_temp} = UD81169100</msg>
<status status="PASS" starttime="20220215 22:05:44.983" endtime="20220215 22:05:44.984"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.984" level="INFO">${data_format} = {"id":30000000124634,"code":"UD81169100","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.984" endtime="20220215 22:05:44.984"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.983" endtime="20220215 22:05:44.984"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.984" level="INFO">${value_temp} = UpdateGpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.984" endtime="20220215 22:05:44.984"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.985" level="INFO">${value_temp} = UpdateGpaY</msg>
<status status="PASS" starttime="20220215 22:05:44.984" endtime="20220215 22:05:44.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.985" level="INFO">${data_format} = {"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.985" endtime="20220215 22:05:44.985"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.984" endtime="20220215 22:05:44.985"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.985" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.985" endtime="20220215 22:05:44.985"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.985" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.985" endtime="20220215 22:05:44.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.986" level="INFO">${data_format} = {"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:44.986" endtime="20220215 22:05:44.986"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.985" endtime="20220215 22:05:44.986"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.986" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.986" endtime="20220215 22:05:44.986"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:44.986" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:44.986" endtime="20220215 22:05:44.986"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:44.987" level="INFO">${data_format} = {"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.986" endtime="20220215 22:05:44.987"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.986" endtime="20220215 22:05:44.987"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.982" endtime="20220215 22:05:44.987"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:44.987" endtime="20220215 22:05:44.987"></status>
</kw>
<msg timestamp="20220215 22:05:44.987" level="INFO">${data} = {"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}</msg>
<status status="PASS" starttime="20220215 22:05:44.982" endtime="20220215 22:05:44.987"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220215 22:05:44.988" level="INFO">${data} = (None, '{"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')</msg>
<status status="PASS" starttime="20220215 22:05:44.987" endtime="20220215 22:05:44.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220215 22:05:44.988" level="INFO">${formdata} = {'employee': (None, '{"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.988" endtime="20220215 22:05:44.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220215 22:05:44.988" level="INFO">{'employee': (None, '{"id":30000000124634,"code":"UD81169100","name":"UpdateGpaY","branchId":172909,"userId":null,"workBranchIds":[172909]}')}</msg>
<status status="PASS" starttime="20220215 22:05:44.988" endtime="20220215 22:05:44.989"></status>
</kw>
<kw name="Update Request Json KV Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.232" level="INFO">Put Request using : alias=session, uri=/employees/30000000124634, data=None,                     headers={'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'}, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:45.232" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.232" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:44.989" endtime="20220215 22:05:45.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.232" level="INFO">{'result': {'id': 30000000124634, 'code': 'UD81169100', 'name': 'UpdateGpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T22:05:45.9151920+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': []}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.232" endtime="20220215 22:05:45.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.233" endtime="20220215 22:05:45.233"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.233" endtime="20220215 22:05:45.233"></status>
</kw>
<msg timestamp="20220215 22:05:45.233" level="INFO">${resp} = {'result': {'id': 30000000124634, 'code': 'UD81169100', 'name': 'UpdateGpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '',...</msg>
<status status="PASS" starttime="20220215 22:05:44.989" endtime="20220215 22:05:45.233"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:44.981" endtime="20220215 22:05:45.233"></status>
</kw>
<doc>Cập nhật nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:44.673" endtime="20220215 22:05:45.233" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Get pin code">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.235" level="INFO">${list_format} = ['172909']</msg>
<status status="PASS" starttime="20220215 22:05:45.235" endtime="20220215 22:05:45.235"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.235" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.235" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.235" endtime="20220215 22:05:45.235"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.236" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.236" endtime="20220215 22:05:45.236"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.236" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.236" endtime="20220215 22:05:45.236"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.237" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.236" endtime="20220215 22:05:45.237"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.235" endtime="20220215 22:05:45.237"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.235" endtime="20220215 22:05:45.237"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.237" endtime="20220215 22:05:45.237"></status>
</kw>
<msg timestamp="20220215 22:05:45.237" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.235" endtime="20220215 22:05:45.237"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.237" endtime="20220215 22:05:45.237"></status>
</kw>
<msg timestamp="20220215 22:05:45.238" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.234" endtime="20220215 22:05:45.238"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.341" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.341" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.341" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.239" endtime="20220215 22:05:45.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.344" level="INFO">{'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451691, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-09T18:33:56.7630000', 'modifiedBy': 14164, 'modifiedDate': '2021-05-28T11:05:53.7860000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011904, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006604}]}, {'id': 210000001006225, 'code': 'NV000432', 'name': 'aaaaaaaa1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T11:27:04.4130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011537647, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006225}]}, {'id': 30000000011407, 'code': 'NV000382', 'name': 'Nguyễn Thị Cúc Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:15.4700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T16:25:16.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['17', '15', '21'], 'employeeBranches': [{'id': 140000000209808, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011407}]}, {'id': 30000000011404, 'code': 'NV000376', 'name': 'Hoàng Nam Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:57:00.8700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:47.1490000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209805, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011404}]}, {'id': 180000000006314, 'code': 'NV000426', 'name': 'Nguyễn Thị Phương Chi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:26:44.0330000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-14T19:20:56.8580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011616, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006314}]}, {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18', '17'], 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, {'id': 220000000000810, 'code': 'NV000442', 'name': 'ddđ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 18011, 'department': {'id': 18011, 'name': '111111', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 452180, 'createdDate': '2020-07-03T15:05:08.3570000', 'isDeleted': False}, 'jobTitleId': 60000000003323, 'jobTitle': {'id': 60000000003323, 'name': 'Lễ tân 1', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-03-27T19:03:02.8260000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-18T14:53:35.4730000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T14:56:12.0200000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T17:50:27.6950000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '111111', 'jobTitleName': 'Lễ tân 1', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001010, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 220000000000810}]}, {'id': 180000000015919, 'code': 'NV000430', 'name': 'Tung Test Gio', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-06-10T10:55:22.5770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000021419, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000015919}]}, {'id': 30000000011403, 'code': 'NV000374', 'name': 'Trương Thị Mỹ Hạnh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:56:44.2470000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:18:04.3370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['19'], 'employeeBranches': [{'id': 140000000209804, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011403}]}, {'id': 140000000104304, 'code': 'NV000415', 'name': 'Nguyễn Thị Quỳnh Hoa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T22:19:35.3200000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:29.4360000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162205, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104304}]}, {'id': 100000000003221, 'code': 'NV000428', 'name': 'HuanTest', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-15T14:21:42.6670000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-02T10:22:17.0240000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000087927, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 100000000003221}]}, {'id': 80000000135822, 'code': 'NV049334', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:42.3170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177522, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135822}]}, {'id': 80000000135821, 'code': 'NV502878', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:39.5900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177521, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135821}]}, {'id': 80000000135820, 'code': 'NV757290', 'name': 'MLxl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:51:48.3770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177520, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135820}]}, {'id': 220000000000814, 'code': 'NV000443', 'name': 'nv more', 'isActive': True, 'identityNumber': '', 'mobilePhone': '125412512512512', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T18:05:03.2730000', 'modifiedBy': 14164, 'modifiedDate': '2021-12-18T18:08:50.1660000', 'isDeleted': False, 'profilePictures': [{'id': 230000000004302, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/fee8cd0fff6449ebb6b740c63218d0b2', 'isMainImage': False, 'employeeId': 220000000000814, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 210000011769085, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 220000000000814}]}, {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, {'id': 30000000017948, 'code': 'NV000413', 'name': 'Nguyễn Thị Thùy Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-12-21T13:50:51.3230000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:41.1890000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 30000000150248, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000017948}]}, {'id': 180000000017574, 'code': 'NV000431', 'name': 'phuoctesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-01T15:59:32.1900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417925, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000017574}]}, {'id': 30000000011405, 'code': 'NV000379', 'name': 'Lê Thị Ngọc Phương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:58:58.6270000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:28.8370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18'], 'employeeBranches': [{'id': 140000000209806, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011405}]}, {'id': 40000000110212, 'code': 'NV000438', 'name': 'Ha Test', 'dob': '2000-06-23T00:00:00.0000000', 'gender': False, 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-15T09:06:46.5200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236619, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110212}]}, {'id': 180000000013124, 'code': 'NV000429', 'name': 'test1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 556660, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-05-04T10:27:01.3600000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-06T10:51:34.3710000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000018526, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000013124}]}, {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, {'id': 40000000110435, 'code': 'NV000439', 'name': 'testdemo', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 557193, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-19T13:46:39.8270000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-19T13:47:46.6410000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236836, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110435}]}, {'id': 110000000019929, 'code': 'NV000440', 'name': 'testP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-29T15:33:27.1600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162830, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 110000000019929}]}, {'id': 210000001006944, 'code': 'NV000441', 'name': 'TrangcP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-30T11:29:29.4900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011599952, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006944}]}, {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, {'id': 30000000124634, 'code': 'UD81169100', 'name': 'UpdateGpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T22:05:45.9150000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, {'id': 30000000124701, 'code': 'NV354758', 'name': 'ZWPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:11:01.8230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329070, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124701}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.342" endtime="20220215 22:05:45.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.345" endtime="20220215 22:05:45.346"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.346" endtime="20220215 22:05:45.346"></status>
</kw>
<msg timestamp="20220215 22:05:45.347" level="INFO">${resp} = {'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address':...</msg>
<status status="PASS" starttime="20220215 22:05:45.238" endtime="20220215 22:05:45.347"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.367" level="INFO">${list} = [180000000006604, 210000001006225, 30000000011407, 30000000011404, 180000000006314, 30000000011406, 220000000000810, 180000000015919, 30000000011403, 140000000104304, 100000000003221, 80000000135822, ...</msg>
<status status="PASS" starttime="20220215 22:05:45.348" endtime="20220215 22:05:45.367"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:45.368" level="INFO">${value} = 140000000104309</msg>
<status status="PASS" starttime="20220215 22:05:45.367" endtime="20220215 22:05:45.368"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.368" endtime="20220215 22:05:45.368"></status>
</kw>
<msg timestamp="20220215 22:05:45.368" level="INFO">${id_employee} = 140000000104309</msg>
<status status="PASS" starttime="20220215 22:05:45.238" endtime="20220215 22:05:45.368"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.439" level="INFO">Get Request using : alias=session, uri=/employees/140000000104309, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.439" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.439" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.369" endtime="20220215 22:05:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.442" level="INFO">{'result': {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000', 'isDeleted': False, 'clockings': [{'id': 60000004533732, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-01T07:00:00.0000000', 'endTime': '2021-06-01T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533733, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-06-02T07:00:00.0000000', 'endTime': '2021-06-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-02T07:00:00.0000000', 'checkOutDate': '2021-06-02T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533734, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-06-03T07:00:00.0000000', 'endTime': '2021-06-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-03T07:00:00.0000000', 'checkOutDate': '2021-06-03T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533735, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-06-05T07:00:00.0000000', 'endTime': '2021-06-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-05T07:00:00.0000000', 'checkOutDate': '2021-06-05T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533736, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-06-06T07:00:00.0000000', 'endTime': '2021-06-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-06T07:00:00.0000000', 'checkOutDate': '2021-06-06T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533737, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-07T07:00:00.0000000', 'endTime': '2021-06-07T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533738, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-08T07:00:00.0000000', 'endTime': '2021-06-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533739, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-09T07:00:00.0000000', 'endTime': '2021-06-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533740, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-10T07:00:00.0000000', 'endTime': '2021-06-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533741, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-12T07:00:00.0000000', 'endTime': '2021-06-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533742, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-06-13T07:00:00.0000000', 'endTime': '2021-06-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-13T07:00:00.0000000', 'checkOutDate': '2021-06-13T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533743, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-14T07:00:00.0000000', 'endTime': '2021-06-14T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533744, 'shiftId': 160000000004503, 'timeSheetId': 60000000603312, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-06-15T07:00:00.0000000', 'endTime': '2021-06-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534067, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534068, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534069, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534070, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-05T07:00:00.0000000', 'checkOutDate': '2021-05-05T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534071, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534072, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534073, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534074, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534075, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-11T07:00:00.0000000', 'checkOutDate': '2021-05-11T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534076, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-12T07:00:00.0000000', 'checkOutDate': '2021-05-12T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534077, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-13T07:00:00.0000000', 'checkOutDate': '2021-05-13T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534078, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534079, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534080, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534081, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534082, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 3, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-19T07:00:00.0000000', 'checkOutDate': '2021-05-19T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534083, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534084, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534085, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534086, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534087, 'shiftId': 160000000004503, 'timeSheetId': 60000000603329, 'employeeId': 140000000104309, 'workById': 140000000104309, 'clockingStatus': 1, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.440" endtime="20220215 22:05:45.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.444" endtime="20220215 22:05:45.445"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.445" endtime="20220215 22:05:45.446"></status>
</kw>
<msg timestamp="20220215 22:05:45.448" level="INFO">${resp} = {'result': {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName':...</msg>
<status status="PASS" starttime="20220215 22:05:45.369" endtime="20220215 22:05:45.448"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.487" level="INFO">${list} = ['NV000419']</msg>
<status status="PASS" starttime="20220215 22:05:45.448" endtime="20220215 22:05:45.487"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:45.488" level="INFO">${value} = NV000419</msg>
<status status="PASS" starttime="20220215 22:05:45.487" endtime="20220215 22:05:45.488"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.488" endtime="20220215 22:05:45.488"></status>
</kw>
<msg timestamp="20220215 22:05:45.489" level="INFO">${code_employee} = NV000419</msg>
<status status="PASS" starttime="20220215 22:05:45.368" endtime="20220215 22:05:45.489"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.489" endtime="20220215 22:05:45.489"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.234" endtime="20220215 22:05:45.489"></status>
</kw>
<kw name="Get Pin Code" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${user_login}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.489" level="INFO">${list} = [30000000124634, 14164]</msg>
<status status="PASS" starttime="20220215 22:05:45.489" endtime="20220215 22:05:45.489"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_pin_code}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${enp_pin_code}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.490" level="INFO">Length is 2</msg>
<msg timestamp="20220215 22:05:45.490" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.490"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.490" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.490"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.491" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.491"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.491" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=30000000124634&amp;UserId=[D1]</msg>
<status status="PASS" starttime="20220215 22:05:45.491" endtime="20220215 22:05:45.491"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.491"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.491" level="INFO">${value_temp} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:45.491" endtime="20220215 22:05:45.491"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.492" level="INFO">${value_temp} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:45.491" endtime="20220215 22:05:45.492"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.492" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=30000000124634&amp;UserId=14164</msg>
<status status="PASS" starttime="20220215 22:05:45.492" endtime="20220215 22:05:45.492"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.491" endtime="20220215 22:05:45.492"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.492"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.492" endtime="20220215 22:05:45.492"></status>
</kw>
<msg timestamp="20220215 22:05:45.492" level="INFO">${enp_pin_code} = /employees/two-fa-pin?EmployeeId=30000000124634&amp;UserId=14164</msg>
<status status="PASS" starttime="20220215 22:05:45.490" endtime="20220215 22:05:45.492"></status>
</kw>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_pin_code}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.569" level="INFO">Get Request using : alias=session, uri=/employees/two-fa-pin?EmployeeId=30000000124634&amp;UserId=14164, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.569" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.570" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.493" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.570" level="INFO">{'result': {'pin': '305140'}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.570" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.570" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.571" endtime="20220215 22:05:45.571"></status>
</kw>
<msg timestamp="20220215 22:05:45.571" level="INFO">${resp} = {'result': {'pin': '305140'}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.492" endtime="20220215 22:05:45.571"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.489" endtime="20220215 22:05:45.571"></status>
</kw>
<doc>Lấy mã xác nhận cho chấm công gps</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:45.234" endtime="20220215 22:05:45.571" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Add work schedule">
<kw name="Add Work Schedule" library="employee">
<kw name="Format enp shift branch" library="shift">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.573" level="INFO">${list_format} = ['172909']</msg>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:45.573"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_shift_branch}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.573" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.573" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.573"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.573" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.573"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.574" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.574"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.574" level="INFO">${data_format} = /shifts/multiple-branch/orderby-from-to?BranchIds=172909&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 22:05:45.574" endtime="20220215 22:05:45.574"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.574"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.574"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.574" endtime="20220215 22:05:45.574"></status>
</kw>
<msg timestamp="20220215 22:05:45.574" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=172909&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 22:05:45.573" endtime="20220215 22:05:45.574"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${enp_shift_branch}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.575" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=172909&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220215 22:05:45.574" endtime="20220215 22:05:45.575"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:45.575"></status>
</kw>
<kw name="Create Shift" library="shift">
<arguments>
<arg>123456</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp_shift}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id}</arg>
<arg>${name}</arg>
<arg>${branch_id}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.575" level="INFO">${list_format} = ['123456', 'GpaY', '172909']</msg>
<status status="PASS" starttime="20220215 22:05:45.575" endtime="20220215 22:05:45.575"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_shift}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_shift}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.576" level="INFO">Length is 3</msg>
<msg timestamp="20220215 22:05:45.576" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220215 22:05:45.575" endtime="20220215 22:05:45.576"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.576" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220215 22:05:45.576" endtime="20220215 22:05:45.576"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.576" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220215 22:05:45.576" endtime="20220215 22:05:45.576"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.577" level="INFO">${data_format} = {"shift":{"id":123456,"name":"[D1]","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220215 22:05:45.576" endtime="20220215 22:05:45.577"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.576" endtime="20220215 22:05:45.577"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.577" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:45.577" endtime="20220215 22:05:45.577"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.577" level="INFO">${value_temp} = GpaY</msg>
<status status="PASS" starttime="20220215 22:05:45.577" endtime="20220215 22:05:45.577"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.577" level="INFO">${data_format} = {"shift":{"id":123456,"name":"GpaY","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220215 22:05:45.577" endtime="20220215 22:05:45.577"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.577" endtime="20220215 22:05:45.578"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.578" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.578" endtime="20220215 22:05:45.578"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.578" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.578" endtime="20220215 22:05:45.578"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.578" level="INFO">${data_format} = {"shift":{"id":123456,"name":"GpaY","from":420,"to":660,"isActive":true,"branchId":172909,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220215 22:05:45.578" endtime="20220215 22:05:45.578"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.578" endtime="20220215 22:05:45.578"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.576" endtime="20220215 22:05:45.578"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.578" endtime="20220215 22:05:45.579"></status>
</kw>
<msg timestamp="20220215 22:05:45.579" level="INFO">${data_shift} = {"shift":{"id":123456,"name":"GpaY","from":420,"to":660,"isActive":true,"branchId":172909,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220215 22:05:45.575" endtime="20220215 22:05:45.579"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}</arg>
<arg>${data_shift}</arg>
<arg>${expected_statusCode}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.728" level="INFO">Post Request using : alias=session, uri=/shifts, data={"shift":{"id":123456,"name":"GpaY","from":420,"to":660,"isActive":true,"branchId":172909,"checkInBefore":240,"checkOutAfter":840}}, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:45.728" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.728" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.579" endtime="20220215 22:05:45.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:45.728" endtime="20220215 22:05:45.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.729" endtime="20220215 22:05:45.729"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.729" endtime="20220215 22:05:45.729"></status>
</kw>
<msg timestamp="20220215 22:05:45.729" level="INFO">${resp} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:45.579" endtime="20220215 22:05:45.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.730" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:45.729" endtime="20220215 22:05:45.730"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.730" endtime="20220215 22:05:45.730"></status>
</kw>
<msg timestamp="20220215 22:05:45.730" level="INFO">${resp_shift} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:45.575" endtime="20220215 22:05:45.730"></status>
</kw>
<kw name="Get RanDom ID Shift And Get Name From ID" library="shift">
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift_branch}</arg>
<arg>$..result[?(@.isActive==true)].id</arg>
</arguments>
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.798" level="INFO">Get Request using : alias=session, uri=/shifts/multiple-branch/orderby-from-to?BranchIds=172909&amp;ShiftIds=, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.798" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.798" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.731" endtime="20220215 22:05:45.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.799" level="INFO">{'result': [{'id': 170000000006364, 'name': 'CA1', 'from': 300, 'to': 840, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 120, 'checkOutAfter': 1020}, {'id': 230000000008318, 'name': 'GpaY', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 230000000008413, 'name': 'PxyS', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 230000000008317, 'name': 'Cpxt', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 50000000120412, 'name': 'hVlF', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 230000000008409, 'name': 'UpdateCpxt', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 60000000151611, 'name': 'UpdateNdZQ', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 60000000015408, 'name': 'UpdatePxyS', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 160000000004503, 'name': 'Ca sáng trưa', 'from': 420, 'to': 720, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 900}, {'id': 60000000141602, 'name': 'Ca sáng', 'from': 480, 'to': 730, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 300, 'checkOutAfter': 910}, {'id': 30000000012701, 'name': 'Full', 'from': 570, 'to': 1290, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 390, 'checkOutAfter': 30}, {'id': 20000000007908, 'name': 'Ca chieu', 'from': 840, 'to': 1080, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 660, 'checkOutAfter': 1260}, {'id': 60000000015405, 'name': 'CA2', 'from': 840, 'to': 1320, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 660, 'checkOutAfter': 60}, {'id': 30000000012704, 'name': 'CA3', 'from': 1080, 'to': 1290, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 900, 'checkOutAfter': 30}], 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.799" endtime="20220215 22:05:45.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.799" endtime="20220215 22:05:45.799"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.799" endtime="20220215 22:05:45.799"></status>
</kw>
<msg timestamp="20220215 22:05:45.800" level="INFO">${resp} = {'result': [{'id': 170000000006364, 'name': 'CA1', 'from': 300, 'to': 840, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 120, 'checkOutAfter': 1020}, {'id': 230000000008318,...</msg>
<status status="PASS" starttime="20220215 22:05:45.730" endtime="20220215 22:05:45.800"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.818" level="INFO">${list} = [170000000006364, 230000000008318, 230000000008413, 230000000008317, 50000000120412, 230000000008409, 60000000151611, 60000000015408, 160000000004503, 60000000141602, 30000000012701, 20000000007908, 6...</msg>
<status status="PASS" starttime="20220215 22:05:45.800" endtime="20220215 22:05:45.818"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:45.819" level="INFO">${value} = 60000000015408</msg>
<status status="PASS" starttime="20220215 22:05:45.818" endtime="20220215 22:05:45.819"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.819" endtime="20220215 22:05:45.819"></status>
</kw>
<msg timestamp="20220215 22:05:45.820" level="INFO">${id_shift} = 60000000015408</msg>
<status status="PASS" starttime="20220215 22:05:45.730" endtime="20220215 22:05:45.820"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}/${id_shift}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${name_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.874" level="INFO">Get Request using : alias=session, uri=/shifts/60000000015408, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.874" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.874" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.820" endtime="20220215 22:05:45.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.875" level="INFO">{'result': {'id': 60000000015408, 'name': 'UpdatePxyS', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.874" endtime="20220215 22:05:45.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.875" endtime="20220215 22:05:45.876"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.876" endtime="20220215 22:05:45.876"></status>
</kw>
<msg timestamp="20220215 22:05:45.876" level="INFO">${resp} = {'result': {'id': 60000000015408, 'name': 'UpdatePxyS', 'from': 420, 'to': 660, 'isActive': True, 'branchId': 172909, 'tenantId': 4765, 'checkInBefore': 240, 'checkOutAfter': 840}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.820" endtime="20220215 22:05:45.876"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.899" level="INFO">${result} = ['UpdatePxyS']</msg>
<status status="PASS" starttime="20220215 22:05:45.877" endtime="20220215 22:05:45.899"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:45.899" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.899" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.899" endtime="20220215 22:05:45.899"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.900" level="INFO">${result} = UpdatePxyS</msg>
<status status="PASS" starttime="20220215 22:05:45.900" endtime="20220215 22:05:45.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.900" endtime="20220215 22:05:45.901"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.900" endtime="20220215 22:05:45.901"></status>
</kw>
<msg timestamp="20220215 22:05:45.901" level="INFO">${value} = UpdatePxyS</msg>
<status status="PASS" starttime="20220215 22:05:45.877" endtime="20220215 22:05:45.901"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.901" endtime="20220215 22:05:45.901"></status>
</kw>
<msg timestamp="20220215 22:05:45.901" level="INFO">${name_shift} = UpdatePxyS</msg>
<status status="PASS" starttime="20220215 22:05:45.820" endtime="20220215 22:05:45.901"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_shift}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.901" endtime="20220215 22:05:45.901"></status>
</kw>
<msg timestamp="20220215 22:05:45.902" level="INFO">${id_shift} = 60000000015408</msg>
<status status="PASS" starttime="20220215 22:05:45.730" endtime="20220215 22:05:45.902"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>12-12-2021</arg>
<arg>12-01-2022</arg>
<arg>${id_employee}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>${id_shift}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.902" level="INFO">${list_format} = ['12-12-2021', '12-01-2022', 30000000124634, '172909', '172909', 60000000015408]</msg>
<status status="PASS" starttime="20220215 22:05:45.902" endtime="20220215 22:05:45.902"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_add_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.903" level="INFO">Length is 6</msg>
<msg timestamp="20220215 22:05:45.903" level="INFO">${length} = 6</msg>
<status status="PASS" starttime="20220215 22:05:45.902" endtime="20220215 22:05:45.903"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.903" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220215 22:05:45.903" endtime="20220215 22:05:45.903"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.903" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220215 22:05:45.903" endtime="20220215 22:05:45.904"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.904" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"[D1]","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts":[{"sh...</msg>
<status status="PASS" starttime="20220215 22:05:45.904" endtime="20220215 22:05:45.904"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.903" endtime="20220215 22:05:45.904"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.904" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220215 22:05:45.904" endtime="20220215 22:05:45.904"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.904" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220215 22:05:45.904" endtime="20220215 22:05:45.905"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.905" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts"...</msg>
<status status="PASS" starttime="20220215 22:05:45.905" endtime="20220215 22:05:45.905"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.904" endtime="20220215 22:05:45.905"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.905" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:45.905" endtime="20220215 22:05:45.905"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.906" level="INFO">${value_temp} = 30000000124634</msg>
<status status="PASS" starttime="20220215 22:05:45.905" endtime="20220215 22:05:45.906"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.906" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSh...</msg>
<status status="PASS" starttime="20220215 22:05:45.906" endtime="20220215 22:05:45.906"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.905" endtime="20220215 22:05:45.906"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.907" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.907" endtime="20220215 22:05:45.907"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.907" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.907" endtime="20220215 22:05:45.907"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.908" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":172909,"branchIds":[[D4]],"time...</msg>
<status status="PASS" starttime="20220215 22:05:45.907" endtime="20220215 22:05:45.908"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.906" endtime="20220215 22:05:45.908"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.908" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.908" endtime="20220215 22:05:45.908"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.909" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.908" endtime="20220215 22:05:45.910"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.911" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":172909,"branchIds":[172909],"ti...</msg>
<status status="PASS" starttime="20220215 22:05:45.910" endtime="20220215 22:05:45.911"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.908" endtime="20220215 22:05:45.911"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.912" level="INFO">${value_temp} = 60000000015408</msg>
<status status="PASS" starttime="20220215 22:05:45.912" endtime="20220215 22:05:45.912"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.912" level="INFO">${value_temp} = 60000000015408</msg>
<status status="PASS" starttime="20220215 22:05:45.912" endtime="20220215 22:05:45.912"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.913" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":172909,"branchIds":[172909],"ti...</msg>
<status status="PASS" starttime="20220215 22:05:45.913" endtime="20220215 22:05:45.913"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.911" endtime="20220215 22:05:45.913"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.903" endtime="20220215 22:05:45.913"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.913" endtime="20220215 22:05:45.913"></status>
</kw>
<msg timestamp="20220215 22:05:45.913" level="INFO">${data} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":172909,"branchIds":[172909],"ti...</msg>
<status status="PASS" starttime="20220215 22:05:45.902" endtime="20220215 22:05:45.913"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_add_work_schedule}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.171" level="INFO">Post Request using : alias=session, uri=/timesheets, data={"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":30000000124634,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":172909,"branchIds":[172909],"timeSheetShifts":[{"shiftIds":"60000000015408","repeatDaysOfWeek":null}]}}, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:46.171" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.171" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.914" endtime="20220215 22:05:46.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.172" level="INFO">{'result': {'id': 230000000128082, 'employeeId': 30000000124634, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'saveOnDaysOffOfBranch': False, 'saveOnHoliday': False, 'timeSheetStatus': 1, 'clockings': [{'id': 230000001202988, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202989, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202990, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202991, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202992, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202993, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-18T07:00:00.0000000', 'endTime': '2021-12-18T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202994, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202995, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202996, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202997, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202998, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-24T07:00:00.0000000', 'endTime': '2021-12-24T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001202999, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-25T07:00:00.0000000', 'endTime': '2021-12-25T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203000, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-27T07:00:00.0000000', 'endTime': '2021-12-27T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203001, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-28T07:00:00.0000000', 'endTime': '2021-12-28T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203002, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-29T07:00:00.0000000', 'endTime': '2021-12-29T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203003, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-30T07:00:00.0000000', 'endTime': '2021-12-30T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203004, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-31T07:00:00.0000000', 'endTime': '2021-12-31T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203005, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-03T07:00:00.0000000', 'endTime': '2022-01-03T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203006, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203007, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203008, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203009, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203010, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-08T07:00:00.0000000', 'endTime': '2022-01-08T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203011, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-10T07:00:00.0000000', 'endTime': '2022-01-10T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203012, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-11T07:00:00.0000000', 'endTime': '2022-01-11T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 230000001203013, 'timeSheetId': 230000000128082, 'shiftId': 60000000015408, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-12T07:00:00.0000000', 'endTime': '2022-01-12T11:00:00.0000000', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:45.7830000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'clockingsOverlapTime': [{'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-09T07:00:00.0000000', 'endTime': '2022-01-09T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-02T07:00:00.0000000', 'endTime': '2022-01-02T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2022-01-01T07:00:00.0000000', 'endTime': '2022-01-01T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'Tết Dương lịch', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-26T07:00:00.0000000', 'endTime': '2021-12-26T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-19T07:00:00.0000000', 'endTime': '2021-12-19T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}, {'id': 0, 'shiftId': 60000000015408, 'timeSheetId': -1, 'employeeId': 30000000124634, 'workById': 30000000124634, 'clockingStatus': 1, 'startTime': '2021-12-12T07:00:00.0000000', 'endTime': '2021-12-12T11:00:00.0000000', 'branchId': 172909, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 2, 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}], 'timeSheetShifts': [{'id': -9223372036854774724, 'shiftIds': '60000000015408', 'timeSheetShiftStatus': 0, 'timeSheetId': 230000000128082}], 'hasEndDate': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:46.171" endtime="20220215 22:05:46.172"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.172" endtime="20220215 22:05:46.172"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.172" endtime="20220215 22:05:46.172"></status>
</kw>
<msg timestamp="20220215 22:05:46.173" level="INFO">${resp} = {'result': {'id': 230000000128082, 'employeeId': 30000000124634, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay...</msg>
<status status="PASS" starttime="20220215 22:05:45.913" endtime="20220215 22:05:46.173"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_work_schedule}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:46.191" level="INFO">${result} = [230000000128082]</msg>
<status status="PASS" starttime="20220215 22:05:46.173" endtime="20220215 22:05:46.191"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:46.191" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:46.191" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:46.191" endtime="20220215 22:05:46.191"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:46.192" level="INFO">${result} = 230000000128082</msg>
<status status="PASS" starttime="20220215 22:05:46.191" endtime="20220215 22:05:46.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.192" endtime="20220215 22:05:46.192"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.192" endtime="20220215 22:05:46.192"></status>
</kw>
<msg timestamp="20220215 22:05:46.192" level="INFO">${id_work_schedule} = 230000000128082</msg>
<status status="PASS" starttime="20220215 22:05:46.173" endtime="20220215 22:05:46.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
<arg>${id_work_schedule}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.193" level="INFO">${id_work_schedule} = 230000000128082</msg>
<status status="PASS" starttime="20220215 22:05:46.192" endtime="20220215 22:05:46.193"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:46.193"></status>
</kw>
<doc>Thêm lịch làm việc cho nhân viên tại MH nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:45.571" endtime="20220215 22:05:46.193" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Delete work schedule">
<kw name="Delete Work Schedule" library="employee">
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:46.194" level="INFO">${list_format} = [230000000128082]</msg>
<status status="PASS" starttime="20220215 22:05:46.194" endtime="20220215 22:05:46.194"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_del_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_del_work_schedule}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:46.195" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:46.195" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:46.195" endtime="20220215 22:05:46.195"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:46.195" level="INFO">${value_temp} = 230000000128082</msg>
<status status="PASS" starttime="20220215 22:05:46.195" endtime="20220215 22:05:46.196"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:46.196" level="INFO">${value_temp} = 230000000128082</msg>
<status status="PASS" starttime="20220215 22:05:46.196" endtime="20220215 22:05:46.196"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:46.196" level="INFO">${data_format} = {"Id":230000000128082}</msg>
<status status="PASS" starttime="20220215 22:05:46.196" endtime="20220215 22:05:46.196"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.195" endtime="20220215 22:05:46.196"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.195" endtime="20220215 22:05:46.196"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.196" endtime="20220215 22:05:46.197"></status>
</kw>
<msg timestamp="20220215 22:05:46.197" level="INFO">${data_del_work_schedule} = {"Id":230000000128082}</msg>
<status status="PASS" starttime="20220215 22:05:46.194" endtime="20220215 22:05:46.197"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_delete_work_schedule}</arg>
<arg>${data_del_work_schedule}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.446" level="INFO">Put Request using : alias=session, uri=/timesheets/cancelTimeSheet, data={"Id":230000000128082},                     headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQzLCJleHAiOjE2NDczNTY3NDMsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjEwOWE3MzZmMTJiODQxNWU5NmI5NDk1NTQ2ZTE3Njk2Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.HJz6SVzcDGunxLefdsabt5dhNlZEYh6naJvJatkEIcAWyrDZkCU955sGKdVrHG4tYMxPAo3mlWt7UooppYGfcxkRGab7STeSdHO3Q4IZa6L3_vC-4SBqGGrVra2SrKZ_bYa88vdkljAf_7hoz21XBhe2kKSoE1lQcRJ6HOQpLFAjbLpfp8h1XfCxR3jqWnSPqXxWI-oT0VyVD6imNQdQsTwh4qRrg1DSkz1gAqHcxkWu6ichWi4aLI-0hvLlAJ5KKBrkSILzz1ymGjgRoGYDJuh5iPsBCfDoIds-6v7_k2AAiknbb1Wz811-CfWFD6FnwBA-8Ealp2lsxn9Ymm6vIg'}, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:46.446" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.446" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.198" endtime="20220215 22:05:46.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.446" level="INFO">{'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:46.446" endtime="20220215 22:05:46.446"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.447" endtime="20220215 22:05:46.447"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.447" endtime="20220215 22:05:46.447"></status>
</kw>
<msg timestamp="20220215 22:05:46.447" level="INFO">${resp} = {'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:46.197" endtime="20220215 22:05:46.447"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_validate}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:46.472" level="INFO">${result} = ['Hủy lịch làm việc thành công']</msg>
<status status="PASS" starttime="20220215 22:05:46.448" endtime="20220215 22:05:46.472"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:46.473" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:46.473" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:46.473" endtime="20220215 22:05:46.473"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:46.473" level="INFO">${result} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220215 22:05:46.473" endtime="20220215 22:05:46.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.474" endtime="20220215 22:05:46.474"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.473" endtime="20220215 22:05:46.474"></status>
</kw>
<msg timestamp="20220215 22:05:46.474" level="INFO">${mess_validate} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220215 22:05:46.447" endtime="20220215 22:05:46.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_validate}</arg>
<arg>Hủy lịch làm việc thành công</arg>
</arguments>
<status status="PASS" starttime="20220215 22:05:46.474" endtime="20220215 22:05:46.474"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.194" endtime="20220215 22:05:46.474"></status>
</kw>
<doc>Xóa lịch làm việc của nhân viên tại tab lịch làm việc của màn hình nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:46.193" endtime="20220215 22:05:46.474" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Delete Employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:46.475" level="INFO">${list_format} = ['172909']</msg>
<status status="PASS" starttime="20220215 22:05:46.475" endtime="20220215 22:05:46.475"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:46.476" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:46.476" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:46.476" endtime="20220215 22:05:46.476"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:46.476" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:46.476" endtime="20220215 22:05:46.476"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:46.476" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:46.476" endtime="20220215 22:05:46.476"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:46.477" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:46.477" endtime="20220215 22:05:46.477"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.476" endtime="20220215 22:05:46.477"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.476" endtime="20220215 22:05:46.477"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.477" endtime="20220215 22:05:46.477"></status>
</kw>
<msg timestamp="20220215 22:05:46.477" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:46.475" endtime="20220215 22:05:46.477"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.477" endtime="20220215 22:05:46.477"></status>
</kw>
<msg timestamp="20220215 22:05:46.477" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:46.475" endtime="20220215 22:05:46.477"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.562" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909, headers=None json=None</msg>
<msg timestamp="20220215 22:05:46.562" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.562" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.478" endtime="20220215 22:05:46.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.563" level="INFO">{'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451691, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-09T18:33:56.7630000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-05-28T11:05:53.7860000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011904, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006604}]}, {'id': 210000001006225, 'code': 'NV000432', 'name': 'aaaaaaaa1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T11:27:04.4130000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011537647, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006225}]}, {'id': 30000000011407, 'code': 'NV000382', 'name': 'Nguyễn Thị Cúc Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:15.4700000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T16:25:16.8730000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['17', '15', '21'], 'employeeBranches': [{'id': 140000000209808, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011407}]}, {'id': 30000000011404, 'code': 'NV000376', 'name': 'Hoàng Nam Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:57:00.8700000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:47.1490000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209805, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011404}]}, {'id': 180000000006314, 'code': 'NV000426', 'name': 'Nguyễn Thị Phương Chi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:26:44.0330000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-06-14T19:20:56.8580000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011616, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006314}]}, {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18', '17'], 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, {'id': 220000000000810, 'code': 'NV000442', 'name': 'ddđ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 18011, 'department': {'id': 18011, 'name': '111111', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 452180, 'createdDate': '2020-07-03T15:05:08.3570000+07:00', 'isDeleted': False}, 'jobTitleId': 60000000003323, 'jobTitle': {'id': 60000000003323, 'name': 'Lễ tân 1', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-03-27T19:03:02.8260000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2020-06-18T14:53:35.4730000+07:00', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T14:56:12.0200000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T17:50:27.6950000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '111111', 'jobTitleName': 'Lễ tân 1', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001010, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 220000000000810}]}, {'id': 180000000015919, 'code': 'NV000430', 'name': 'Tung Test Gio', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-06-10T10:55:22.5770000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000021419, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000015919}]}, {'id': 30000000011403, 'code': 'NV000374', 'name': 'Trương Thị Mỹ Hạnh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:56:44.2470000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:18:04.3370000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['19'], 'employeeBranches': [{'id': 140000000209804, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011403}]}, {'id': 140000000104304, 'code': 'NV000415', 'name': 'Nguyễn Thị Quỳnh Hoa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T22:19:35.3200000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:29.4360000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162205, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104304}]}, {'id': 100000000003221, 'code': 'NV000428', 'name': 'HuanTest', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-15T14:21:42.6670000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-06-02T10:22:17.0240000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000087927, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 100000000003221}]}, {'id': 80000000135822, 'code': 'NV049334', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:42.3170000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177522, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135822}]}, {'id': 80000000135821, 'code': 'NV502878', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:39.5900000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177521, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135821}]}, {'id': 80000000135820, 'code': 'NV757290', 'name': 'MLxl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:51:48.3770000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177520, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135820}]}, {'id': 220000000000814, 'code': 'NV000443', 'name': 'nv more', 'isActive': True, 'identityNumber': '', 'mobilePhone': '125412512512512', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T18:05:03.2730000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-12-18T18:08:50.1660000+07:00', 'isDeleted': False, 'profilePictures': [{'id': 230000000004302, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/fee8cd0fff6449ebb6b740c63218d0b2', 'isMainImage': False, 'employeeId': 220000000000814, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 210000011769085, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 220000000000814}]}, {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, {'id': 30000000017948, 'code': 'NV000413', 'name': 'Nguyễn Thị Thùy Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-12-21T13:50:51.3230000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:41.1890000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 30000000150248, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000017948}]}, {'id': 180000000017574, 'code': 'NV000431', 'name': 'phuoctesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-01T15:59:32.1900000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417925, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000017574}]}, {'id': 30000000011405, 'code': 'NV000379', 'name': 'Lê Thị Ngọc Phương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:58:58.6270000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:28.8370000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18'], 'employeeBranches': [{'id': 140000000209806, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011405}]}, {'id': 40000000110212, 'code': 'NV000438', 'name': 'Ha Test', 'dob': '2000-06-23T00:00:00.0000000+07:00', 'gender': False, 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-15T09:06:46.5200000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236619, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110212}]}, {'id': 180000000013124, 'code': 'NV000429', 'name': 'test1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 556660, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-05-04T10:27:01.3600000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-06-06T10:51:34.3710000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000018526, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000013124}]}, {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, {'id': 40000000110435, 'code': 'NV000439', 'name': 'testdemo', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 557193, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-19T13:46:39.8270000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-07-19T13:47:46.6410000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236836, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110435}]}, {'id': 110000000019929, 'code': 'NV000440', 'name': 'testP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-29T15:33:27.1600000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162830, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 110000000019929}]}, {'id': 210000001006944, 'code': 'NV000441', 'name': 'TrangcP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-30T11:29:29.4900000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011599952, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006944}]}, {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, {'id': 30000000124634, 'code': 'UD81169100', 'name': 'UpdateGpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000+07:00', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T22:05:46.3840000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 14164, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, {'id': 30000000124701, 'code': 'NV354758', 'name': 'ZWPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:11:01.8230000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329070, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124701}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:46.562" endtime="20220215 22:05:46.563"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:46.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.563" endtime="20220215 22:05:46.564"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.564" endtime="20220215 22:05:46.564"></status>
</kw>
<msg timestamp="20220215 22:05:46.565" level="INFO">${resp} = {'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address':...</msg>
<status status="PASS" starttime="20220215 22:05:46.478" endtime="20220215 22:05:46.565"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:46.583" level="INFO">${list} = [180000000006604, 210000001006225, 30000000011407, 30000000011404, 180000000006314, 30000000011406, 220000000000810, 180000000015919, 30000000011403, 140000000104304, 100000000003221, 80000000135822, ...</msg>
<status status="PASS" starttime="20220215 22:05:46.565" endtime="20220215 22:05:46.583"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:46.584" level="INFO">${value} = 30000000011406</msg>
<status status="PASS" starttime="20220215 22:05:46.583" endtime="20220215 22:05:46.584"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.584" endtime="20220215 22:05:46.584"></status>
</kw>
<msg timestamp="20220215 22:05:46.584" level="INFO">${id_employee} = 30000000011406</msg>
<status status="PASS" starttime="20220215 22:05:46.478" endtime="20220215 22:05:46.584"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.641" level="INFO">Get Request using : alias=session, uri=/employees/30000000011406, headers=None json=None</msg>
<msg timestamp="20220215 22:05:46.642" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.642" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.585" endtime="20220215 22:05:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.643" level="INFO">{'result': {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000', 'isDeleted': False, 'clockings': [{'id': 60000004533589, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-01T07:00:00.0000000', 'endTime': '2021-06-01T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533590, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-06-02T07:00:00.0000000', 'endTime': '2021-06-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-02T07:00:00.0000000', 'checkOutDate': '2021-06-02T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533591, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-06-03T07:00:00.0000000', 'endTime': '2021-06-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-03T07:00:00.0000000', 'checkOutDate': '2021-06-03T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533592, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-06-05T07:00:00.0000000', 'endTime': '2021-06-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-05T07:00:00.0000000', 'checkOutDate': '2021-06-05T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533593, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-06-06T07:00:00.0000000', 'endTime': '2021-06-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-06T07:00:00.0000000', 'checkOutDate': '2021-06-06T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533594, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-07T07:00:00.0000000', 'endTime': '2021-06-07T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533595, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-06-08T07:00:00.0000000', 'endTime': '2021-06-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-08T07:00:00.0000000', 'checkOutDate': '2021-06-08T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533596, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-09T07:00:00.0000000', 'endTime': '2021-06-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533597, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-10T07:00:00.0000000', 'endTime': '2021-06-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533598, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-12T07:00:00.0000000', 'endTime': '2021-06-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533599, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-13T07:00:00.0000000', 'endTime': '2021-06-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533600, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-14T07:00:00.0000000', 'endTime': '2021-06-14T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533601, 'shiftId': 160000000004503, 'timeSheetId': 60000000603301, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-06-15T07:00:00.0000000', 'endTime': '2021-06-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533842, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533843, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533844, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533845, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533846, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533847, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533848, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533849, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533850, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533851, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533852, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533853, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533854, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533855, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533856, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533857, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533858, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533859, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533860, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533861, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533862, 'shiftId': 160000000004503, 'timeSheetId': 60000000603318, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 1, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271842, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-01T07:00:00.0000000', 'endTime': '2020-12-01T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271843, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-02T07:00:00.0000000', 'endTime': '2020-12-02T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2020-12-02T07:00:00.0000000', 'checkOutDate': '2020-12-02T07:01:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271844, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-03T07:00:00.0000000', 'endTime': '2020-12-03T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271845, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-04T07:00:00.0000000', 'endTime': '2020-12-04T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271846, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-05T07:00:00.0000000', 'endTime': '2020-12-05T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271847, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-06T07:00:00.0000000', 'endTime': '2020-12-06T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271848, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-07T07:00:00.0000000', 'endTime': '2020-12-07T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271849, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-08T07:00:00.0000000', 'endTime': '2020-12-08T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271850, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-09T07:00:00.0000000', 'endTime': '2020-12-09T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271851, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-10T07:00:00.0000000', 'endTime': '2020-12-10T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271852, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-11T07:00:00.0000000', 'endTime': '2020-12-11T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271853, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-12T07:00:00.0000000', 'endTime': '2020-12-12T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271854, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-13T07:00:00.0000000', 'endTime': '2020-12-13T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271855, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-14T07:00:00.0000000', 'endTime': '2020-12-14T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271856, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-15T07:00:00.0000000', 'endTime': '2020-12-15T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271857, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-16T07:00:00.0000000', 'endTime': '2020-12-16T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271858, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-17T07:00:00.0000000', 'endTime': '2020-12-17T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271859, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-18T07:00:00.0000000', 'endTime': '2020-12-18T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271860, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-19T07:00:00.0000000', 'endTime': '2020-12-19T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271861, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-20T07:00:00.0000000', 'endTime': '2020-12-20T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271862, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-21T07:00:00.0000000', 'endTime': '2020-12-21T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271863, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-22T07:00:00.0000000', 'endTime': '2020-12-22T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271864, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-23T07:00:00.0000000', 'endTime': '2020-12-23T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271865, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-24T07:00:00.0000000', 'endTime': '2020-12-24T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271866, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-25T07:00:00.0000000', 'endTime': '2020-12-25T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271867, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-26T07:00:00.0000000', 'endTime': '2020-12-26T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271868, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-27T07:00:00.0000000', 'endTime': '2020-12-27T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271869, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-28T07:00:00.0000000', 'endTime': '2020-12-28T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271870, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-29T07:00:00.0000000', 'endTime': '2020-12-29T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271871, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-30T07:00:00.0000000', 'endTime': '2020-12-30T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 160000001271872, 'shiftId': 60000000015408, 'timeSheetId': 160000000085371, 'employeeId': 30000000011406, 'workById': 30000000011406, 'clockingStatus': 0, 'startTime': '2020-12-31T07:00:00.0000000', 'endTime': '2020-12-31T07:01:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:46.642" endtime="20220215 22:05:46.643"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:46.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.643" endtime="20220215 22:05:46.644"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.644" endtime="20220215 22:05:46.644"></status>
</kw>
<msg timestamp="20220215 22:05:46.645" level="INFO">${resp} = {'result': {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName'...</msg>
<status status="PASS" starttime="20220215 22:05:46.584" endtime="20220215 22:05:46.645"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:46.666" level="INFO">${list} = ['NV000380']</msg>
<status status="PASS" starttime="20220215 22:05:46.645" endtime="20220215 22:05:46.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:46.667" level="INFO">${value} = NV000380</msg>
<status status="PASS" starttime="20220215 22:05:46.666" endtime="20220215 22:05:46.667"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.667" endtime="20220215 22:05:46.668"></status>
</kw>
<msg timestamp="20220215 22:05:46.668" level="INFO">${code_employee} = NV000380</msg>
<status status="PASS" starttime="20220215 22:05:46.584" endtime="20220215 22:05:46.668"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.668" endtime="20220215 22:05:46.668"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.475" endtime="20220215 22:05:46.668"></status>
</kw>
<kw name="Delete Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>200</arg>
</arguments>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.838" level="INFO">Delete Request using : alias=session, uri=/employees/30000000124634, data=(),                     headers=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:46.838" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.838" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.669" endtime="20220215 22:05:46.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.839" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220215 22:05:46.838" endtime="20220215 22:05:46.839"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.839" endtime="20220215 22:05:46.839"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.839" endtime="20220215 22:05:46.839"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:46.668" endtime="20220215 22:05:46.839"></status>
</kw>
<doc>Xóa 1 nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:46.474" endtime="20220215 22:05:46.839" critical="yes"></status>
</test>
<status status="PASS" starttime="20220215 22:05:43.114" endtime="20220215 22:05:46.840"></status>
</suite>
<status status="PASS" starttime="20220215 22:05:43.112" endtime="20220215 22:05:46.841"></status>
</suite>
<status status="PASS" starttime="20220215 22:05:43.095" endtime="20220215 22:05:46.842"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">all</stat>
<stat pass="8" fail="0">employee</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="8" fail="0" id="s1-s1-s1" name="Employee">Testsuites.NhanVien.Employee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
