<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220314 17:50:23.443">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Employee" source="D:\timesheet\testsuites\NhanVien\employee.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone61=https://testz61.kiotviet.vn/api</arg>
<arg>zone21=https://testz221.kiotviet.vn/api</arg>
<arg>zone8=https://testz8.kiotviet.vn/api</arg>
<arg>zone9=https://taphoa.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>zone59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>zone59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb59508=https://phuoc59508.kvpos.com:59508/api</arg>
<arg>booking9009=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>booking541=https://booking.kvpos.com:59541/api</arg>
<arg>booking543=https://booking.kvpos.com:59543/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220314 17:50:23.677" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone61': 'https://test...</msg>
<status status="PASS" starttime="20220314 17:50:23.675" endtime="20220314 17:50:23.677"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>zone61=/auth/salelogin</arg>
<arg>zone21=/auth/salelogin</arg>
<arg>zone8=/auth/salelogin</arg>
<arg>zone9=/auth/salelogin</arg>
<arg>zone59902=/auth/salelogin</arg>
<arg>zone59903=/auth/salelogin</arg>
<arg>fnb59508=/auth/salelogin</arg>
<arg>booking9009=/auth/salelogin</arg>
<arg>booking541=/auth/salelogin</arg>
<arg>booking543=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220314 17:50:23.679" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', 'zone61': '/auth/salelogin', 'zone21': '/auth/salelogin'...</msg>
<status status="PASS" starttime="20220314 17:50:23.678" endtime="20220314 17:50:23.679"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>zone61=https://api-timesheet.kiotviet.vn</arg>
<arg>zone21=https://api-timesheet.kiotviet.vn</arg>
<arg>zone8=https://api-timesheet.kiotviet.vn</arg>
<arg>zone9=https://api-timesheet2.kiotviet.vn</arg>
<arg>zone59902=https://kvpos.com:55002</arg>
<arg>zone59903=https://kvpos.com:55003</arg>
<arg>fnb59508=https://kvpos.com:55008</arg>
<arg>booking9009=https://timesheetapi.kvpos.com:9009</arg>
<arg>booking541=https://kvpos.com:55041</arg>
<arg>booking543=https://kvpos.com:55043</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220314 17:50:23.679" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220314 17:50:23.679" endtime="20220314 17:50:23.679"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man3.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>zone61=https://api-man3.kiotviet.vn/api</arg>
<arg>zone21=https://api-man3.kiotviet.vn/api</arg>
<arg>zone8=https://api-man3.kiotviet.vn/api</arg>
<arg>zone9=https://api-man3.kiotviet.vn/api</arg>
<arg>zone59902=https://kvpos.com:59932/api</arg>
<arg>zone59903=https://kvpos.com:59933/api</arg>
<arg>fnb59508=https://kvpos.com:59508/api</arg>
<arg>booking9009=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>booking541=https://booking.kvpos.com:59541/api</arg>
<arg>booking543=https://booking.kvpos.com:59543/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220314 17:50:23.680" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man3.kiotviet.vn/api', 'zone14': 'https://a...</msg>
<status status="PASS" starttime="20220314 17:50:23.679" endtime="20220314 17:50:23.680"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=admin</arg>
<arg>zone21=admin</arg>
<arg>zone8=admin</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking9009=1</arg>
<arg>booking543=1</arg>
<arg>booking541=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220314 17:50:23.682" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', 'zone9': 'taphoa', 'zone61': 'admin', 'zone21': 'admin', 'zone8': 'admin', 'zone59902': '1', 'zone59903': ...</msg>
<status status="PASS" starttime="20220314 17:50:23.681" endtime="20220314 17:50:23.683"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>zone9=123456</arg>
<arg>zone61=123456</arg>
<arg>zone21=123456</arg>
<arg>zone8=123</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking9009=1</arg>
<arg>booking541=1</arg>
<arg>booking543=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220314 17:50:23.684" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', 'zone9': '123456', 'zone61': '123456', 'zone21': '123456', 'zone8': '123', 'zone59902': '1', 'zone59903': '1',...</msg>
<status status="PASS" starttime="20220314 17:50:23.683" endtime="20220314 17:50:23.684"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=testz61</arg>
<arg>zone21=testz221</arg>
<arg>zone8=testz82</arg>
<arg>zone59902=phuoc902</arg>
<arg>zone59903=phuoc903</arg>
<arg>fnb59508=phuoc59508</arg>
<arg>booking9009=phuoc009</arg>
<arg>booking543=phuoc443</arg>
<arg>booking541=phuocnew441</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220314 17:50:23.685" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', 'zone9': 'taphoa', 'zone61': 'testz61', 'zone21': 'testz221', 'zone8': 'testz82', 'zone59902': 'phuo...</msg>
<status status="PASS" starttime="20220314 17:50:23.684" endtime="20220314 17:50:23.685"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220314 17:50:23.686" level="INFO">${username} = 1</msg>
<status status="PASS" starttime="20220314 17:50:23.685" endtime="20220314 17:50:23.686"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220314 17:50:23.686" level="INFO">${password} = 1</msg>
<status status="PASS" starttime="20220314 17:50:23.686" endtime="20220314 17:50:23.686"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220314 17:50:23.686" level="INFO">${retailer} = phuocnew441</msg>
<status status="PASS" starttime="20220314 17:50:23.686" endtime="20220314 17:50:23.686"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220314 17:50:23.687" level="INFO">${url_saleLogin} = https://booking.kvpos.com:59541/api</msg>
<status status="PASS" starttime="20220314 17:50:23.686" endtime="20220314 17:50:23.687"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220314 17:50:23.687" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220314 17:50:23.687" endtime="20220314 17:50:23.687"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220314 17:50:23.687" level="INFO">${url} = https://kvpos.com:55041</msg>
<status status="PASS" starttime="20220314 17:50:23.687" endtime="20220314 17:50:23.687"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220314 17:50:23.687" level="INFO">${url_man} = https://booking.kvpos.com:59541/api</msg>
<status status="PASS" starttime="20220314 17:50:23.687" endtime="20220314 17:50:23.687"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.688" level="INFO">${username} = 1</msg>
<status status="PASS" starttime="20220314 17:50:23.688" endtime="20220314 17:50:23.688"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.688" level="INFO">${password} = 1</msg>
<status status="PASS" starttime="20220314 17:50:23.688" endtime="20220314 17:50:23.688"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.688" level="INFO">${retailer} = phuocnew441</msg>
<status status="PASS" starttime="20220314 17:50:23.688" endtime="20220314 17:50:23.688"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.689" level="INFO">${url_saleLogin} = https://booking.kvpos.com:59541/api</msg>
<status status="PASS" starttime="20220314 17:50:23.689" endtime="20220314 17:50:23.689"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.689" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220314 17:50:23.689" endtime="20220314 17:50:23.689"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.689" level="INFO">${url} = https://kvpos.com:55041</msg>
<status status="PASS" starttime="20220314 17:50:23.689" endtime="20220314 17:50:23.689"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.690" level="INFO">${url_man} = https://booking.kvpos.com:59541/api</msg>
<status status="PASS" starttime="20220314 17:50:23.689" endtime="20220314 17:50:23.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220314 17:50:23.691" level="INFO">${header} = {'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220314 17:50:23.690" endtime="20220314 17:50:23.691"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220314 17:50:23.691" level="INFO">${data_saleLogin} = {'UserName': '1', 'Password': '1'}</msg>
<status status="PASS" starttime="20220314 17:50:23.691" endtime="20220314 17:50:23.691"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220314 17:50:23.692" level="INFO">Creating Session using : alias=sessionLogin, url=https://booking.kvpos.com:59541/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220314 17:50:23.691" endtime="20220314 17:50:23.692"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:24.058" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "1", "Password": "1"}, headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:24.058" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'booking.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:24.058" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:23.692" endtime="20220314 17:50:24.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.058" level="INFO">{'UserId': 10997, 'UserName': '1', 'SessionId': 'r0npfebseEFJQnoBYEga', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8', 'BranchId': 1939, 'IsUsingNewFnb': False, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220314 17:50:24.058" endtime="20220314 17:50:24.058"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:24.079" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlc...</msg>
<status status="PASS" starttime="20220314 17:50:24.059" endtime="20220314 17:50:24.079"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.079" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:24.079" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:24.079" endtime="20220314 17:50:24.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:24.080" endtime="20220314 17:50:24.080"></status>
</kw>
<msg timestamp="20220314 17:50:24.080" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI...</msg>
<status status="PASS" starttime="20220314 17:50:24.080" endtime="20220314 17:50:24.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.080" endtime="20220314 17:50:24.081"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.080" endtime="20220314 17:50:24.081"></status>
</kw>
<msg timestamp="20220314 17:50:24.081" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI...</msg>
<status status="PASS" starttime="20220314 17:50:24.059" endtime="20220314 17:50:24.081"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220314 17:50:24.081" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJr...</msg>
<status status="PASS" starttime="20220314 17:50:24.081" endtime="20220314 17:50:24.081"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:24.099" level="INFO">${result} = [10997]</msg>
<status status="PASS" starttime="20220314 17:50:24.082" endtime="20220314 17:50:24.099"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.099" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:24.099" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:24.099" endtime="20220314 17:50:24.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:24.100" endtime="20220314 17:50:24.100"></status>
</kw>
<msg timestamp="20220314 17:50:24.100" level="INFO">${result} = 10997</msg>
<status status="PASS" starttime="20220314 17:50:24.099" endtime="20220314 17:50:24.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.100" endtime="20220314 17:50:24.100"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.100" endtime="20220314 17:50:24.100"></status>
</kw>
<msg timestamp="20220314 17:50:24.101" level="INFO">${user_login} = 10997</msg>
<status status="PASS" starttime="20220314 17:50:24.081" endtime="20220314 17:50:24.101"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.101" level="INFO">${user_login} = 10997</msg>
<status status="PASS" starttime="20220314 17:50:24.101" endtime="20220314 17:50:24.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.101" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJr...</msg>
<status status="PASS" starttime="20220314 17:50:24.101" endtime="20220314 17:50:24.101"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220314 17:50:24.102" level="INFO">${random_str} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:24.101" endtime="20220314 17:50:24.102"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.102" endtime="20220314 17:50:24.102"></status>
</kw>
<msg timestamp="20220314 17:50:24.102" level="INFO">${random_str} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:24.101" endtime="20220314 17:50:24.102"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.102" level="INFO">${random_str} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:24.102" endtime="20220314 17:50:24.102"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220314 17:50:24.103" level="INFO">${random_number} = 22804382</msg>
<status status="PASS" starttime="20220314 17:50:24.102" endtime="20220314 17:50:24.103"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.103" endtime="20220314 17:50:24.103"></status>
</kw>
<msg timestamp="20220314 17:50:24.103" level="INFO">${random_number} = 22804382</msg>
<status status="PASS" starttime="20220314 17:50:24.102" endtime="20220314 17:50:24.103"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.103" level="INFO">${random_number} = 22804382</msg>
<status status="PASS" starttime="20220314 17:50:24.103" endtime="20220314 17:50:24.103"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:24.120" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20220314 17:50:24.104" endtime="20220314 17:50:24.120"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.120" level="INFO">Length is 0</msg>
<msg timestamp="20220314 17:50:24.120" level="INFO">${length} = 0</msg>
<status status="PASS" starttime="20220314 17:50:24.120" endtime="20220314 17:50:24.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:24.120" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20220314 17:50:24.120" endtime="20220314 17:50:24.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.121" endtime="20220314 17:50:24.121"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.121" endtime="20220314 17:50:24.121"></status>
</kw>
<msg timestamp="20220314 17:50:24.121" level="INFO">${branchId} = 0</msg>
<status status="PASS" starttime="20220314 17:50:24.103" endtime="20220314 17:50:24.121"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.121" level="INFO">${branchId} = 0</msg>
<status status="PASS" starttime="20220314 17:50:24.121" endtime="20220314 17:50:24.121"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<assign>
<var>${is_run_retail}</var>
<var>${value}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<msg timestamp="20220314 17:50:24.122" level="FAIL">'booking541' does not contain 'zone'</msg>
<status status="FAIL" starttime="20220314 17:50:24.122" endtime="20220314 17:50:24.122"></status>
</kw>
<msg timestamp="20220314 17:50:24.122" level="INFO">${is_run_retail} = FAIL</msg>
<msg timestamp="20220314 17:50:24.122" level="INFO">${value} = 'booking541' does not contain 'zone'</msg>
<status status="PASS" starttime="20220314 17:50:24.122" endtime="20220314 17:50:24.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${is_run_retail}' == 'PASS'</arg>
<arg>${true}</arg>
<arg>${false}</arg>
</arguments>
<assign>
<var>${run}</var>
</assign>
<msg timestamp="20220314 17:50:24.123" level="INFO">${run} = False</msg>
<status status="PASS" starttime="20220314 17:50:24.122" endtime="20220314 17:50:24.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${run}'=='True'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb Or Booking</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Run Fnb Or Booking" library="enviroment">
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp_json}</arg>
<arg>$.BranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:24.165" level="INFO">${result} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:24.123" endtime="20220314 17:50:24.165"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.166" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:24.166" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:24.166" endtime="20220314 17:50:24.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:24.166" endtime="20220314 17:50:24.167"></status>
</kw>
<msg timestamp="20220314 17:50:24.167" level="INFO">${result} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.166" endtime="20220314 17:50:24.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.167" endtime="20220314 17:50:24.167"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.167" endtime="20220314 17:50:24.167"></status>
</kw>
<msg timestamp="20220314 17:50:24.167" level="INFO">${branchId} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.123" endtime="20220314 17:50:24.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.169" level="INFO">${branchId} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.168" endtime="20220314 17:50:24.169"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.169" endtime="20220314 17:50:24.169"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.123" endtime="20220314 17:50:24.169"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.123" endtime="20220314 17:50:24.169"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220314 17:50:24.170" level="INFO">${branchId} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.169" endtime="20220314 17:50:24.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220314 17:50:24.170" level="INFO">${header} = {'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwi...</msg>
<status status="PASS" starttime="20220314 17:50:24.170" endtime="20220314 17:50:24.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220314 17:50:24.171" level="INFO">${headers_not_contenType} = {'retailer': 'phuocnew441', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2ND...</msg>
<status status="PASS" starttime="20220314 17:50:24.170" endtime="20220314 17:50:24.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.171" level="INFO">${header} = {'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwi...</msg>
<status status="PASS" starttime="20220314 17:50:24.171" endtime="20220314 17:50:24.171"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.172" level="INFO">${headers_not_contenType} = {'retailer': 'phuocnew441', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2ND...</msg>
<status status="PASS" starttime="20220314 17:50:24.171" endtime="20220314 17:50:24.172"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.172" level="INFO">Creating Session using : alias=session, url=https://kvpos.com:55041, headers={'retailer': 'phuocnew441', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220314 17:50:24.172" endtime="20220314 17:50:24.172"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.172" level="INFO">Creating Session using : alias=sessionMan, url=https://booking.kvpos.com:59541/api, headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220314 17:50:24.172" endtime="20220314 17:50:24.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220314 17:50:24.174" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220314 17:50:24.173" endtime="20220314 17:50:24.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220314 17:50:24.176" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220314 17:50:24.175" endtime="20220314 17:50:24.176"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:24.356" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/1939, headers=None json=None</msg>
<msg timestamp="20220314 17:50:24.356" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'booking.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:24.356" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:24.176" endtime="20220314 17:50:24.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.356" level="INFO">{'Id': 1939, 'Name': 'chi nhánh 1', 'Type': 0, 'Address': 'abc', 'Province': 'Hồ Chí Minh', 'District': 'Quận 3', 'ContactNumber': '0368199369', 'IsActive': True, 'RetailerId': 200001091, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Hồ Chí Minh - Quận 3', 'WardName': 'Phường 03', 'isAcceptBookClosing': False, 'GmbStatus': 1, 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'PriceBookDiningOptions': [], 'ProcessingSectors': [], 'CancelDishReasonDetails': [], 'CancelDishReasons': [], 'Reservation': [], 'NotifyDishes': [], 'GroupNoteTemplates': [], 'NoteTemplates': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'BranchTakingAddresses': [], 'Bookings': [], 'TotalUser': 0, 'CompareBranchName': 'chi nhánh 1', 'IsTimeSheetException': False}</msg>
<status status="PASS" starttime="20220314 17:50:24.356" endtime="20220314 17:50:24.356"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220314 17:50:24.375" level="INFO">${name} = ['chi nhánh 1']</msg>
<status status="PASS" starttime="20220314 17:50:24.356" endtime="20220314 17:50:24.375"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.375" endtime="20220314 17:50:24.376"></status>
</kw>
<msg timestamp="20220314 17:50:24.376" level="INFO">${name_branch} = ['chi nhánh 1']</msg>
<status status="PASS" starttime="20220314 17:50:24.176" endtime="20220314 17:50:24.376"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.169" endtime="20220314 17:50:24.376"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:23.674" endtime="20220314 17:50:24.376"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create employee">
<kw name="Create Employee" library="employee">
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>100000</arg>
<arg>200</arg>
<arg>300</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${code_employee}</arg>
<arg>${name_employee}</arg>
<arg>${branchId_salary}</arg>
<arg>${branchId_work}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.377" level="INFO">${list_format} = ['1235698', 'NV22804382', 'xiEi', 1939, 1939]</msg>
<status status="PASS" starttime="20220314 17:50:24.377" endtime="20220314 17:50:24.377"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${default}</arg>
<arg>${value_holiday}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${list_salary}</var>
</assign>
<msg timestamp="20220314 17:50:24.377" level="INFO">${list_salary} = ['100000', '200', '300']</msg>
<status status="PASS" starttime="20220314 17:50:24.377" endtime="20220314 17:50:24.377"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.378" level="INFO">Length is 5</msg>
<msg timestamp="20220314 17:50:24.378" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220314 17:50:24.378" endtime="20220314 17:50:24.378"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.379" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:24.379" endtime="20220314 17:50:24.379"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.380" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:24.380" endtime="20220314 17:50:24.380"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.380" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:24.380" endtime="20220314 17:50:24.380"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.379" endtime="20220314 17:50:24.380"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.380" level="INFO">${value_temp} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:24.380" endtime="20220314 17:50:24.380"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.381" level="INFO">${value_temp} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:24.380" endtime="20220314 17:50:24.381"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.381" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:24.381" endtime="20220314 17:50:24.381"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.380" endtime="20220314 17:50:24.381"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.381" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:24.381" endtime="20220314 17:50:24.381"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.381" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:24.381" endtime="20220314 17:50:24.382"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.382" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":"xiEi","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:24.382" endtime="20220314 17:50:24.382"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.381" endtime="20220314 17:50:24.382"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.382" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.382" endtime="20220314 17:50:24.382"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.382" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.382" endtime="20220314 17:50:24.382"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.383" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:24.383" endtime="20220314 17:50:24.383"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.382" endtime="20220314 17:50:24.383"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.383" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.383" endtime="20220314 17:50:24.383"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.384" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:24.383" endtime="20220314 17:50:24.384"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.384" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:24.384" endtime="20220314 17:50:24.384"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.383" endtime="20220314 17:50:24.384"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.378" endtime="20220314 17:50:24.384"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.384" endtime="20220314 17:50:24.384"></status>
</kw>
<msg timestamp="20220314 17:50:24.384" level="INFO">${data} = {"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:24.378" endtime="20220314 17:50:24.384"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_set_salary}</arg>
<arg>${list_salary}</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:24.385" level="INFO">Length is 3</msg>
<msg timestamp="20220314 17:50:24.385" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220314 17:50:24.385" endtime="20220314 17:50:24.385"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.385" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220314 17:50:24.385" endtime="20220314 17:50:24.385"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.385" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220314 17:50:24.385" endtime="20220314 17:50:24.385"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.386" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":[D1],"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"valu...</msg>
<status status="PASS" starttime="20220314 17:50:24.386" endtime="20220314 17:50:24.386"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.385" endtime="20220314 17:50:24.386"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.386" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220314 17:50:24.386" endtime="20220314 17:50:24.386"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.386" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220314 17:50:24.386" endtime="20220314 17:50:24.386"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.387" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220314 17:50:24.386" endtime="20220314 17:50:24.387"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.386" endtime="20220314 17:50:24.387"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.387" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220314 17:50:24.387" endtime="20220314 17:50:24.387"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:24.387" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220314 17:50:24.387" endtime="20220314 17:50:24.387"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:24.387" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220314 17:50:24.387" endtime="20220314 17:50:24.387"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.387" endtime="20220314 17:50:24.387"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:24.385" endtime="20220314 17:50:24.387"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:24.387" endtime="20220314 17:50:24.388"></status>
</kw>
<msg timestamp="20220314 17:50:24.388" level="INFO">${data_set_salary} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220314 17:50:24.384" endtime="20220314 17:50:24.388"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220314 17:50:24.388" level="INFO">${data} = (None, '{"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:24.388" endtime="20220314 17:50:24.388"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data_set_salary}')</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<msg timestamp="20220314 17:50:24.388" level="INFO">${data_set_salary} = (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":...</msg>
<status status="PASS" starttime="20220314 17:50:24.388" endtime="20220314 17:50:24.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.389" level="INFO">(None, '{"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:24.388" endtime="20220314 17:50:24.389"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
<arg>payRate=${data_set_salary}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220314 17:50:24.389" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryVal...</msg>
<status status="PASS" starttime="20220314 17:50:24.389" endtime="20220314 17:50:24.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220314 17:50:24.389" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}</msg>
<status status="PASS" starttime="20220314 17:50:24.389" endtime="20220314 17:50:24.389"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:27.125" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV22804382","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:27.125" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:27.125" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:24.390" endtime="20220314 17:50:27.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.126" level="INFO">{'result': {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'workBranchIds': [1939], 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}, 'message': 'Tạo nhân viên thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:27.125" endtime="20220314 17:50:27.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:27.126" endtime="20220314 17:50:27.126"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.126" endtime="20220314 17:50:27.126"></status>
</kw>
<msg timestamp="20220314 17:50:27.126" level="INFO">${resp} = {'result': {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName'...</msg>
<status status="PASS" starttime="20220314 17:50:24.389" endtime="20220314 17:50:27.126"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:27.144" level="INFO">${result} = [100212131]</msg>
<status status="PASS" starttime="20220314 17:50:27.127" endtime="20220314 17:50:27.144"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.144" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:27.145" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:27.144" endtime="20220314 17:50:27.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.145" endtime="20220314 17:50:27.145"></status>
</kw>
<msg timestamp="20220314 17:50:27.145" level="INFO">${result} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:27.145" endtime="20220314 17:50:27.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.145" endtime="20220314 17:50:27.146"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.145" endtime="20220314 17:50:27.146"></status>
</kw>
<msg timestamp="20220314 17:50:27.146" level="INFO">${id_employee} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:27.127" endtime="20220314 17:50:27.146"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:27.163" level="INFO">${result} = ['NV22804382']</msg>
<status status="PASS" starttime="20220314 17:50:27.146" endtime="20220314 17:50:27.163"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.163" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:27.163" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:27.163" endtime="20220314 17:50:27.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.163" endtime="20220314 17:50:27.163"></status>
</kw>
<msg timestamp="20220314 17:50:27.164" level="INFO">${result} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.163" endtime="20220314 17:50:27.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.164" endtime="20220314 17:50:27.164"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.164" endtime="20220314 17:50:27.164"></status>
</kw>
<msg timestamp="20220314 17:50:27.164" level="INFO">${code_employee} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.146" endtime="20220314 17:50:27.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${code_employee}</arg>
<arg>${code_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.165" level="INFO">${code_employee} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.165" endtime="20220314 17:50:27.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.165" level="INFO">${id_employee} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:27.165" endtime="20220314 17:50:27.165"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220314 17:50:27.165" level="INFO">${branchId} = 1939.0</msg>
<status status="PASS" starttime="20220314 17:50:27.165" endtime="20220314 17:50:27.165"></status>
</kw>
<kw name="Verify Input And Output Employee" library="employee">
<arguments>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
</arguments>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:27.808" level="INFO">Get Request using : alias=session, uri=/employees/100212131, headers=None json=None</msg>
<msg timestamp="20220314 17:50:27.808" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:27.808" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:27.166" endtime="20220314 17:50:27.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.808" level="INFO">{'result': {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:27.808" endtime="20220314 17:50:27.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:27.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:27.809" endtime="20220314 17:50:27.809"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.809" endtime="20220314 17:50:27.809"></status>
</kw>
<msg timestamp="20220314 17:50:27.809" level="INFO">${resp} = {'result': {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName'...</msg>
<status status="PASS" starttime="20220314 17:50:27.166" endtime="20220314 17:50:27.809"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:27.826" level="INFO">${result} = ['NV22804382']</msg>
<status status="PASS" starttime="20220314 17:50:27.810" endtime="20220314 17:50:27.826"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.826" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:27.826" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:27.826" endtime="20220314 17:50:27.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.827" endtime="20220314 17:50:27.827"></status>
</kw>
<msg timestamp="20220314 17:50:27.827" level="INFO">${result} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.827" endtime="20220314 17:50:27.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.827" endtime="20220314 17:50:27.827"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.827" endtime="20220314 17:50:27.827"></status>
</kw>
<msg timestamp="20220314 17:50:27.828" level="INFO">${code_output} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.809" endtime="20220314 17:50:27.828"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.name</arg>
</arguments>
<assign>
<var>${name_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:27.845" level="INFO">${result} = ['xiEi']</msg>
<status status="PASS" starttime="20220314 17:50:27.828" endtime="20220314 17:50:27.845"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.845" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:27.845" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:27.845" endtime="20220314 17:50:27.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.846" endtime="20220314 17:50:27.846"></status>
</kw>
<msg timestamp="20220314 17:50:27.846" level="INFO">${result} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:27.846" endtime="20220314 17:50:27.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.846" endtime="20220314 17:50:27.847"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.846" endtime="20220314 17:50:27.847"></status>
</kw>
<msg timestamp="20220314 17:50:27.847" level="INFO">${name_output} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:27.828" endtime="20220314 17:50:27.847"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.branchId</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:27.865" level="INFO">${result} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:27.847" endtime="20220314 17:50:27.865"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.865" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:27.865" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:27.865" endtime="20220314 17:50:27.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.866" endtime="20220314 17:50:27.866"></status>
</kw>
<msg timestamp="20220314 17:50:27.866" level="INFO">${result} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:27.865" endtime="20220314 17:50:27.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:27.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:27.866" endtime="20220314 17:50:27.866"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.866" endtime="20220314 17:50:27.866"></status>
</kw>
<msg timestamp="20220314 17:50:27.866" level="INFO">${branch_output} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:27.847" endtime="20220314 17:50:27.866"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<msg timestamp="20220314 17:50:27.867" level="INFO">${branch_output} = 1939.0</msg>
<status status="PASS" starttime="20220314 17:50:27.867" endtime="20220314 17:50:27.867"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_input}</arg>
<arg>${name_input}</arg>
<arg>${branch_input}</arg>
</arguments>
<assign>
<var>${list_input}</var>
</assign>
<msg timestamp="20220314 17:50:27.867" level="INFO">${list_input} = ['NV22804382', 'xiEi', 1939.0]</msg>
<status status="PASS" starttime="20220314 17:50:27.867" endtime="20220314 17:50:27.867"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_output}</arg>
<arg>${name_output}</arg>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${list_output}</var>
</assign>
<msg timestamp="20220314 17:50:27.867" level="INFO">${list_output} = ['NV22804382', 'xiEi', 1939.0]</msg>
<status status="PASS" starttime="20220314 17:50:27.867" endtime="20220314 17:50:27.867"></status>
</kw>
<kw name="Verify List Input And Output" library="share">
<arguments>
<arg>${list_input}</arg>
<arg>${list_output}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listinput}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:27.868" level="INFO">Length is 3</msg>
<msg timestamp="20220314 17:50:27.868" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.868"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220314 17:50:27.868" level="INFO">${value_input} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.868"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220314 17:50:27.868" level="INFO">${value_output} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.868"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.868"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220314 17:50:27.869" level="INFO">${value_input} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.869"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220314 17:50:27.869" level="INFO">${value_output} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:27.869" endtime="20220314 17:50:27.869"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.869"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220314 17:50:27.869" level="INFO">${value_input} = 1939.0</msg>
<status status="PASS" starttime="20220314 17:50:27.869" endtime="20220314 17:50:27.869"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220314 17:50:27.869" level="INFO">${value_output} = 1939.0</msg>
<status status="PASS" starttime="20220314 17:50:27.869" endtime="20220314 17:50:27.869"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.869" endtime="20220314 17:50:27.870"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.868" endtime="20220314 17:50:27.870"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value_input}</arg>
<arg>${value_output}</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:27.870" endtime="20220314 17:50:27.870"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.867" endtime="20220314 17:50:27.870"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.165" endtime="20220314 17:50:27.870"></status>
</kw>
<msg timestamp="20220314 17:50:27.870" level="INFO">${resp} = None</msg>
<status status="PASS" starttime="20220314 17:50:24.377" endtime="20220314 17:50:27.870"></status>
</kw>
<doc>Tạo mới nhân viên và thiết lập lương ko có mẫu lương</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:24.376" endtime="20220314 17:50:27.870" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Create duplicate employee">
<kw name="Create Duplicate Employee" library="employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:28.519" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220314 17:50:28.519" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:28.519" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:27.874" endtime="20220314 17:50:28.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.520" level="INFO">{'result': {'total': 20, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}, {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:28.520" endtime="20220314 17:50:28.520"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:28.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:28.521" endtime="20220314 17:50:28.521"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:28.521" endtime="20220314 17:50:28.521"></status>
</kw>
<msg timestamp="20220314 17:50:28.521" level="INFO">${resp} = {'result': {'total': 20, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:27.874" endtime="20220314 17:50:28.521"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:28.540" level="INFO">${list} = ['NV429950', 'NV414473', 'NV739389', 'NV200592', 'NV000003', 'NV000002', 'NV794797', 'NV312776', 'NV739399', 'NV739388', 'NV168206', 'NV739397', 'NV739397', 'NV739394', 'NV739395', 'NV739391', 'NV7393...</msg>
<status status="PASS" starttime="20220314 17:50:28.521" endtime="20220314 17:50:28.541"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:28.544" level="INFO">${value} = NV168206</msg>
<status status="PASS" starttime="20220314 17:50:28.541" endtime="20220314 17:50:28.544"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:28.544" endtime="20220314 17:50:28.544"></status>
</kw>
<msg timestamp="20220314 17:50:28.544" level="INFO">${code_employee} = NV168206</msg>
<status status="PASS" starttime="20220314 17:50:27.874" endtime="20220314 17:50:28.544"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.544" level="INFO">${list_format} = ['1235698', 'NV168206', 'xiEi', 1939, 1939]</msg>
<status status="PASS" starttime="20220314 17:50:28.544" endtime="20220314 17:50:28.544"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:28.545" level="INFO">Length is 5</msg>
<msg timestamp="20220314 17:50:28.545" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220314 17:50:28.545" endtime="20220314 17:50:28.545"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.545" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:28.545" endtime="20220314 17:50:28.545"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.546" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:28.545" endtime="20220314 17:50:28.546"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.546" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:28.546" endtime="20220314 17:50:28.546"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.545" endtime="20220314 17:50:28.546"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.546" level="INFO">${value_temp} = NV168206</msg>
<status status="PASS" starttime="20220314 17:50:28.546" endtime="20220314 17:50:28.546"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.546" level="INFO">${value_temp} = NV168206</msg>
<status status="PASS" starttime="20220314 17:50:28.546" endtime="20220314 17:50:28.546"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.547" level="INFO">${data_format} = {"id":1235698,"code":"NV168206","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:28.547" endtime="20220314 17:50:28.547"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.546" endtime="20220314 17:50:28.547"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.547" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:28.547" endtime="20220314 17:50:28.547"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.547" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:28.547" endtime="20220314 17:50:28.547"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.548" level="INFO">${data_format} = {"id":1235698,"code":"NV168206","name":"xiEi","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:28.548" endtime="20220314 17:50:28.548"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.547" endtime="20220314 17:50:28.548"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.548" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:28.548" endtime="20220314 17:50:28.548"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.548" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:28.548" endtime="20220314 17:50:28.548"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.549" level="INFO">${data_format} = {"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:28.548" endtime="20220314 17:50:28.549"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.548" endtime="20220314 17:50:28.549"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.549" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:28.549" endtime="20220314 17:50:28.549"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:28.549" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:28.549" endtime="20220314 17:50:28.549"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:28.549" level="INFO">${data_format} = {"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:28.549" endtime="20220314 17:50:28.550"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.549" endtime="20220314 17:50:28.550"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:28.545" endtime="20220314 17:50:28.550"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:28.550" endtime="20220314 17:50:28.550"></status>
</kw>
<msg timestamp="20220314 17:50:28.550" level="INFO">${data} = {"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:28.544" endtime="20220314 17:50:28.550"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220314 17:50:28.550" level="INFO">${data} = (None, '{"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:28.550" endtime="20220314 17:50:28.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.550" level="INFO">(None, '{"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:28.550" endtime="20220314 17:50:28.550"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220314 17:50:28.551" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:28.550" endtime="20220314 17:50:28.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220314 17:50:28.551" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:28.551" endtime="20220314 17:50:28.551"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:29.006" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV168206","name":"xiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')}, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:29.006" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:29.007" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:28.552" endtime="20220314 17:50:29.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.007" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220314 17:50:29.007" endtime="20220314 17:50:29.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.007" endtime="20220314 17:50:29.008"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.008" endtime="20220314 17:50:29.008"></status>
</kw>
<msg timestamp="20220314 17:50:29.008" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220314 17:50:28.551" endtime="20220314 17:50:29.008"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:29.029" level="INFO">${result} = ['Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220314 17:50:29.009" endtime="20220314 17:50:29.029"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:29.030" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:29.030" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:29.029" endtime="20220314 17:50:29.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:29.030" endtime="20220314 17:50:29.031"></status>
</kw>
<msg timestamp="20220314 17:50:29.031" level="INFO">${result} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220314 17:50:29.030" endtime="20220314 17:50:29.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.031" endtime="20220314 17:50:29.031"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.031" endtime="20220314 17:50:29.031"></status>
</kw>
<msg timestamp="20220314 17:50:29.032" level="INFO">${mess_err} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220314 17:50:29.009" endtime="20220314 17:50:29.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Mã nhân viên đã tồn tại trong cửa hàng</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:29.032" endtime="20220314 17:50:29.032"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:27.874" endtime="20220314 17:50:29.032"></status>
</kw>
<doc>Tạo mới nhân viên trùng mã nhân viên</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:27.870" endtime="20220314 17:50:29.032" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Create empty employee">
<kw name="Create Empty Employee" library="employee">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>\ \</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.034" level="INFO">${list_format} = ['1235698', 'NV22804382', ' ', 1939, 1939]</msg>
<status status="PASS" starttime="20220314 17:50:29.033" endtime="20220314 17:50:29.034"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:29.034" level="INFO">Length is 5</msg>
<msg timestamp="20220314 17:50:29.034" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220314 17:50:29.034" endtime="20220314 17:50:29.034"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.035" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:29.035" endtime="20220314 17:50:29.035"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.035" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220314 17:50:29.035" endtime="20220314 17:50:29.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.036" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:29.036" endtime="20220314 17:50:29.036"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.035" endtime="20220314 17:50:29.036"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.037" level="INFO">${value_temp} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:29.036" endtime="20220314 17:50:29.037"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.037" level="INFO">${value_temp} = NV22804382</msg>
<status status="PASS" starttime="20220314 17:50:29.037" endtime="20220314 17:50:29.037"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.038" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:29.037" endtime="20220314 17:50:29.038"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.036" endtime="20220314 17:50:29.038"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.038" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220314 17:50:29.038" endtime="20220314 17:50:29.038"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.038" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220314 17:50:29.038" endtime="20220314 17:50:29.038"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.039" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":" ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:29.038" endtime="20220314 17:50:29.039"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.038" endtime="20220314 17:50:29.039"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.039" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.039" endtime="20220314 17:50:29.039"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.039" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.039" endtime="20220314 17:50:29.039"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.040" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:29.039" endtime="20220314 17:50:29.040"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.039" endtime="20220314 17:50:29.040"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.040" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.040" endtime="20220314 17:50:29.040"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.040" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.040" endtime="20220314 17:50:29.041"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.041" level="INFO">${data_format} = {"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:29.041" endtime="20220314 17:50:29.041"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.040" endtime="20220314 17:50:29.041"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.034" endtime="20220314 17:50:29.041"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.041" endtime="20220314 17:50:29.041"></status>
</kw>
<msg timestamp="20220314 17:50:29.041" level="INFO">${data} = {"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:29.034" endtime="20220314 17:50:29.042"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220314 17:50:29.042" level="INFO">${data} = (None, '{"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:29.042" endtime="20220314 17:50:29.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.042" level="INFO">(None, '{"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:29.042" endtime="20220314 17:50:29.042"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220314 17:50:29.042" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:29.042" endtime="20220314 17:50:29.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.043" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:29.043" endtime="20220314 17:50:29.043"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:29.211" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV22804382","name":" ","branchId":1939,"userId":null,"workBranchIds":[1939]}')}, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:29.211" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:29.211" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.043" endtime="20220314 17:50:29.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.211" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220314 17:50:29.211" endtime="20220314 17:50:29.211"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.212" endtime="20220314 17:50:29.212"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.212" endtime="20220314 17:50:29.212"></status>
</kw>
<msg timestamp="20220314 17:50:29.212" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPre...</msg>
<status status="PASS" starttime="20220314 17:50:29.043" endtime="20220314 17:50:29.212"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:29.231" level="INFO">${result} = ['Tên nhân viên không được để trống', 'Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220314 17:50:29.213" endtime="20220314 17:50:29.231"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:29.231" level="INFO">Length is 2</msg>
<msg timestamp="20220314 17:50:29.231" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220314 17:50:29.231" endtime="20220314 17:50:29.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:29.232" endtime="20220314 17:50:29.232"></status>
</kw>
<msg timestamp="20220314 17:50:29.232" level="INFO">${result} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220314 17:50:29.231" endtime="20220314 17:50:29.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.232" endtime="20220314 17:50:29.232"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.232" endtime="20220314 17:50:29.232"></status>
</kw>
<msg timestamp="20220314 17:50:29.233" level="INFO">${mess_err} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220314 17:50:29.212" endtime="20220314 17:50:29.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Tên nhân viên không được để trống</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:29.233" endtime="20220314 17:50:29.233"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.033" endtime="20220314 17:50:29.233"></status>
</kw>
<doc>Tạo mới nhân viên rỗng</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:29.032" endtime="20220314 17:50:29.233" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Update employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.234" level="INFO">${list_format} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:29.234" endtime="20220314 17:50:29.234"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:29.234" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:29.234" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:29.234" endtime="20220314 17:50:29.235"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.235" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.235" endtime="20220314 17:50:29.235"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:29.235" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:29.235" endtime="20220314 17:50:29.235"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:29.235" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:29.235" endtime="20220314 17:50:29.235"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.235" endtime="20220314 17:50:29.235"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.235" endtime="20220314 17:50:29.236"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.236" endtime="20220314 17:50:29.236"></status>
</kw>
<msg timestamp="20220314 17:50:29.236" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:29.234" endtime="20220314 17:50:29.236"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.236" endtime="20220314 17:50:29.236"></status>
</kw>
<msg timestamp="20220314 17:50:29.236" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:29.234" endtime="20220314 17:50:29.236"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:29.708" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939, headers=None json=None</msg>
<msg timestamp="20220314 17:50:29.708" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:29.708" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.237" endtime="20220314 17:50:29.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.709" level="INFO">{'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['21'], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['20'], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['15'], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}, {'id': 100212131, 'code': 'NV22804382', 'name': 'xiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:29.708" endtime="20220314 17:50:29.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:29.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.709" endtime="20220314 17:50:29.710"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.710" endtime="20220314 17:50:29.710"></status>
</kw>
<msg timestamp="20220314 17:50:29.711" level="INFO">${resp} = {'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:29.236" endtime="20220314 17:50:29.711"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:29.729" level="INFO">${list} = [100212130, 100212129, 100212000, 100212120, 100211814, 100211811, 100212118, 100212117, 100212019, 100211822, 100212123, 100212014, 100212011, 100212008, 100212006, 100212003, 100212005, 100212004, 1...</msg>
<status status="PASS" starttime="20220314 17:50:29.711" endtime="20220314 17:50:29.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:29.730" level="INFO">${value} = 100212004</msg>
<status status="PASS" starttime="20220314 17:50:29.729" endtime="20220314 17:50:29.730"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:29.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:29.730" endtime="20220314 17:50:29.730"></status>
</kw>
<msg timestamp="20220314 17:50:29.730" level="INFO">${id_employee} = 100212004</msg>
<status status="PASS" starttime="20220314 17:50:29.236" endtime="20220314 17:50:29.730"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:30.221" level="INFO">Get Request using : alias=session, uri=/employees/100212004, headers=None json=None</msg>
<msg timestamp="20220314 17:50:30.221" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:30.222" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:29.731" endtime="20220314 17:50:30.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.223" level="INFO">{'result': {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:30.222" endtime="20220314 17:50:30.223"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:30.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:30.223" endtime="20220314 17:50:30.224"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:30.224" endtime="20220314 17:50:30.225"></status>
</kw>
<msg timestamp="20220314 17:50:30.225" level="INFO">${resp} = {'result': {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationNa...</msg>
<status status="PASS" starttime="20220314 17:50:29.731" endtime="20220314 17:50:30.225"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:30.244" level="INFO">${list} = ['NV739392']</msg>
<status status="PASS" starttime="20220314 17:50:30.225" endtime="20220314 17:50:30.244"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:30.245" level="INFO">${value} = NV739392</msg>
<status status="PASS" starttime="20220314 17:50:30.244" endtime="20220314 17:50:30.245"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:30.245" endtime="20220314 17:50:30.245"></status>
</kw>
<msg timestamp="20220314 17:50:30.245" level="INFO">${code_employee} = NV739392</msg>
<status status="PASS" starttime="20220314 17:50:29.730" endtime="20220314 17:50:30.245"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:30.245" endtime="20220314 17:50:30.245"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:29.234" endtime="20220314 17:50:30.245"></status>
</kw>
<kw name="Update Employee" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>UD${random_number}</arg>
<arg>Update${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:30.246" level="INFO">${list} = [100212131, 'UD22804382', 'UpdatexiEi', 1939, 1939]</msg>
<status status="PASS" starttime="20220314 17:50:30.246" endtime="20220314 17:50:30.246"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:30.246" level="INFO">Length is 5</msg>
<msg timestamp="20220314 17:50:30.246" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220314 17:50:30.246" endtime="20220314 17:50:30.246"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.247" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:30.247" endtime="20220314 17:50:30.247"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.247" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:30.247" endtime="20220314 17:50:30.247"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:30.247" level="INFO">${data_format} = {"id":100212131,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:30.247" endtime="20220314 17:50:30.247"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.247" endtime="20220314 17:50:30.248"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.248" level="INFO">${value_temp} = UD22804382</msg>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.248"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.248" level="INFO">${value_temp} = UD22804382</msg>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.248"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:30.248" level="INFO">${data_format} = {"id":100212131,"code":"UD22804382","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.248"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.248"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.249" level="INFO">${value_temp} = UpdatexiEi</msg>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.249"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.249" level="INFO">${value_temp} = UpdatexiEi</msg>
<status status="PASS" starttime="20220314 17:50:30.249" endtime="20220314 17:50:30.249"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:30.249" level="INFO">${data_format} = {"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:30.249" endtime="20220314 17:50:30.249"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.248" endtime="20220314 17:50:30.249"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.249" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:30.249" endtime="20220314 17:50:30.249"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.250" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:30.250" endtime="20220314 17:50:30.250"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:30.250" level="INFO">${data_format} = {"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220314 17:50:30.250" endtime="20220314 17:50:30.250"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.249" endtime="20220314 17:50:30.250"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.250" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:30.250" endtime="20220314 17:50:30.250"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:30.250" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:30.250" endtime="20220314 17:50:30.251"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:30.251" level="INFO">${data_format} = {"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:30.251" endtime="20220314 17:50:30.251"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.250" endtime="20220314 17:50:30.251"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.247" endtime="20220314 17:50:30.251"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:30.251" endtime="20220314 17:50:30.251"></status>
</kw>
<msg timestamp="20220314 17:50:30.251" level="INFO">${data} = {"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}</msg>
<status status="PASS" starttime="20220314 17:50:30.246" endtime="20220314 17:50:30.251"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220314 17:50:30.252" level="INFO">${data} = (None, '{"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')</msg>
<status status="PASS" starttime="20220314 17:50:30.252" endtime="20220314 17:50:30.252"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220314 17:50:30.252" level="INFO">${formdata} = {'employee': (None, '{"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:30.252" endtime="20220314 17:50:30.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220314 17:50:30.252" level="INFO">{'employee': (None, '{"id":100212131,"code":"UD22804382","name":"UpdatexiEi","branchId":1939,"userId":null,"workBranchIds":[1939]}')}</msg>
<status status="PASS" starttime="20220314 17:50:30.252" endtime="20220314 17:50:30.252"></status>
</kw>
<kw name="Update Request Json KV Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:33.109" level="INFO">Put Request using : alias=session, uri=/employees/100212131, data=None,                     headers={'retailer': 'phuocnew441', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'}, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:33.110" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:33.110" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:30.253" endtime="20220314 17:50:33.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.110" level="INFO">{'result': {'id': 100212131, 'code': 'UD22804382', 'name': 'UpdatexiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T17:50:31.1529148+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'workBranchIds': [1939], 'employeeBranches': []}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:33.110" endtime="20220314 17:50:33.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.110" endtime="20220314 17:50:33.110"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.111" endtime="20220314 17:50:33.111"></status>
</kw>
<msg timestamp="20220314 17:50:33.111" level="INFO">${resp} = {'result': {'id': 100212131, 'code': 'UD22804382', 'name': 'UpdatexiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'war...</msg>
<status status="PASS" starttime="20220314 17:50:30.252" endtime="20220314 17:50:33.111"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:30.245" endtime="20220314 17:50:33.111"></status>
</kw>
<doc>Cập nhật nhân viên</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:29.233" endtime="20220314 17:50:33.111" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Get pin code">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:33.112" level="INFO">${list_format} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:33.112" endtime="20220314 17:50:33.112"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:33.113" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:33.113" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.113"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.113" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.113"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.113" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.113"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:33.114" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.114"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.114"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.113" endtime="20220314 17:50:33.114"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.114" endtime="20220314 17:50:33.114"></status>
</kw>
<msg timestamp="20220314 17:50:33.114" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:33.112" endtime="20220314 17:50:33.114"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.114" endtime="20220314 17:50:33.114"></status>
</kw>
<msg timestamp="20220314 17:50:33.114" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:33.112" endtime="20220314 17:50:33.115"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:33.517" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939, headers=None json=None</msg>
<msg timestamp="20220314 17:50:33.517" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:33.517" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.115" endtime="20220314 17:50:33.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.518" level="INFO">{'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['21'], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['20'], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['15'], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212131, 'code': 'UD22804382', 'name': 'UpdatexiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T17:50:31.1520000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:33.518" endtime="20220314 17:50:33.518"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:33.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.519" endtime="20220314 17:50:33.519"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.519" endtime="20220314 17:50:33.519"></status>
</kw>
<msg timestamp="20220314 17:50:33.520" level="INFO">${resp} = {'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:33.115" endtime="20220314 17:50:33.520"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:33.538" level="INFO">${list} = [100212130, 100212129, 100212000, 100212120, 100211814, 100211811, 100212118, 100212117, 100212019, 100211822, 100212123, 100212014, 100212011, 100212008, 100212006, 100212003, 100212131, 100212005, 1...</msg>
<status status="PASS" starttime="20220314 17:50:33.520" endtime="20220314 17:50:33.538"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:33.539" level="INFO">${value} = 100212008</msg>
<status status="PASS" starttime="20220314 17:50:33.539" endtime="20220314 17:50:33.539"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.539" endtime="20220314 17:50:33.540"></status>
</kw>
<msg timestamp="20220314 17:50:33.540" level="INFO">${id_employee} = 100212008</msg>
<status status="PASS" starttime="20220314 17:50:33.115" endtime="20220314 17:50:33.540"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:33.808" level="INFO">Get Request using : alias=session, uri=/employees/100212008, headers=None json=None</msg>
<msg timestamp="20220314 17:50:33.808" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:33.808" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.540" endtime="20220314 17:50:33.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.809" level="INFO">{'result': {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:33.808" endtime="20220314 17:50:33.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:33.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.809" endtime="20220314 17:50:33.809"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.809" endtime="20220314 17:50:33.809"></status>
</kw>
<msg timestamp="20220314 17:50:33.810" level="INFO">${resp} = {'result': {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName':...</msg>
<status status="PASS" starttime="20220314 17:50:33.540" endtime="20220314 17:50:33.810"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:33.831" level="INFO">${list} = ['NV739395']</msg>
<status status="PASS" starttime="20220314 17:50:33.810" endtime="20220314 17:50:33.831"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:33.832" level="INFO">${value} = NV739395</msg>
<status status="PASS" starttime="20220314 17:50:33.831" endtime="20220314 17:50:33.832"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.832" endtime="20220314 17:50:33.832"></status>
</kw>
<msg timestamp="20220314 17:50:33.833" level="INFO">${code_employee} = NV739395</msg>
<status status="PASS" starttime="20220314 17:50:33.540" endtime="20220314 17:50:33.833"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.833" endtime="20220314 17:50:33.833"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.112" endtime="20220314 17:50:33.833"></status>
</kw>
<kw name="Get Pin Code" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${user_login}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:33.833" level="INFO">${list} = [100212131, 10997]</msg>
<status status="PASS" starttime="20220314 17:50:33.833" endtime="20220314 17:50:33.833"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_pin_code}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${enp_pin_code}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:33.834" level="INFO">Length is 2</msg>
<msg timestamp="20220314 17:50:33.834" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220314 17:50:33.834" endtime="20220314 17:50:33.834"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.834" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:33.834" endtime="20220314 17:50:33.834"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.834" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:33.834" endtime="20220314 17:50:33.834"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:33.835" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=100212131&amp;UserId=[D1]</msg>
<status status="PASS" starttime="20220314 17:50:33.835" endtime="20220314 17:50:33.835"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.834" endtime="20220314 17:50:33.835"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.835" level="INFO">${value_temp} = 10997</msg>
<status status="PASS" starttime="20220314 17:50:33.835" endtime="20220314 17:50:33.835"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:33.835" level="INFO">${value_temp} = 10997</msg>
<status status="PASS" starttime="20220314 17:50:33.835" endtime="20220314 17:50:33.835"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:33.836" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=100212131&amp;UserId=10997</msg>
<status status="PASS" starttime="20220314 17:50:33.835" endtime="20220314 17:50:33.836"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.835" endtime="20220314 17:50:33.836"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.834" endtime="20220314 17:50:33.836"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:33.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:33.836" endtime="20220314 17:50:33.836"></status>
</kw>
<msg timestamp="20220314 17:50:33.836" level="INFO">${enp_pin_code} = /employees/two-fa-pin?EmployeeId=100212131&amp;UserId=10997</msg>
<status status="PASS" starttime="20220314 17:50:33.833" endtime="20220314 17:50:33.836"></status>
</kw>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_pin_code}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:34.207" level="INFO">Get Request using : alias=session, uri=/employees/two-fa-pin?EmployeeId=100212131&amp;UserId=10997, headers=None json=None</msg>
<msg timestamp="20220314 17:50:34.207" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:34.207" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:33.836" endtime="20220314 17:50:34.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:34.207" level="INFO">{'result': {'pin': '266724'}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:34.207" endtime="20220314 17:50:34.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:34.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:34.208" endtime="20220314 17:50:34.208"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:34.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:34.208" endtime="20220314 17:50:34.208"></status>
</kw>
<msg timestamp="20220314 17:50:34.208" level="INFO">${resp} = {'result': {'pin': '266724'}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:33.836" endtime="20220314 17:50:34.208"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:33.833" endtime="20220314 17:50:34.208"></status>
</kw>
<doc>Lấy mã xác nhận cho chấm công gps</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:33.111" endtime="20220314 17:50:34.208" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Add work schedule">
<kw name="Add Work Schedule" library="employee">
<kw name="Format enp shift branch" library="shift">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.210" level="INFO">${list_format} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:34.210" endtime="20220314 17:50:34.210"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_shift_branch}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:34.210" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:34.210" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:34.210" endtime="20220314 17:50:34.211"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.211" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:34.211" endtime="20220314 17:50:34.211"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.211" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:34.211" endtime="20220314 17:50:34.211"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.211" level="INFO">${data_format} = /shifts/multiple-branch/orderby-from-to?BranchIds=1939&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220314 17:50:34.211" endtime="20220314 17:50:34.211"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.211" endtime="20220314 17:50:34.212"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.211" endtime="20220314 17:50:34.212"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:34.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:34.212" endtime="20220314 17:50:34.212"></status>
</kw>
<msg timestamp="20220314 17:50:34.212" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=1939&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220314 17:50:34.210" endtime="20220314 17:50:34.212"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${enp_shift_branch}</arg>
</arguments>
<msg timestamp="20220314 17:50:34.212" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=1939&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220314 17:50:34.212" endtime="20220314 17:50:34.212"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.209" endtime="20220314 17:50:34.213"></status>
</kw>
<kw name="Create Shift" library="shift">
<arguments>
<arg>123456</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp_shift}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id}</arg>
<arg>${name}</arg>
<arg>${branch_id}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.213" level="INFO">${list_format} = ['123456', 'xiEi', 1939]</msg>
<status status="PASS" starttime="20220314 17:50:34.213" endtime="20220314 17:50:34.213"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_shift}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_shift}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:34.214" level="INFO">Length is 3</msg>
<msg timestamp="20220314 17:50:34.214" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220314 17:50:34.214" endtime="20220314 17:50:34.214"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.214" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220314 17:50:34.214" endtime="20220314 17:50:34.214"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.215" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220314 17:50:34.214" endtime="20220314 17:50:34.215"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.215" level="INFO">${data_format} = {"shift":{"id":123456,"name":"[D1]","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220314 17:50:34.215" endtime="20220314 17:50:34.215"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.214" endtime="20220314 17:50:34.215"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.216" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:34.215" endtime="20220314 17:50:34.216"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.216" level="INFO">${value_temp} = xiEi</msg>
<status status="PASS" starttime="20220314 17:50:34.216" endtime="20220314 17:50:34.216"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.216" level="INFO">${data_format} = {"shift":{"id":123456,"name":"xiEi","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220314 17:50:34.216" endtime="20220314 17:50:34.216"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.215" endtime="20220314 17:50:34.216"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.217" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:34.216" endtime="20220314 17:50:34.217"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:34.217" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:34.217" endtime="20220314 17:50:34.217"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:34.217" level="INFO">${data_format} = {"shift":{"id":123456,"name":"xiEi","from":420,"to":660,"isActive":true,"branchId":1939,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220314 17:50:34.217" endtime="20220314 17:50:34.217"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.216" endtime="20220314 17:50:34.217"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.214" endtime="20220314 17:50:34.217"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:34.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:34.217" endtime="20220314 17:50:34.217"></status>
</kw>
<msg timestamp="20220314 17:50:34.218" level="INFO">${data_shift} = {"shift":{"id":123456,"name":"xiEi","from":420,"to":660,"isActive":true,"branchId":1939,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220314 17:50:34.213" endtime="20220314 17:50:34.218"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}</arg>
<arg>${data_shift}</arg>
<arg>${expected_statusCode}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:35.057" level="INFO">Post Request using : alias=session, uri=/shifts, data={"shift":{"id":123456,"name":"xiEi","from":420,"to":660,"isActive":true,"branchId":1939,"checkInBefore":240,"checkOutAfter":840}}, headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:35.057" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:35.057" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:34.218" endtime="20220314 17:50:35.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.057" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:35.057" endtime="20220314 17:50:35.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.057" endtime="20220314 17:50:35.058"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.058" endtime="20220314 17:50:35.058"></status>
</kw>
<msg timestamp="20220314 17:50:35.058" level="INFO">${resp} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:34.218" endtime="20220314 17:50:35.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.058" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:35.058" endtime="20220314 17:50:35.058"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.058" endtime="20220314 17:50:35.058"></status>
</kw>
<msg timestamp="20220314 17:50:35.059" level="INFO">${resp_shift} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:34.213" endtime="20220314 17:50:35.059"></status>
</kw>
<kw name="Get RanDom ID Shift And Get Name From ID" library="shift">
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift_branch}</arg>
<arg>$..result[?(@.isActive==true)].id</arg>
</arguments>
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:35.188" level="INFO">Get Request using : alias=session, uri=/shifts/multiple-branch/orderby-from-to?BranchIds=1939&amp;ShiftIds=, headers=None json=None</msg>
<msg timestamp="20220314 17:50:35.188" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:35.188" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.059" endtime="20220314 17:50:35.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.188" level="INFO">{'result': [{'id': 5413, 'name': 'xiEi', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5412, 'name': 'ZVvT', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5411, 'name': 'AutoYIoM', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5410, 'name': 'oTSw', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5409, 'name': 'Uvks', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5408, 'name': 'Mlvd', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5407, 'name': 'QeEy', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5406, 'name': 'mibm', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5404, 'name': 'AutonWtP', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5403, 'name': 'AxGo', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5209, 'name': 'UpdateZVvT', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5204, 'name': 'UpdateUvks', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 5208, 'name': 'UpdateObyU', 'from': 480, 'oldFrom': 0, 'to': 720, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 300, 'checkOutAfter': 900}, {'id': 5207, 'name': 'ca 2', 'from': 840, 'oldFrom': 0, 'to': 1020, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 600, 'checkOutAfter': 1200}], 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:35.188" endtime="20220314 17:50:35.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:35.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.188" endtime="20220314 17:50:35.189"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.189" endtime="20220314 17:50:35.189"></status>
</kw>
<msg timestamp="20220314 17:50:35.189" level="INFO">${resp} = {'result': [{'id': 5413, 'name': 'xiEi', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id'...</msg>
<status status="PASS" starttime="20220314 17:50:35.059" endtime="20220314 17:50:35.189"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:35.207" level="INFO">${list} = [5413, 5412, 5411, 5410, 5409, 5408, 5407, 5406, 5404, 5403, 5209, 5204, 5208, 5207]</msg>
<status status="PASS" starttime="20220314 17:50:35.189" endtime="20220314 17:50:35.207"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:35.208" level="INFO">${value} = 5410</msg>
<status status="PASS" starttime="20220314 17:50:35.207" endtime="20220314 17:50:35.208"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.208" endtime="20220314 17:50:35.208"></status>
</kw>
<msg timestamp="20220314 17:50:35.208" level="INFO">${id_shift} = 5410</msg>
<status status="PASS" starttime="20220314 17:50:35.059" endtime="20220314 17:50:35.208"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}/${id_shift}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${name_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:35.322" level="INFO">Get Request using : alias=session, uri=/shifts/5410, headers=None json=None</msg>
<msg timestamp="20220314 17:50:35.323" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:35.323" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.209" endtime="20220314 17:50:35.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.324" level="INFO">{'result': {'id': 5410, 'name': 'oTSw', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:35.323" endtime="20220314 17:50:35.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:35.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.325" endtime="20220314 17:50:35.325"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.325" endtime="20220314 17:50:35.326"></status>
</kw>
<msg timestamp="20220314 17:50:35.326" level="INFO">${resp} = {'result': {'id': 5410, 'name': 'oTSw', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 1939, 'tenantId': 200001091, 'checkInBefore': 240, 'checkOutAfter': 840}, 'messa...</msg>
<status status="PASS" starttime="20220314 17:50:35.208" endtime="20220314 17:50:35.326"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:35.344" level="INFO">${result} = ['oTSw']</msg>
<status status="PASS" starttime="20220314 17:50:35.326" endtime="20220314 17:50:35.344"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:35.344" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:35.344" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:35.344" endtime="20220314 17:50:35.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:35.345" endtime="20220314 17:50:35.345"></status>
</kw>
<msg timestamp="20220314 17:50:35.345" level="INFO">${result} = oTSw</msg>
<status status="PASS" starttime="20220314 17:50:35.344" endtime="20220314 17:50:35.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.345" endtime="20220314 17:50:35.345"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.345" endtime="20220314 17:50:35.345"></status>
</kw>
<msg timestamp="20220314 17:50:35.345" level="INFO">${value} = oTSw</msg>
<status status="PASS" starttime="20220314 17:50:35.326" endtime="20220314 17:50:35.345"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.345" endtime="20220314 17:50:35.346"></status>
</kw>
<msg timestamp="20220314 17:50:35.346" level="INFO">${name_shift} = oTSw</msg>
<status status="PASS" starttime="20220314 17:50:35.208" endtime="20220314 17:50:35.346"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_shift}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.346" endtime="20220314 17:50:35.346"></status>
</kw>
<msg timestamp="20220314 17:50:35.346" level="INFO">${id_shift} = 5410</msg>
<status status="PASS" starttime="20220314 17:50:35.059" endtime="20220314 17:50:35.346"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>12-12-2021</arg>
<arg>12-01-2022</arg>
<arg>${id_employee}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>${id_shift}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.346" level="INFO">${list_format} = ['12-12-2021', '12-01-2022', 100212131, 1939, 1939, 5410]</msg>
<status status="PASS" starttime="20220314 17:50:35.346" endtime="20220314 17:50:35.346"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_add_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:35.347" level="INFO">Length is 6</msg>
<msg timestamp="20220314 17:50:35.347" level="INFO">${length} = 6</msg>
<status status="PASS" starttime="20220314 17:50:35.347" endtime="20220314 17:50:35.347"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.347" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220314 17:50:35.347" endtime="20220314 17:50:35.347"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.348" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220314 17:50:35.347" endtime="20220314 17:50:35.348"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.348" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"[D1]","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts":[{"sh...</msg>
<status status="PASS" starttime="20220314 17:50:35.348" endtime="20220314 17:50:35.348"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.347" endtime="20220314 17:50:35.348"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.348" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220314 17:50:35.348" endtime="20220314 17:50:35.348"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.348" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220314 17:50:35.348" endtime="20220314 17:50:35.348"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.349" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts"...</msg>
<status status="PASS" starttime="20220314 17:50:35.348" endtime="20220314 17:50:35.349"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.348" endtime="20220314 17:50:35.349"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.349" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:35.349" endtime="20220314 17:50:35.349"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.349" level="INFO">${value_temp} = 100212131</msg>
<status status="PASS" starttime="20220314 17:50:35.349" endtime="20220314 17:50:35.349"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.349" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetSh...</msg>
<status status="PASS" starttime="20220314 17:50:35.349" endtime="20220314 17:50:35.349"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.349" endtime="20220314 17:50:35.349"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.350" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.350"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.350" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.350"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.350" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":1939,"branchIds":[[D4]],"timeSheetSh...</msg>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.350"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.350"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.351" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.351"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.351" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:35.351" endtime="20220314 17:50:35.351"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.351" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":1939,"branchIds":[1939],"timeSheetSh...</msg>
<status status="PASS" starttime="20220314 17:50:35.351" endtime="20220314 17:50:35.351"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.350" endtime="20220314 17:50:35.351"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.352" level="INFO">${value_temp} = 5410</msg>
<status status="PASS" starttime="20220314 17:50:35.351" endtime="20220314 17:50:35.352"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:35.352" level="INFO">${value_temp} = 5410</msg>
<status status="PASS" starttime="20220314 17:50:35.352" endtime="20220314 17:50:35.352"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:35.352" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":1939,"branchIds":[1939],"timeSheetSh...</msg>
<status status="PASS" starttime="20220314 17:50:35.352" endtime="20220314 17:50:35.352"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.351" endtime="20220314 17:50:35.352"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:35.347" endtime="20220314 17:50:35.352"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:35.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:35.352" endtime="20220314 17:50:35.353"></status>
</kw>
<msg timestamp="20220314 17:50:35.353" level="INFO">${data} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":1939,"branchIds":[1939],"timeSheetSh...</msg>
<status status="PASS" starttime="20220314 17:50:35.346" endtime="20220314 17:50:35.353"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_add_work_schedule}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:36.759" level="INFO">Post Request using : alias=session, uri=/timesheets, data={"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100212131,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":1939,"branchIds":[1939],"timeSheetShifts":[{"shiftIds":"5410","repeatDaysOfWeek":null}]}}, headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:36.759" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:36.760" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:35.353" endtime="20220314 17:50:36.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.760" level="INFO">{'result': {'id': 55019, 'employeeId': 100212131, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'saveOnDaysOffOfBranch': False, 'saveOnHoliday': False, 'timeSheetStatus': 1, 'clockings': [{'id': 47923, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-12T07:00:00.0000000', 'endTime': '2021-12-12T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47924, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-13T07:00:00.0000000', 'endTime': '2021-12-13T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47925, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-14T07:00:00.0000000', 'endTime': '2021-12-14T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47926, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-15T07:00:00.0000000', 'endTime': '2021-12-15T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47927, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-16T07:00:00.0000000', 'endTime': '2021-12-16T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47928, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-17T07:00:00.0000000', 'endTime': '2021-12-17T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47929, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-18T07:00:00.0000000', 'endTime': '2021-12-18T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47930, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-19T07:00:00.0000000', 'endTime': '2021-12-19T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47931, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-20T07:00:00.0000000', 'endTime': '2021-12-20T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47932, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-21T07:00:00.0000000', 'endTime': '2021-12-21T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47933, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-22T07:00:00.0000000', 'endTime': '2021-12-22T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47934, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-23T07:00:00.0000000', 'endTime': '2021-12-23T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47935, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-24T07:00:00.0000000', 'endTime': '2021-12-24T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47936, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-25T07:00:00.0000000', 'endTime': '2021-12-25T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47937, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-26T07:00:00.0000000', 'endTime': '2021-12-26T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47938, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-27T07:00:00.0000000', 'endTime': '2021-12-27T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47939, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-28T07:00:00.0000000', 'endTime': '2021-12-28T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47940, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-29T07:00:00.0000000', 'endTime': '2021-12-29T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47941, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-30T07:00:00.0000000', 'endTime': '2021-12-30T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47942, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2021-12-31T07:00:00.0000000', 'endTime': '2021-12-31T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47943, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-01T07:00:00.0000000', 'endTime': '2022-01-01T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47944, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-02T07:00:00.0000000', 'endTime': '2022-01-02T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47945, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-03T07:00:00.0000000', 'endTime': '2022-01-03T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47946, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-04T07:00:00.0000000', 'endTime': '2022-01-04T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47947, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-05T07:00:00.0000000', 'endTime': '2022-01-05T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47948, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-06T07:00:00.0000000', 'endTime': '2022-01-06T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47949, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-07T07:00:00.0000000', 'endTime': '2022-01-07T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47950, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-08T07:00:00.0000000', 'endTime': '2022-01-08T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47951, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-09T07:00:00.0000000', 'endTime': '2022-01-09T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47952, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-10T07:00:00.0000000', 'endTime': '2022-01-10T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47953, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-11T07:00:00.0000000', 'endTime': '2022-01-11T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47954, 'timeSheetId': 55019, 'shiftId': 5410, 'employeeId': 100212131, 'workById': 100212131, 'clockingStatus': 1, 'startTime': '2022-01-12T07:00:00.0000000', 'endTime': '2022-01-12T11:00:00.0000000', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:36.2800000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'timeSheetShifts': [{'id': -9223372036854774789, 'shiftIds': '5410', 'timeSheetShiftStatus': 0, 'timeSheetId': 55019}], 'hasEndDate': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:36.760" endtime="20220314 17:50:36.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:36.761" endtime="20220314 17:50:36.761"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:36.761" endtime="20220314 17:50:36.761"></status>
</kw>
<msg timestamp="20220314 17:50:36.761" level="INFO">${resp} = {'result': {'id': 55019, 'employeeId': 100212131, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId...</msg>
<status status="PASS" starttime="20220314 17:50:35.353" endtime="20220314 17:50:36.762"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_work_schedule}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:36.779" level="INFO">${result} = [55019]</msg>
<status status="PASS" starttime="20220314 17:50:36.762" endtime="20220314 17:50:36.779"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:36.779" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:36.779" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:36.779" endtime="20220314 17:50:36.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:36.780" endtime="20220314 17:50:36.780"></status>
</kw>
<msg timestamp="20220314 17:50:36.780" level="INFO">${result} = 55019</msg>
<status status="PASS" starttime="20220314 17:50:36.779" endtime="20220314 17:50:36.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:36.780" endtime="20220314 17:50:36.780"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:36.780" endtime="20220314 17:50:36.780"></status>
</kw>
<msg timestamp="20220314 17:50:36.781" level="INFO">${id_work_schedule} = 55019</msg>
<status status="PASS" starttime="20220314 17:50:36.762" endtime="20220314 17:50:36.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
<arg>${id_work_schedule}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.781" level="INFO">${id_work_schedule} = 55019</msg>
<status status="PASS" starttime="20220314 17:50:36.781" endtime="20220314 17:50:36.781"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:34.209" endtime="20220314 17:50:36.781"></status>
</kw>
<doc>Thêm lịch làm việc cho nhân viên tại MH nhân viên</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:34.209" endtime="20220314 17:50:36.781" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Delete work schedule">
<kw name="Delete Work Schedule" library="employee">
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:36.782" level="INFO">${list_format} = [55019]</msg>
<status status="PASS" starttime="20220314 17:50:36.782" endtime="20220314 17:50:36.782"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_del_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_del_work_schedule}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:36.783" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:36.783" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:36.783" endtime="20220314 17:50:36.783"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:36.783" level="INFO">${value_temp} = 55019</msg>
<status status="PASS" starttime="20220314 17:50:36.783" endtime="20220314 17:50:36.783"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:36.783" level="INFO">${value_temp} = 55019</msg>
<status status="PASS" starttime="20220314 17:50:36.783" endtime="20220314 17:50:36.783"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:36.784" level="INFO">${data_format} = {"Id":55019}</msg>
<status status="PASS" starttime="20220314 17:50:36.784" endtime="20220314 17:50:36.784"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:36.783" endtime="20220314 17:50:36.784"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:36.783" endtime="20220314 17:50:36.784"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:36.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:36.784" endtime="20220314 17:50:36.784"></status>
</kw>
<msg timestamp="20220314 17:50:36.784" level="INFO">${data_del_work_schedule} = {"Id":55019}</msg>
<status status="PASS" starttime="20220314 17:50:36.782" endtime="20220314 17:50:36.784"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_delete_work_schedule}</arg>
<arg>${data_del_work_schedule}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:37.836" level="INFO">Put Request using : alias=session, uri=/timesheets/cancelTimeSheet, data={"Id":55019},                     headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'}, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:37.836" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:37.837" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:36.784" endtime="20220314 17:50:37.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.838" level="INFO">{'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:37.837" endtime="20220314 17:50:37.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:37.839" endtime="20220314 17:50:37.839"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:37.839" endtime="20220314 17:50:37.839"></status>
</kw>
<msg timestamp="20220314 17:50:37.839" level="INFO">${resp} = {'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:36.784" endtime="20220314 17:50:37.839"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_validate}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:37.857" level="INFO">${result} = ['Hủy lịch làm việc thành công']</msg>
<status status="PASS" starttime="20220314 17:50:37.840" endtime="20220314 17:50:37.857"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:37.857" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:37.858" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:37.857" endtime="20220314 17:50:37.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:37.858" endtime="20220314 17:50:37.858"></status>
</kw>
<msg timestamp="20220314 17:50:37.858" level="INFO">${result} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220314 17:50:37.858" endtime="20220314 17:50:37.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:37.858" endtime="20220314 17:50:37.859"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:37.858" endtime="20220314 17:50:37.859"></status>
</kw>
<msg timestamp="20220314 17:50:37.859" level="INFO">${mess_validate} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220314 17:50:37.839" endtime="20220314 17:50:37.859"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_validate}</arg>
<arg>Hủy lịch làm việc thành công</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:37.859" endtime="20220314 17:50:37.859"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:36.782" endtime="20220314 17:50:37.859"></status>
</kw>
<doc>Xóa lịch làm việc của nhân viên tại tab lịch làm việc của màn hình nhân viên</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:36.781" endtime="20220314 17:50:37.859" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Delete Employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220314 17:50:37.860" level="INFO">${list_format} = [1939]</msg>
<status status="PASS" starttime="20220314 17:50:37.860" endtime="20220314 17:50:37.860"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:37.860" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:37.860" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:37.860" endtime="20220314 17:50:37.860"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:37.861" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:37.861" endtime="20220314 17:50:37.861"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:37.861" level="INFO">${value_temp} = 1939</msg>
<status status="PASS" starttime="20220314 17:50:37.861" endtime="20220314 17:50:37.861"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:37.861" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:37.861" endtime="20220314 17:50:37.861"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:37.861" endtime="20220314 17:50:37.861"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:37.861" endtime="20220314 17:50:37.861"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:37.862" endtime="20220314 17:50:37.862"></status>
</kw>
<msg timestamp="20220314 17:50:37.862" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:37.860" endtime="20220314 17:50:37.862"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:37.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:37.862" endtime="20220314 17:50:37.862"></status>
</kw>
<msg timestamp="20220314 17:50:37.862" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939</msg>
<status status="PASS" starttime="20220314 17:50:37.860" endtime="20220314 17:50:37.862"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:38.206" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1939, headers=None json=None</msg>
<msg timestamp="20220314 17:50:38.206" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:38.206" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:37.863" endtime="20220314 17:50:38.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.207" level="INFO">{'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['21'], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['20'], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['15'], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212131, 'code': 'UD22804382', 'name': 'UpdatexiEi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:25.8570000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T17:50:34.4480000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7637, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212131}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:38.207" endtime="20220314 17:50:38.207"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:38.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:38.207" endtime="20220314 17:50:38.208"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:38.208" endtime="20220314 17:50:38.208"></status>
</kw>
<msg timestamp="20220314 17:50:38.208" level="INFO">${resp} = {'result': {'total': 20, 'data': [{'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:37.862" endtime="20220314 17:50:38.208"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:38.226" level="INFO">${list} = [100212130, 100212129, 100212000, 100212120, 100211814, 100211811, 100212118, 100212117, 100212019, 100211822, 100212123, 100212014, 100212011, 100212008, 100212006, 100212003, 100212131, 100212005, 1...</msg>
<status status="PASS" starttime="20220314 17:50:38.208" endtime="20220314 17:50:38.226"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:38.227" level="INFO">${value} = 100212019</msg>
<status status="PASS" starttime="20220314 17:50:38.226" endtime="20220314 17:50:38.227"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:38.227" endtime="20220314 17:50:38.227"></status>
</kw>
<msg timestamp="20220314 17:50:38.227" level="INFO">${id_employee} = 100212019</msg>
<status status="PASS" starttime="20220314 17:50:37.862" endtime="20220314 17:50:38.227"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:38.420" level="INFO">Get Request using : alias=session, uri=/employees/100212019, headers=None json=None</msg>
<msg timestamp="20220314 17:50:38.420" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:38.421" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:38.228" endtime="20220314 17:50:38.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.421" level="INFO">{'result': {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'clockings': [{'id': 37942, 'shiftId': 5204, 'timeSheetId': 54007, 'employeeId': 100212019, 'workById': 100212019, 'clockingStatus': 3, 'startTime': '2022-03-14T11:00:00.0000000', 'endTime': '2022-03-14T14:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'checkInDate': '2022-03-14T10:44:56.0000000', 'checkOutDate': '2022-03-14T14:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 37943, 'shiftId': 5207, 'timeSheetId': 54007, 'employeeId': 100212019, 'workById': 100212019, 'clockingStatus': 3, 'startTime': '2022-03-14T14:00:00.0000000', 'endTime': '2022-03-14T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'checkInDate': '2022-03-14T14:00:00.0000000', 'checkOutDate': '2022-03-14T17:43:10.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 13, 'clockingPaymentStatus': 1}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:38.421" endtime="20220314 17:50:38.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:38.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:38.421" endtime="20220314 17:50:38.422"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:38.422" endtime="20220314 17:50:38.422"></status>
</kw>
<msg timestamp="20220314 17:50:38.423" level="INFO">${resp} = {'result': {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'l...</msg>
<status status="PASS" starttime="20220314 17:50:38.228" endtime="20220314 17:50:38.423"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:38.445" level="INFO">${list} = ['NV739399']</msg>
<status status="PASS" starttime="20220314 17:50:38.423" endtime="20220314 17:50:38.445"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:38.446" level="INFO">${value} = NV739399</msg>
<status status="PASS" starttime="20220314 17:50:38.445" endtime="20220314 17:50:38.446"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:38.446" endtime="20220314 17:50:38.446"></status>
</kw>
<msg timestamp="20220314 17:50:38.447" level="INFO">${code_employee} = NV739399</msg>
<status status="PASS" starttime="20220314 17:50:38.228" endtime="20220314 17:50:38.447"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220314 17:50:38.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:38.447" endtime="20220314 17:50:38.447"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:37.860" endtime="20220314 17:50:38.447"></status>
</kw>
<kw name="Delete Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>200</arg>
</arguments>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:39.127" level="INFO">Delete Request using : alias=session, uri=/employees/100212131, data=(),                     headers=None, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:39.127" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:39.128" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:38.447" endtime="20220314 17:50:39.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.128" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:39.128" endtime="20220314 17:50:39.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.128" endtime="20220314 17:50:39.128"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.128" endtime="20220314 17:50:39.128"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:38.447" endtime="20220314 17:50:39.129"></status>
</kw>
<doc>Xóa 1 nhân viên</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:37.859" endtime="20220314 17:50:39.129" critical="yes"></status>
</test>
<test id="s1-s1-s1-t9" name="Delete multiple employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${EmployeeId1}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:39.234" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220314 17:50:39.234" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:39.234" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.130" endtime="20220314 17:50:39.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.235" level="INFO">{'result': {'total': 19, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:39.234" endtime="20220314 17:50:39.235"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:39.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.235" endtime="20220314 17:50:39.235"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.235" endtime="20220314 17:50:39.236"></status>
</kw>
<msg timestamp="20220314 17:50:39.236" level="INFO">${resp} = {'result': {'total': 19, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:39.129" endtime="20220314 17:50:39.236"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:39.254" level="INFO">${list} = [100212129, 100212130, 100212000, 100212120, 100211814, 100211811, 100212117, 100212118, 100212019, 100211822, 100212123, 100212011, 100212014, 100212006, 100212008, 100212003, 100212004, 100212005, 1...</msg>
<status status="PASS" starttime="20220314 17:50:39.236" endtime="20220314 17:50:39.254"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:39.255" level="INFO">${value} = 100212130</msg>
<status status="PASS" starttime="20220314 17:50:39.254" endtime="20220314 17:50:39.255"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.255" endtime="20220314 17:50:39.255"></status>
</kw>
<msg timestamp="20220314 17:50:39.255" level="INFO">${EmployeeId1} = 100212130</msg>
<status status="PASS" starttime="20220314 17:50:39.129" endtime="20220314 17:50:39.255"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${EmployeeId1}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee1}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:39.364" level="INFO">Get Request using : alias=session, uri=/employees/100212130, headers=None json=None</msg>
<msg timestamp="20220314 17:50:39.364" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:39.365" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.256" endtime="20220314 17:50:39.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.366" level="INFO">{'result': {'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000+07:00', 'isDeleted': False, 'clockings': [{'id': 47837, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-02T07:00:00.0000000+07:00', 'endTime': '2022-02-02T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47838, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-03T07:00:00.0000000+07:00', 'endTime': '2022-02-03T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47839, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-04T07:00:00.0000000+07:00', 'endTime': '2022-02-04T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47840, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-05T07:00:00.0000000+07:00', 'endTime': '2022-02-05T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47841, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-06T07:00:00.0000000+07:00', 'endTime': '2022-02-06T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47842, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-07T07:00:00.0000000+07:00', 'endTime': '2022-02-07T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47843, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-08T07:00:00.0000000+07:00', 'endTime': '2022-02-08T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47844, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-09T07:00:00.0000000+07:00', 'endTime': '2022-02-09T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47845, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-10T07:00:00.0000000+07:00', 'endTime': '2022-02-10T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47846, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-11T07:00:00.0000000+07:00', 'endTime': '2022-02-11T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47847, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-12T07:00:00.0000000+07:00', 'endTime': '2022-02-12T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47848, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-13T07:00:00.0000000+07:00', 'endTime': '2022-02-13T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47849, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-14T07:00:00.0000000+07:00', 'endTime': '2022-02-14T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47850, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-15T07:00:00.0000000+07:00', 'endTime': '2022-02-15T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47851, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-16T07:00:00.0000000+07:00', 'endTime': '2022-02-16T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47852, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-17T07:00:00.0000000+07:00', 'endTime': '2022-02-17T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47853, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-18T07:00:00.0000000+07:00', 'endTime': '2022-02-18T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47854, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-19T07:00:00.0000000+07:00', 'endTime': '2022-02-19T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47855, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-20T07:00:00.0000000+07:00', 'endTime': '2022-02-20T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47856, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-21T07:00:00.0000000+07:00', 'endTime': '2022-02-21T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47857, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-22T07:00:00.0000000+07:00', 'endTime': '2022-02-22T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47858, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-23T07:00:00.0000000+07:00', 'endTime': '2022-02-23T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47859, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-24T07:00:00.0000000+07:00', 'endTime': '2022-02-24T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47860, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-25T07:00:00.0000000+07:00', 'endTime': '2022-02-25T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47861, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-26T07:00:00.0000000+07:00', 'endTime': '2022-02-26T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47862, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-27T07:00:00.0000000+07:00', 'endTime': '2022-02-27T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47863, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-02-28T07:00:00.0000000+07:00', 'endTime': '2022-02-28T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47864, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-01T07:00:00.0000000+07:00', 'endTime': '2022-03-01T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47865, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-02T07:00:00.0000000+07:00', 'endTime': '2022-03-02T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47866, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-03T07:00:00.0000000+07:00', 'endTime': '2022-03-03T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47867, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-04T07:00:00.0000000+07:00', 'endTime': '2022-03-04T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47868, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-05T07:00:00.0000000+07:00', 'endTime': '2022-03-05T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47869, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-06T07:00:00.0000000+07:00', 'endTime': '2022-03-06T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47870, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-07T07:00:00.0000000+07:00', 'endTime': '2022-03-07T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47871, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-08T07:00:00.0000000+07:00', 'endTime': '2022-03-08T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47872, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-09T07:00:00.0000000+07:00', 'endTime': '2022-03-09T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47873, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-11T07:00:00.0000000+07:00', 'endTime': '2022-03-11T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47874, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-12T07:00:00.0000000+07:00', 'endTime': '2022-03-12T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47875, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-13T07:00:00.0000000+07:00', 'endTime': '2022-03-13T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47876, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-15T07:00:00.0000000+07:00', 'endTime': '2022-03-15T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47877, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-16T07:00:00.0000000+07:00', 'endTime': '2022-03-16T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47878, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-17T07:00:00.0000000+07:00', 'endTime': '2022-03-17T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47879, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-18T07:00:00.0000000+07:00', 'endTime': '2022-03-18T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47880, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-19T07:00:00.0000000+07:00', 'endTime': '2022-03-19T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47881, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-20T07:00:00.0000000+07:00', 'endTime': '2022-03-20T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47882, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-21T07:00:00.0000000+07:00', 'endTime': '2022-03-21T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47883, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-22T07:00:00.0000000+07:00', 'endTime': '2022-03-22T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47884, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-23T07:00:00.0000000+07:00', 'endTime': '2022-03-23T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47885, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-24T07:00:00.0000000+07:00', 'endTime': '2022-03-24T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47886, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-25T07:00:00.0000000+07:00', 'endTime': '2022-03-25T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47887, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-26T07:00:00.0000000+07:00', 'endTime': '2022-03-26T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47888, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-27T07:00:00.0000000+07:00', 'endTime': '2022-03-27T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47889, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-28T07:00:00.0000000+07:00', 'endTime': '2022-03-28T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47890, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-29T07:00:00.0000000+07:00', 'endTime': '2022-03-29T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47891, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-30T07:00:00.0000000+07:00', 'endTime': '2022-03-30T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47892, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-03-31T07:00:00.0000000+07:00', 'endTime': '2022-03-31T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47893, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-01T07:00:00.0000000+07:00', 'endTime': '2022-04-01T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47894, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-02T07:00:00.0000000+07:00', 'endTime': '2022-04-02T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47895, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-03T07:00:00.0000000+07:00', 'endTime': '2022-04-03T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47896, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-04T07:00:00.0000000+07:00', 'endTime': '2022-04-04T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47897, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-05T07:00:00.0000000+07:00', 'endTime': '2022-04-05T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47898, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-06T07:00:00.0000000+07:00', 'endTime': '2022-04-06T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47899, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-07T07:00:00.0000000+07:00', 'endTime': '2022-04-07T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47900, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-08T07:00:00.0000000+07:00', 'endTime': '2022-04-08T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47901, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-09T07:00:00.0000000+07:00', 'endTime': '2022-04-09T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47902, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-10T07:00:00.0000000+07:00', 'endTime': '2022-04-10T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47903, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-11T07:00:00.0000000+07:00', 'endTime': '2022-04-11T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47904, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-12T07:00:00.0000000+07:00', 'endTime': '2022-04-12T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47905, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-13T07:00:00.0000000+07:00', 'endTime': '2022-04-13T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47906, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-14T07:00:00.0000000+07:00', 'endTime': '2022-04-14T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47907, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-15T07:00:00.0000000+07:00', 'endTime': '2022-04-15T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47908, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-16T07:00:00.0000000+07:00', 'endTime': '2022-04-16T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47909, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-17T07:00:00.0000000+07:00', 'endTime': '2022-04-17T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47910, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-18T07:00:00.0000000+07:00', 'endTime': '2022-04-18T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47911, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-19T07:00:00.0000000+07:00', 'endTime': '2022-04-19T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47912, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-20T07:00:00.0000000+07:00', 'endTime': '2022-04-20T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47913, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-21T07:00:00.0000000+07:00', 'endTime': '2022-04-21T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47914, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-22T07:00:00.0000000+07:00', 'endTime': '2022-04-22T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47915, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-23T07:00:00.0000000+07:00', 'endTime': '2022-04-23T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47916, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-24T07:00:00.0000000+07:00', 'endTime': '2022-04-24T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47917, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-25T07:00:00.0000000+07:00', 'endTime': '2022-04-25T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47918, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-26T07:00:00.0000000+07:00', 'endTime': '2022-04-26T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47919, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-27T07:00:00.0000000+07:00', 'endTime': '2022-04-27T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47920, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-28T07:00:00.0000000+07:00', 'endTime': '2022-04-28T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47921, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-29T07:00:00.0000000+07:00', 'endTime': '2022-04-29T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47922, 'shiftId': 5411, 'timeSheetId': 55018, 'employeeId': 100212130, 'workById': 100212130, 'clockingStatus': 1, 'startTime': '2022-04-30T07:00:00.0000000+07:00', 'endTime': '2022-04-30T11:00:00.0000000+07:00', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:39.365" endtime="20220314 17:50:39.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:39.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.366" endtime="20220314 17:50:39.367"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.367" endtime="20220314 17:50:39.367"></status>
</kw>
<msg timestamp="20220314 17:50:39.368" level="INFO">${resp} = {'result': {'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': ...</msg>
<status status="PASS" starttime="20220314 17:50:39.255" endtime="20220314 17:50:39.368"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:39.385" level="INFO">${result} = ['NV414473']</msg>
<status status="PASS" starttime="20220314 17:50:39.368" endtime="20220314 17:50:39.385"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:39.385" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:39.385" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:39.385" endtime="20220314 17:50:39.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:39.386" endtime="20220314 17:50:39.386"></status>
</kw>
<msg timestamp="20220314 17:50:39.386" level="INFO">${result} = NV414473</msg>
<status status="PASS" starttime="20220314 17:50:39.386" endtime="20220314 17:50:39.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.386" endtime="20220314 17:50:39.386"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:39.386" endtime="20220314 17:50:39.386"></status>
</kw>
<msg timestamp="20220314 17:50:39.387" level="INFO">${value} = NV414473</msg>
<status status="PASS" starttime="20220314 17:50:39.368" endtime="20220314 17:50:39.387"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.387" endtime="20220314 17:50:39.387"></status>
</kw>
<msg timestamp="20220314 17:50:39.387" level="INFO">${code_employee1} = NV414473</msg>
<status status="PASS" starttime="20220314 17:50:39.255" endtime="20220314 17:50:39.387"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${EmployeeId2}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:39.440" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220314 17:50:39.440" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:39.441" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.387" endtime="20220314 17:50:39.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.444" level="INFO">{'result': {'total': 19, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:09.5130000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7635, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212129}]}, {'id': 100212130, 'code': 'NV414473', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T17:50:18.1370000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7636, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212130}]}, {'id': 100212000, 'code': 'NV739389', 'name': 'NV may cham cong', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:21:49.2700000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6600, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212000}]}, {'id': 100212120, 'code': 'NV200592', 'name': 'eQum', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:14:33.8600000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7626, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212120}]}, {'id': 100211814, 'code': 'NV000003', 'name': 'NV2_chi nhánh', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:08:06.4470000+07:00', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:44:06.7750000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4622, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211814}]}, {'id': 100211811, 'code': 'NV000002', 'name': 'NV1_cá nhân', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 10999, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T16:58:43.0430000+07:00', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T14:02:25.9870000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 10997, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4618, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211811}, {'id': 4627, 'tenantId': 200001091, 'branchId': 1941, 'employeeId': 100211811}]}, {'id': 100212117, 'code': 'NV794797', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:23.7530000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7623, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212117}]}, {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, {'id': 100212019, 'code': 'NV739399', 'name': 'PHuocMCC', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '0369459632', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 11025, 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T11:09:32.4770000+07:00', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T16:04:07.1160000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6619, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212019}]}, {'id': 100211822, 'code': 'NV739388', 'name': 'Võ Thị Thu Phước', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-11T17:54:16.6400000+07:00', 'modifiedBy': 10997, 'modifiedDate': '2022-03-14T09:45:00.8850000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 4631, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100211822}]}, {'id': 100212123, 'code': 'NV168206', 'name': 'RakG', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:16:11.8730000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7629, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212123}]}, {'id': 100212011, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6611, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212011}]}, {'id': 100212014, 'code': 'NV739397', 'name': 'Tesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:25:05.6430000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6614, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212014}]}, {'id': 100212006, 'code': 'NV739394', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:54.8000000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6606, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212006}]}, {'id': 100212008, 'code': 'NV739395', 'name': 'thanh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:55.7500000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6608, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212008}]}, {'id': 100212003, 'code': 'NV739391', 'name': 'THuPHuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:22:15.3300000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6603, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212003}]}, {'id': 100212004, 'code': 'NV739392', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:24.6430000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6604, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212004}]}, {'id': 100212005, 'code': 'NV739393', 'name': 'nhân viên', 'nickName': '', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T10:23:25.2830000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 6605, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212005}]}, {'id': 100212127, 'code': 'NV962538', 'name': 'vQaV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:54:17.2430000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 7633, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212127}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:39.441" endtime="20220314 17:50:39.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:39.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.445" endtime="20220314 17:50:39.447"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.447" endtime="20220314 17:50:39.448"></status>
</kw>
<msg timestamp="20220314 17:50:39.451" level="INFO">${resp} = {'result': {'total': 19, 'data': [{'id': 100212129, 'code': 'NV429950', 'name': 'aRqE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'location...</msg>
<status status="PASS" starttime="20220314 17:50:39.387" endtime="20220314 17:50:39.451"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:39.486" level="INFO">${list} = [100212129, 100212130, 100212000, 100212120, 100211814, 100211811, 100212117, 100212118, 100212019, 100211822, 100212123, 100212011, 100212014, 100212006, 100212008, 100212003, 100212004, 100212005, 1...</msg>
<status status="PASS" starttime="20220314 17:50:39.452" endtime="20220314 17:50:39.486"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220314 17:50:39.487" level="INFO">${value} = 100212118</msg>
<status status="PASS" starttime="20220314 17:50:39.486" endtime="20220314 17:50:39.487"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.487" endtime="20220314 17:50:39.487"></status>
</kw>
<msg timestamp="20220314 17:50:39.487" level="INFO">${EmployeeId2} = 100212118</msg>
<status status="PASS" starttime="20220314 17:50:39.387" endtime="20220314 17:50:39.487"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${EmployeeId2}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee2}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:39.711" level="INFO">Get Request using : alias=session, uri=/employees/100212118, headers=None json=None</msg>
<msg timestamp="20220314 17:50:39.711" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:39.712" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.488" endtime="20220314 17:50:39.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.715" level="INFO">{'result': {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 200001091, 'branchId': 1939, 'createdBy': 10997, 'createdDate': '2022-03-14T16:05:38.0500000', 'isDeleted': False, 'clockings': [{'id': 47021, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-02T14:00:00.0000000', 'endTime': '2022-02-02T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47022, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-03T14:00:00.0000000', 'endTime': '2022-02-03T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47023, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-04T14:00:00.0000000', 'endTime': '2022-02-04T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47024, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-05T14:00:00.0000000', 'endTime': '2022-02-05T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47025, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-06T14:00:00.0000000', 'endTime': '2022-02-06T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47026, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-07T14:00:00.0000000', 'endTime': '2022-02-07T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47027, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-08T14:00:00.0000000', 'endTime': '2022-02-08T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47028, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-09T14:00:00.0000000', 'endTime': '2022-02-09T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47029, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 3, 'startTime': '2022-02-10T14:00:00.0000000', 'endTime': '2022-02-10T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'checkOutDate': '2022-02-10T17:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47030, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-11T14:00:00.0000000', 'endTime': '2022-02-11T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47031, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-12T14:00:00.0000000', 'endTime': '2022-02-12T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47032, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-13T14:00:00.0000000', 'endTime': '2022-02-13T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47033, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-14T14:00:00.0000000', 'endTime': '2022-02-14T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47034, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-15T14:00:00.0000000', 'endTime': '2022-02-15T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47035, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-16T14:00:00.0000000', 'endTime': '2022-02-16T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47036, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-17T14:00:00.0000000', 'endTime': '2022-02-17T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47037, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-18T14:00:00.0000000', 'endTime': '2022-02-18T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47038, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-19T14:00:00.0000000', 'endTime': '2022-02-19T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47039, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-20T14:00:00.0000000', 'endTime': '2022-02-20T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47040, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-21T14:00:00.0000000', 'endTime': '2022-02-21T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47041, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-22T14:00:00.0000000', 'endTime': '2022-02-22T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47042, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-23T14:00:00.0000000', 'endTime': '2022-02-23T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47043, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-24T14:00:00.0000000', 'endTime': '2022-02-24T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47044, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-25T14:00:00.0000000', 'endTime': '2022-02-25T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47045, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-26T14:00:00.0000000', 'endTime': '2022-02-26T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47046, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-27T14:00:00.0000000', 'endTime': '2022-02-27T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47047, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-02-28T14:00:00.0000000', 'endTime': '2022-02-28T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47048, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-01T14:00:00.0000000', 'endTime': '2022-03-01T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47049, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-02T14:00:00.0000000', 'endTime': '2022-03-02T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47050, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-03T14:00:00.0000000', 'endTime': '2022-03-03T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47051, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-04T14:00:00.0000000', 'endTime': '2022-03-04T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47052, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-05T14:00:00.0000000', 'endTime': '2022-03-05T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47053, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 3, 'startTime': '2022-03-06T14:00:00.0000000', 'endTime': '2022-03-06T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'checkInDate': '2022-03-06T14:00:00.0000000', 'checkOutDate': '2022-03-06T17:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47054, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-07T14:00:00.0000000', 'endTime': '2022-03-07T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47055, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 4, 'startTime': '2022-03-08T14:00:00.0000000', 'endTime': '2022-03-08T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'absenceType': 2, 'clockingPaymentStatus': 0}, {'id': 47056, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-09T14:00:00.0000000', 'endTime': '2022-03-09T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47057, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-11T14:00:00.0000000', 'endTime': '2022-03-11T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47058, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-12T14:00:00.0000000', 'endTime': '2022-03-12T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47059, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-13T14:00:00.0000000', 'endTime': '2022-03-13T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47060, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-15T14:00:00.0000000', 'endTime': '2022-03-15T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47061, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-16T14:00:00.0000000', 'endTime': '2022-03-16T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47062, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-17T14:00:00.0000000', 'endTime': '2022-03-17T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47063, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-18T14:00:00.0000000', 'endTime': '2022-03-18T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47064, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-19T14:00:00.0000000', 'endTime': '2022-03-19T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47065, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-20T14:00:00.0000000', 'endTime': '2022-03-20T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47066, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-21T14:00:00.0000000', 'endTime': '2022-03-21T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47067, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-22T14:00:00.0000000', 'endTime': '2022-03-22T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47068, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-23T14:00:00.0000000', 'endTime': '2022-03-23T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47069, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-24T14:00:00.0000000', 'endTime': '2022-03-24T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47070, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-25T14:00:00.0000000', 'endTime': '2022-03-25T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47071, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-26T14:00:00.0000000', 'endTime': '2022-03-26T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47072, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-27T14:00:00.0000000', 'endTime': '2022-03-27T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47073, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-28T14:00:00.0000000', 'endTime': '2022-03-28T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47074, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-29T14:00:00.0000000', 'endTime': '2022-03-29T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47075, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-30T14:00:00.0000000', 'endTime': '2022-03-30T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47076, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-03-31T14:00:00.0000000', 'endTime': '2022-03-31T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47077, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-01T14:00:00.0000000', 'endTime': '2022-04-01T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47078, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-02T14:00:00.0000000', 'endTime': '2022-04-02T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47079, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-03T14:00:00.0000000', 'endTime': '2022-04-03T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47080, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-04T14:00:00.0000000', 'endTime': '2022-04-04T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47081, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-05T14:00:00.0000000', 'endTime': '2022-04-05T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47082, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-06T14:00:00.0000000', 'endTime': '2022-04-06T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47083, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-07T14:00:00.0000000', 'endTime': '2022-04-07T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47084, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-08T14:00:00.0000000', 'endTime': '2022-04-08T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47085, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-09T14:00:00.0000000', 'endTime': '2022-04-09T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47086, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-10T14:00:00.0000000', 'endTime': '2022-04-10T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47087, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-11T14:00:00.0000000', 'endTime': '2022-04-11T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47088, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-12T14:00:00.0000000', 'endTime': '2022-04-12T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47089, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-13T14:00:00.0000000', 'endTime': '2022-04-13T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47090, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-14T14:00:00.0000000', 'endTime': '2022-04-14T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47091, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 2, 'startTime': '2022-04-15T14:00:00.0000000', 'endTime': '2022-04-15T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': False, 'checkInDate': '2022-04-15T07:26:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47092, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-16T14:00:00.0000000', 'endTime': '2022-04-16T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47093, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-17T14:00:00.0000000', 'endTime': '2022-04-17T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47094, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-18T14:00:00.0000000', 'endTime': '2022-04-18T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47095, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-19T14:00:00.0000000', 'endTime': '2022-04-19T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47096, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-20T14:00:00.0000000', 'endTime': '2022-04-20T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47097, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-21T14:00:00.0000000', 'endTime': '2022-04-21T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47098, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-22T14:00:00.0000000', 'endTime': '2022-04-22T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47099, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-23T14:00:00.0000000', 'endTime': '2022-04-23T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47100, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-24T14:00:00.0000000', 'endTime': '2022-04-24T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47101, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-25T14:00:00.0000000', 'endTime': '2022-04-25T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47102, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-26T14:00:00.0000000', 'endTime': '2022-04-26T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47103, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-27T14:00:00.0000000', 'endTime': '2022-04-27T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47104, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-28T14:00:00.0000000', 'endTime': '2022-04-28T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47105, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-29T14:00:00.0000000', 'endTime': '2022-04-29T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 47106, 'shiftId': 5207, 'timeSheetId': 55006, 'employeeId': 100212118, 'workById': 100212118, 'clockingStatus': 1, 'startTime': '2022-04-30T14:00:00.0000000', 'endTime': '2022-04-30T17:00:00.0000000', 'branchId': 1939, 'tenantId': 200001091, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 7624, 'tenantId': 200001091, 'branchId': 1939, 'employeeId': 100212118}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220314 17:50:39.712" endtime="20220314 17:50:39.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220314 17:50:39.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.716" endtime="20220314 17:50:39.716"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.716" endtime="20220314 17:50:39.716"></status>
</kw>
<msg timestamp="20220314 17:50:39.717" level="INFO">${resp} = {'result': {'id': 100212118, 'code': 'NV312776', 'name': 'OMhu', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': ...</msg>
<status status="PASS" starttime="20220314 17:50:39.488" endtime="20220314 17:50:39.717"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:39.734" level="INFO">${result} = ['NV312776']</msg>
<status status="PASS" starttime="20220314 17:50:39.718" endtime="20220314 17:50:39.734"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:39.735" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:39.735" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:39.735" endtime="20220314 17:50:39.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:39.735" endtime="20220314 17:50:39.735"></status>
</kw>
<msg timestamp="20220314 17:50:39.735" level="INFO">${result} = NV312776</msg>
<status status="PASS" starttime="20220314 17:50:39.735" endtime="20220314 17:50:39.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.736" endtime="20220314 17:50:39.736"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:39.735" endtime="20220314 17:50:39.736"></status>
</kw>
<msg timestamp="20220314 17:50:39.736" level="INFO">${value} = NV312776</msg>
<status status="PASS" starttime="20220314 17:50:39.718" endtime="20220314 17:50:39.736"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.736" endtime="20220314 17:50:39.736"></status>
</kw>
<msg timestamp="20220314 17:50:39.736" level="INFO">${code_employee2} = NV312776</msg>
<status status="PASS" starttime="20220314 17:50:39.488" endtime="20220314 17:50:39.736"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${EmployeeId1}</arg>
<arg>${EmployeeId2}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220314 17:50:39.737" level="INFO">${list} = [100212130, 100212118]</msg>
<status status="PASS" starttime="20220314 17:50:39.736" endtime="20220314 17:50:39.737"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_mutiple_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data_mutiple_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:39.737" level="INFO">Length is 2</msg>
<msg timestamp="20220314 17:50:39.737" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220314 17:50:39.737" endtime="20220314 17:50:39.737"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:39.737" level="INFO">${value_temp} = 100212130</msg>
<status status="PASS" starttime="20220314 17:50:39.737" endtime="20220314 17:50:39.737"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:39.738" level="INFO">${value_temp} = 100212130</msg>
<status status="PASS" starttime="20220314 17:50:39.738" endtime="20220314 17:50:39.738"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:39.738" level="INFO">${data_format} = {"employeeIds":[100212130,[D1]]}</msg>
<status status="PASS" starttime="20220314 17:50:39.738" endtime="20220314 17:50:39.738"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:39.737" endtime="20220314 17:50:39.738"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:39.738" level="INFO">${value_temp} = 100212118</msg>
<status status="PASS" starttime="20220314 17:50:39.738" endtime="20220314 17:50:39.738"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220314 17:50:39.738" level="INFO">${value_temp} = 100212118</msg>
<status status="PASS" starttime="20220314 17:50:39.738" endtime="20220314 17:50:39.739"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220314 17:50:39.739" level="INFO">${data_format} = {"employeeIds":[100212130,100212118]}</msg>
<status status="PASS" starttime="20220314 17:50:39.739" endtime="20220314 17:50:39.739"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:39.738" endtime="20220314 17:50:39.739"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:39.737" endtime="20220314 17:50:39.739"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220314 17:50:39.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:39.739" endtime="20220314 17:50:39.739"></status>
</kw>
<msg timestamp="20220314 17:50:39.739" level="INFO">${data_mutiple_employee} = {"employeeIds":[100212130,100212118]}</msg>
<status status="PASS" starttime="20220314 17:50:39.737" endtime="20220314 17:50:39.739"></status>
</kw>
<kw name="Delete Multiple Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_multiple_employee}</arg>
<arg>${data_mutiple_employee}</arg>
<arg>Xóa nhân viên thành công</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220314 17:50:41.922" level="INFO">Post Request using : alias=session, uri=/employees/delete-multiple, data={"employeeIds":[100212130,100212118]}, headers={'retailer': 'phuocnew441', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1939', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDk5NywiaWF0IjoxNjQ3MjU1MDI0LCJleHAiOjE2NDczNDE0MjQsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImE4YWUyYTljYjY3MDQ1Y2Y4MmRlMmI3MjhhNmU3YmJkIiwia3Z1aWQiOjEwOTk3LCJrdnVndm5hbWUiOjEsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTkzOSwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoicGh1b2NuZXc0NDEiLCJrdnJpZCI6MjAwMDAxMDkxLCJrdnVyaWQiOjIwMDAwMTA5MSwia3ZyZ2lkIjoxLCJwZXJtcyI6IiJ9.hWTNCWWdOOgCOG3sSR5WlonOcExEXZGcMCYw5AVdmD8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220314 17:50:41.922" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220314 17:50:41.922" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220314 17:50:39.740" endtime="20220314 17:50:41.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:41.923" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:41.923" endtime="20220314 17:50:41.923"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220314 17:50:41.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220314 17:50:41.923" endtime="20220314 17:50:41.923"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220314 17:50:41.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:41.923" endtime="20220314 17:50:41.923"></status>
</kw>
<msg timestamp="20220314 17:50:41.924" level="INFO">${resp} = {'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220314 17:50:39.740" endtime="20220314 17:50:41.924"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_err_resp}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220314 17:50:41.940" level="INFO">${result} = ['Xóa nhân viên thành công']</msg>
<status status="PASS" starttime="20220314 17:50:41.924" endtime="20220314 17:50:41.940"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220314 17:50:41.940" level="INFO">Length is 1</msg>
<msg timestamp="20220314 17:50:41.940" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220314 17:50:41.940" endtime="20220314 17:50:41.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:41.940" endtime="20220314 17:50:41.940"></status>
</kw>
<msg timestamp="20220314 17:50:41.940" level="INFO">${result} = Xóa nhân viên thành công</msg>
<status status="PASS" starttime="20220314 17:50:41.940" endtime="20220314 17:50:41.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220314 17:50:41.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220314 17:50:41.941" endtime="20220314 17:50:41.941"></status>
</kw>
<status status="PASS" starttime="20220314 17:50:41.941" endtime="20220314 17:50:41.941"></status>
</kw>
<msg timestamp="20220314 17:50:41.941" level="INFO">${mess_err_resp} = Xóa nhân viên thành công</msg>
<status status="PASS" starttime="20220314 17:50:41.924" endtime="20220314 17:50:41.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${mess_err_resp}</arg>
</arguments>
<msg timestamp="20220314 17:50:41.941" level="INFO">Xóa nhân viên thành công</msg>
<status status="PASS" starttime="20220314 17:50:41.941" endtime="20220314 17:50:41.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err_resp}</arg>
<arg>${mess_err_expected}</arg>
</arguments>
<status status="PASS" starttime="20220314 17:50:41.941" endtime="20220314 17:50:41.942"></status>
</kw>
<msg timestamp="20220314 17:50:41.942" level="INFO">${resp} = None</msg>
<status status="PASS" starttime="20220314 17:50:39.739" endtime="20220314 17:50:41.942"></status>
</kw>
<doc>Xóa nhiều nhân viên cùng 1 lúc</doc>
<tags>
<tag>allbooking</tag>
<tag>allfnb</tag>
<tag>allretailer</tag>
<tag>employee1</tag>
</tags>
<status status="PASS" starttime="20220314 17:50:39.129" endtime="20220314 17:50:41.942" critical="yes"></status>
</test>
<status status="PASS" starttime="20220314 17:50:23.470" endtime="20220314 17:50:41.942"></status>
</suite>
<status status="PASS" starttime="20220314 17:50:23.469" endtime="20220314 17:50:41.944"></status>
</suite>
<status status="PASS" starttime="20220314 17:50:23.445" endtime="20220314 17:50:41.946"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="9" fail="0">allbooking</stat>
<stat pass="9" fail="0">allfnb</stat>
<stat pass="9" fail="0">allretailer</stat>
<stat pass="8" fail="0">employee</stat>
<stat pass="1" fail="0">employee1</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="9" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="9" fail="0" id="s1-s1-s1" name="Employee">Testsuites.NhanVien.Employee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
