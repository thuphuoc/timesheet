<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220228 13:51:40.065">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Employee" source="D:\timesheet\testsuites\NhanVien\employee.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone61=https://testz61.kiotviet.vn/api</arg>
<arg>zone9=https://taphoa.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>zone59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>zone59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb59508=https://phuoc59508.kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:40.334" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone61': 'https://test...</msg>
<status status="PASS" starttime="20220228 13:51:40.334" endtime="20220228 13:51:40.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>zone61=/auth/salelogin</arg>
<arg>zone9=/auth/salelogin</arg>
<arg>zone59902=/auth/salelogin</arg>
<arg>zone59903=/auth/salelogin</arg>
<arg>fnb59508=/auth/salelogin</arg>
<arg>booking=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:40.334" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', 'zone61': '/auth/salelogin', 'zone9': '/auth/salelogin',...</msg>
<status status="PASS" starttime="20220228 13:51:40.334" endtime="20220228 13:51:40.334"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>zone61=https://api-timesheet.kiotviet.vn</arg>
<arg>zone9=https://api-timesheet2.kiotviet.vn</arg>
<arg>zone59902=https://kvpos.com:55002</arg>
<arg>zone59903=https://kvpos.com:55003</arg>
<arg>fnb59508=https://kvpos.com:55008</arg>
<arg>booking=https://timesheetapi.kvpos.com:9009</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220228 13:51:40.335" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220228 13:51:40.334" endtime="20220228 13:51:40.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>zone61=https://api-man3.kiotviet.vn/api</arg>
<arg>zone9=https://api-man3.kiotviet.vn/api</arg>
<arg>zone59902=https://kvpos.com:59932/api</arg>
<arg>zone59903=https://kvpos.com:59933/api</arg>
<arg>fnb59508=https://kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220228 13:51:40.335" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220228 13:51:40.335" endtime="20220228 13:51:40.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=admin</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220228 13:51:40.335" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', 'zone9': 'taphoa', 'zone61': 'admin', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1', 'booking': '1',...</msg>
<status status="PASS" starttime="20220228 13:51:40.335" endtime="20220228 13:51:40.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>zone9=123456</arg>
<arg>zone61=123456</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220228 13:51:40.336" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', 'zone9': '123456', 'zone61': '123456', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1', 'booking': '1', 'f...</msg>
<status status="PASS" starttime="20220228 13:51:40.335" endtime="20220228 13:51:40.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=testz61</arg>
<arg>zone59902=phuoc902</arg>
<arg>zone59903=phuoc903</arg>
<arg>fnb59508=phuoc59508</arg>
<arg>booking=phuoc009</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220228 13:51:40.336" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', 'zone9': 'taphoa', 'zone61': 'testz61', 'zone59902': 'phuoc902', 'zone59903': 'phuoc903', 'fnb59508'...</msg>
<status status="PASS" starttime="20220228 13:51:40.336" endtime="20220228 13:51:40.336"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220228 13:51:40.336" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 13:51:40.336" endtime="20220228 13:51:40.336"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220228 13:51:40.337" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:40.337" endtime="20220228 13:51:40.337"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220228 13:51:40.337" level="INFO">${retailer} = testz61</msg>
<status status="PASS" starttime="20220228 13:51:40.337" endtime="20220228 13:51:40.337"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:40.337" level="INFO">${url_saleLogin} = https://testz61.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:40.337" endtime="20220228 13:51:40.337"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:40.338" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 13:51:40.337" endtime="20220228 13:51:40.338"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220228 13:51:40.338" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 13:51:40.338" endtime="20220228 13:51:40.338"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220228 13:51:40.338" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:40.338" endtime="20220228 13:51:40.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.338" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 13:51:40.338" endtime="20220228 13:51:40.338"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.339" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:40.338" endtime="20220228 13:51:40.339"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.339" level="INFO">${retailer} = testz61</msg>
<status status="PASS" starttime="20220228 13:51:40.339" endtime="20220228 13:51:40.339"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.339" level="INFO">${url_saleLogin} = https://testz61.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:40.339" endtime="20220228 13:51:40.339"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.339" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 13:51:40.339" endtime="20220228 13:51:40.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.340" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 13:51:40.340" endtime="20220228 13:51:40.340"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.340" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:40.340" endtime="20220228 13:51:40.340"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 13:51:40.340" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220228 13:51:40.340" endtime="20220228 13:51:40.340"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:40.341" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123456'}</msg>
<status status="PASS" starttime="20220228 13:51:40.341" endtime="20220228 13:51:40.341"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.341" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz61.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:40.341" endtime="20220228 13:51:40.341"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:40.697" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123456"}, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:40.697" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz61.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:40.697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.341" endtime="20220228 13:51:40.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.697" level="INFO">{'UserId': 59211, 'UserName': 'admin', 'SessionId': 'ihObkXRhKZlvRI0LzNR7', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ', 'CurrentBranchId': 34428, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220228 13:51:40.697" endtime="20220228 13:51:40.697"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:40.728" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdL...</msg>
<status status="PASS" starttime="20220228 13:51:40.697" endtime="20220228 13:51:40.728"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:40.728" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:40.728" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<msg timestamp="20220228 13:51:40.728" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<msg timestamp="20220228 13:51:40.728" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220228 13:51:40.697" endtime="20220228 13:51:40.728"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220228 13:51:40.728" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.728"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:40.743" level="INFO">${result} = [59211]</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:40.743" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:40.743" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<msg timestamp="20220228 13:51:40.743" level="INFO">${result} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<msg timestamp="20220228 13:51:40.743" level="INFO">${user_login} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:40.728" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">${user_login} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_str} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_str} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_str} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_number} = 23983364</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_number} = 23983364</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.743" level="INFO">${random_number} = 23983364</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.743"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:40.759" level="INFO">${result} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:40.759" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:40.759" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<msg timestamp="20220228 13:51:40.759" level="INFO">${result} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<msg timestamp="20220228 13:51:40.759" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.743" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.759" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<assign>
<var>${is_run_retail}</var>
<var>${value}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<msg timestamp="20220228 13:51:40.759" level="INFO">${is_run_retail} = PASS</msg>
<msg timestamp="20220228 13:51:40.759" level="INFO">${value} = None</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${is_run_retail}' == 'PASS'</arg>
<arg>${true}</arg>
<arg>${false}</arg>
</arguments>
<assign>
<var>${run}</var>
</assign>
<msg timestamp="20220228 13:51:40.759" level="INFO">${run} = True</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${run}'=='True'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb Or Booking</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RunRetail</arg>
</arguments>
<msg timestamp="20220228 13:51:40.759" level="INFO">RunRetail</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 13:51:40.759" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 13:51:40.759" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.759"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220228 13:51:40.775" level="INFO">${headers_not_contenType} = {'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0N...</msg>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">${headers_not_contenType} = {'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0N...</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man3.kiotviet.vn/api, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220228 13:51:40.775" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.775"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:40.927" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/34428, headers=None json=None</msg>
<msg timestamp="20220228 13:51:40.927" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-man3.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:40.927" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.928" level="INFO">{'Id': 34428, 'Name': 'Chi nhánh B', 'Type': 0, 'Address': '434 trần Khát chân', 'Province': 'Hà Giang', 'District': 'Huyện Bắc Quang', 'ContactNumber': '0912345678', 'IsActive': True, 'RetailerId': 122796, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Hà Giang - Huyện Bắc Quang', 'WardName': 'Xã Tân Lập', 'GmbStatus': 1, 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'OrderSuppliers': [], 'WarrantyBranchGroups': [], 'BranchTakingAddresses': [], 'Patients': [], 'Clinics': [], 'Doctors': [], 'DoctorQualifications': [], 'DoctorSpecialities': [], 'Prescriptions': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'IdOld': 0, 'TotalUser': 0, 'CompareBranchName': 'Chi nhánh B', 'StatusGmbValue': 'Chưa đăng ký', 'IsTimeSheetException': False, 'LocationId': 0, 'WardId': 0, 'SyncProductSearchEventId': 0}</msg>
<status status="PASS" starttime="20220228 13:51:40.928" endtime="20220228 13:51:40.928"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220228 13:51:40.948" level="INFO">${name} = ['Chi nhánh B']</msg>
<status status="PASS" starttime="20220228 13:51:40.929" endtime="20220228 13:51:40.948"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.948" endtime="20220228 13:51:40.948"></status>
</kw>
<msg timestamp="20220228 13:51:40.948" level="INFO">${name_branch} = ['Chi nhánh B']</msg>
<status status="PASS" starttime="20220228 13:51:40.775" endtime="20220228 13:51:40.948"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.759" endtime="20220228 13:51:40.948"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.333" endtime="20220228 13:51:40.948"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create employee">
<kw name="Create Employee" library="employee">
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>100000</arg>
<arg>200</arg>
<arg>300</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${code_employee}</arg>
<arg>${name_employee}</arg>
<arg>${branchId_salary}</arg>
<arg>${branchId_work}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.965" level="INFO">${list_format} = ['1235698', 'NV23983364', 'FTBE', 34428, 34428]</msg>
<status status="PASS" starttime="20220228 13:51:40.965" endtime="20220228 13:51:40.965"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${default}</arg>
<arg>${value_holiday}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${list_salary}</var>
</assign>
<msg timestamp="20220228 13:51:40.965" level="INFO">${list_salary} = ['100000', '200', '300']</msg>
<status status="PASS" starttime="20220228 13:51:40.965" endtime="20220228 13:51:40.965"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:40.966" level="INFO">Length is 5</msg>
<msg timestamp="20220228 13:51:40.966" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 13:51:40.966" endtime="20220228 13:51:40.966"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.966" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:40.966" endtime="20220228 13:51:40.966"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.966" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:40.966" endtime="20220228 13:51:40.967"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.967" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:40.967" endtime="20220228 13:51:40.967"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.966" endtime="20220228 13:51:40.967"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.967" level="INFO">${value_temp} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:40.967" endtime="20220228 13:51:40.967"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.967" level="INFO">${value_temp} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:40.967" endtime="20220228 13:51:40.967"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.968" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:40.967" endtime="20220228 13:51:40.968"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.967" endtime="20220228 13:51:40.968"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.968" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:40.968" endtime="20220228 13:51:40.968"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.968" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:40.968" endtime="20220228 13:51:40.968"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.969" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":"FTBE","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:40.968" endtime="20220228 13:51:40.969"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.968" endtime="20220228 13:51:40.969"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.969" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.969"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.969" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.969"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.969" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.969"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.969"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.970" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.970"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.970" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:40.970" endtime="20220228 13:51:40.970"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.970" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:40.970" endtime="20220228 13:51:40.970"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.969" endtime="20220228 13:51:40.970"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.966" endtime="20220228 13:51:40.970"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.970" endtime="20220228 13:51:40.971"></status>
</kw>
<msg timestamp="20220228 13:51:40.971" level="INFO">${data} = {"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:40.965" endtime="20220228 13:51:40.971"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_set_salary}</arg>
<arg>${list_salary}</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:40.971" level="INFO">Length is 3</msg>
<msg timestamp="20220228 13:51:40.971" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 13:51:40.971" endtime="20220228 13:51:40.971"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.972" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220228 13:51:40.971" endtime="20220228 13:51:40.972"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.972" level="INFO">${value_temp} = 100000</msg>
<status status="PASS" starttime="20220228 13:51:40.972" endtime="20220228 13:51:40.972"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.972" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":[D1],"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"valu...</msg>
<status status="PASS" starttime="20220228 13:51:40.972" endtime="20220228 13:51:40.972"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.971" endtime="20220228 13:51:40.972"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.972" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220228 13:51:40.972" endtime="20220228 13:51:40.972"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.973" level="INFO">${value_temp} = 200</msg>
<status status="PASS" starttime="20220228 13:51:40.973" endtime="20220228 13:51:40.973"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.973" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 13:51:40.973" endtime="20220228 13:51:40.973"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.972" endtime="20220228 13:51:40.973"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.973" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220228 13:51:40.973" endtime="20220228 13:51:40.973"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:40.974" level="INFO">${value_temp} = 300</msg>
<status status="PASS" starttime="20220228 13:51:40.973" endtime="20220228 13:51:40.974"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:40.974" level="INFO">${data_format} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 13:51:40.974" endtime="20220228 13:51:40.974"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.973" endtime="20220228 13:51:40.974"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:40.971" endtime="20220228 13:51:40.974"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.974" endtime="20220228 13:51:40.974"></status>
</kw>
<msg timestamp="20220228 13:51:40.974" level="INFO">${data_set_salary} = {"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value...</msg>
<status status="PASS" starttime="20220228 13:51:40.971" endtime="20220228 13:51:40.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 13:51:40.974" level="INFO">${data} = (None, '{"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:40.974" endtime="20220228 13:51:40.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data_set_salary}')</arg>
</arguments>
<assign>
<var>${data_set_salary}</var>
</assign>
<msg timestamp="20220228 13:51:40.975" level="INFO">${data_set_salary} = (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":...</msg>
<status status="PASS" starttime="20220228 13:51:40.975" endtime="20220228 13:51:40.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.975" level="INFO">(None, '{"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:40.975" endtime="20220228 13:51:40.975"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
<arg>payRate=${data_set_salary}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 13:51:40.975" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryV...</msg>
<status status="PASS" starttime="20220228 13:51:40.975" endtime="20220228 13:51:40.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.976" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}</msg>
<status status="PASS" starttime="20220228 13:51:40.975" endtime="20220228 13:51:40.976"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:41.427" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV23983364","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}'), 'payRate': (None, '{"salaryPeriod":1,"mainSalaryRuleValue":{"mainSalaryValueDetails":[{"default":100000,"mainSalaryHolidays":[{"moneyTypes":2,"type":8,"value":200,"isApply":true,"sort":2},{"moneyTypes":2,"type":9,"value":300,"isApply":true,"sort":3}]}],"type":2},"overtimeSalaryRuleValue":{"overtimeSalaryDays":[{"value":150,"moneyTypes":2,"type":7,"isApply":true,"sort":0},{"value":200,"moneyTypes":2,"type":6,"isApply":true,"sort":1},{"value":200,"moneyTypes":2,"type":0,"isApply":true,"sort":2},{"value":200,"moneyTypes":2,"type":8,"isApply":true,"sort":3},{"value":300,"moneyTypes":2,"type":9,"isApply":true,"sort":4}]}}')}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:41.427" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:41.427" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.976" endtime="20220228 13:51:41.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.427" level="INFO">{'result': {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, 'message': 'Tạo nhân viên thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:41.427" endtime="20220228 13:51:41.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.427" endtime="20220228 13:51:41.427"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.427" endtime="20220228 13:51:41.427"></status>
</kw>
<msg timestamp="20220228 13:51:41.427" level="INFO">${resp} = {'result': {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'war...</msg>
<status status="PASS" starttime="20220228 13:51:40.976" endtime="20220228 13:51:41.427"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:41.447" level="INFO">${result} = [100000000107402]</msg>
<status status="PASS" starttime="20220228 13:51:41.427" endtime="20220228 13:51:41.447"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.447" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:41.447" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:41.447" endtime="20220228 13:51:41.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.459" endtime="20220228 13:51:41.459"></status>
</kw>
<msg timestamp="20220228 13:51:41.459" level="INFO">${result} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:41.447" endtime="20220228 13:51:41.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.460" endtime="20220228 13:51:41.460"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.459" endtime="20220228 13:51:41.460"></status>
</kw>
<msg timestamp="20220228 13:51:41.460" level="INFO">${id_employee} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:41.427" endtime="20220228 13:51:41.460"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:41.480" level="INFO">${result} = ['NV23983364']</msg>
<status status="PASS" starttime="20220228 13:51:41.461" endtime="20220228 13:51:41.480"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.480" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:41.480" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:41.480" endtime="20220228 13:51:41.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.481" endtime="20220228 13:51:41.481"></status>
</kw>
<msg timestamp="20220228 13:51:41.481" level="INFO">${result} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.481" endtime="20220228 13:51:41.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.482" endtime="20220228 13:51:41.482"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.481" endtime="20220228 13:51:41.482"></status>
</kw>
<msg timestamp="20220228 13:51:41.482" level="INFO">${code_employee} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.460" endtime="20220228 13:51:41.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${code_employee}</arg>
<arg>${code_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.482" level="INFO">${code_employee} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.482" endtime="20220228 13:51:41.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.483" level="INFO">${id_employee} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:41.482" endtime="20220228 13:51:41.483"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 13:51:41.483" level="INFO">${branchId} = 34428.0</msg>
<status status="PASS" starttime="20220228 13:51:41.483" endtime="20220228 13:51:41.483"></status>
</kw>
<kw name="Verify Input And Output Employee" library="employee">
<arguments>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
</arguments>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:41.586" level="INFO">Get Request using : alias=session, uri=/employees/100000000107402, headers=None json=None</msg>
<msg timestamp="20220228 13:51:41.586" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:41.586" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.484" endtime="20220228 13:51:41.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.586" level="INFO">{'result': {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'isDeleted': False, 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:41.586" endtime="20220228 13:51:41.586"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:41.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.586" endtime="20220228 13:51:41.586"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.586" endtime="20220228 13:51:41.586"></status>
</kw>
<msg timestamp="20220228 13:51:41.586" level="INFO">${resp} = {'result': {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'war...</msg>
<status status="PASS" starttime="20220228 13:51:41.483" endtime="20220228 13:51:41.586"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:41.619" level="INFO">${result} = ['NV23983364']</msg>
<status status="PASS" starttime="20220228 13:51:41.586" endtime="20220228 13:51:41.619"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.620" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:41.620" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:41.619" endtime="20220228 13:51:41.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.620" endtime="20220228 13:51:41.621"></status>
</kw>
<msg timestamp="20220228 13:51:41.621" level="INFO">${result} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.620" endtime="20220228 13:51:41.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.621" endtime="20220228 13:51:41.621"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.621" endtime="20220228 13:51:41.621"></status>
</kw>
<msg timestamp="20220228 13:51:41.621" level="INFO">${code_output} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.586" endtime="20220228 13:51:41.621"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.name</arg>
</arguments>
<assign>
<var>${name_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:41.634" level="INFO">${result} = ['FTBE']</msg>
<status status="PASS" starttime="20220228 13:51:41.622" endtime="20220228 13:51:41.634"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.634" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:41.634" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.634"></status>
</kw>
<msg timestamp="20220228 13:51:41.634" level="INFO">${result} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.634"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.634"></status>
</kw>
<msg timestamp="20220228 13:51:41.634" level="INFO">${name_output} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.622" endtime="20220228 13:51:41.634"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.branchId</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:41.670" level="INFO">${result} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.670"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.670" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:41.670" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:41.670" endtime="20220228 13:51:41.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.671" endtime="20220228 13:51:41.671"></status>
</kw>
<msg timestamp="20220228 13:51:41.671" level="INFO">${result} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.671" endtime="20220228 13:51:41.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.672" endtime="20220228 13:51:41.672"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.672" endtime="20220228 13:51:41.673"></status>
</kw>
<msg timestamp="20220228 13:51:41.673" level="INFO">${branch_output} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.634" endtime="20220228 13:51:41.673"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${branch_output}</var>
</assign>
<msg timestamp="20220228 13:51:41.675" level="INFO">${branch_output} = 34428.0</msg>
<status status="PASS" starttime="20220228 13:51:41.673" endtime="20220228 13:51:41.675"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_input}</arg>
<arg>${name_input}</arg>
<arg>${branch_input}</arg>
</arguments>
<assign>
<var>${list_input}</var>
</assign>
<msg timestamp="20220228 13:51:41.675" level="INFO">${list_input} = ['NV23983364', 'FTBE', 34428.0]</msg>
<status status="PASS" starttime="20220228 13:51:41.675" endtime="20220228 13:51:41.675"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${code_output}</arg>
<arg>${name_output}</arg>
<arg>${branch_output}</arg>
</arguments>
<assign>
<var>${list_output}</var>
</assign>
<msg timestamp="20220228 13:51:41.676" level="INFO">${list_output} = ['NV23983364', 'FTBE', 34428.0]</msg>
<status status="PASS" starttime="20220228 13:51:41.675" endtime="20220228 13:51:41.676"></status>
</kw>
<kw name="Verify List Input And Output" library="share">
<arguments>
<arg>${list_input}</arg>
<arg>${list_output}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listinput}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.677" level="INFO">Length is 3</msg>
<msg timestamp="20220228 13:51:41.677" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 13:51:41.676" endtime="20220228 13:51:41.677"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 13:51:41.678" level="INFO">${value_input} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.678" endtime="20220228 13:51:41.678"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 13:51:41.679" level="INFO">${value_output} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:41.678" endtime="20220228 13:51:41.679"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.677" endtime="20220228 13:51:41.679"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 13:51:41.679" level="INFO">${value_input} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.679" endtime="20220228 13:51:41.679"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 13:51:41.680" level="INFO">${value_output} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.680"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.679" endtime="20220228 13:51:41.680"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listinput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_input}</var>
</assign>
<msg timestamp="20220228 13:51:41.680" level="INFO">${value_input} = 34428.0</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.680"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${listoutput}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_output}</var>
</assign>
<msg timestamp="20220228 13:51:41.680" level="INFO">${value_output} = 34428.0</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.680"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.680"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.677" endtime="20220228 13:51:41.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value_input}</arg>
<arg>${value_output}</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.680"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.676" endtime="20220228 13:51:41.680"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.483" endtime="20220228 13:51:41.680"></status>
</kw>
<msg timestamp="20220228 13:51:41.680" level="INFO">${resp} = None</msg>
<status status="PASS" starttime="20220228 13:51:40.964" endtime="20220228 13:51:41.680"></status>
</kw>
<doc>Tạo mới nhân viên và thiết lập lương ko có mẫu lương</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:40.948" endtime="20220228 13:51:41.680" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Create duplicate employee">
<kw name="Create Duplicate Employee" library="employee">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>$.result.data..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:41.863" level="INFO">Get Request using : alias=session, uri=/employees, headers=None json=None</msg>
<msg timestamp="20220228 13:51:41.863" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:41.863" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.863" level="INFO">{'result': {'total': 15, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:47:18.3500000', 'modifiedBy': 59211, 'modifiedDate': '2021-07-15T09:40:49.3850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417302, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000180802}]}, {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:46:43.7070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088301, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003701}]}, {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, {'id': 170000000116004, 'code': 'NV000015', 'name': 'had', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305626, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:33:40.6130000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:42:03.3430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 170000000368804, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 170000000116004}]}, {'id': 100000000004901, 'code': 'NV000011', 'name': 'nv hai', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 80670, 'createdBy': 59211, 'createdDate': '2021-08-24T13:40:45.0500000', 'modifiedBy': 59211, 'modifiedDate': '2021-08-26T00:14:22.0830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000089301, 'tenantId': 122796, 'branchId': 80670, 'employeeId': 100000000004901}]}, {'id': 100000000106203, 'code': 'NV000017', 'name': 'hihi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-12-17T00:50:22.5230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000190703, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000106203}]}, {'id': 100000000003301, 'code': 'NV000001', 'name': 'ik', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-04-20T11:20:27.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003301}]}, {'id': 100000000104902, 'code': 'NV000013', 'name': 'nv moi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305598, 'tenantId': 122796, 'branchId': 80670, 'createdBy': 59211, 'createdDate': '2021-08-26T00:22:53.2230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000189302, 'tenantId': 122796, 'branchId': 80670, 'employeeId': 100000000104902}]}, {'id': 100000000104901, 'code': 'NV000012', 'name': 'ng mới', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 80670, 'createdBy': 59211, 'createdDate': '2021-08-26T00:14:03.6430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000189301, 'tenantId': 122796, 'branchId': 80670, 'employeeId': 100000000104901}]}, {'id': 100000000107301, 'code': 'NV284650', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107301}]}, {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:36.1970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107401}]}, {'id': 160000000211319, 'code': 'NV000007', 'name': 'nghĩa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T15:09:03.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000363920, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211319}]}, {'id': 160000000211318, 'code': 'NV000006', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T14:52:02.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 160000000363919, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211318}]}, {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-05-06T09:27:04.9000000', 'modifiedBy': 59211, 'modifiedDate': '2021-06-15T18:46:54.8130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003501}]}, {'id': 60000000183102, 'code': 'NV000014', 'name': 'Nhân viên', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305625, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:26:25.6530000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:43:49.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001419702, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000183102}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:41.863" endtime="20220228 13:51:41.863"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:41.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.863" endtime="20220228 13:51:41.863"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.863" endtime="20220228 13:51:41.863"></status>
</kw>
<msg timestamp="20220228 13:51:41.863" level="INFO">${resp} = {'result': {'total': 15, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.863"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:41.891" level="INFO">${list} = ['NV000004', 'NV000003', 'NV23983364', 'NV000015', 'NV000011', 'NV000017', 'NV000001', 'NV000013', 'NV000012', 'NV284650', 'NV357232', 'NV000007', 'NV000006', 'NV000002', 'NV000014']</msg>
<status status="PASS" starttime="20220228 13:51:41.863" endtime="20220228 13:51:41.891"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:41.895" level="INFO">${value} = NV284650</msg>
<status status="PASS" starttime="20220228 13:51:41.892" endtime="20220228 13:51:41.895"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.895" endtime="20220228 13:51:41.896"></status>
</kw>
<msg timestamp="20220228 13:51:41.896" level="INFO">${code_employee} = NV284650</msg>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:41.896"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>${code_employee}</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.896" level="INFO">${list_format} = ['1235698', 'NV284650', 'FTBE', 34428, 34428]</msg>
<status status="PASS" starttime="20220228 13:51:41.896" endtime="20220228 13:51:41.896"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:41.897" level="INFO">Length is 5</msg>
<msg timestamp="20220228 13:51:41.897" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 13:51:41.896" endtime="20220228 13:51:41.897"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.897" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:41.897" endtime="20220228 13:51:41.897"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.897" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:41.897" endtime="20220228 13:51:41.897"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.897" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:41.897" endtime="20220228 13:51:41.898"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.897" endtime="20220228 13:51:41.898"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.898" level="INFO">${value_temp} = NV284650</msg>
<status status="PASS" starttime="20220228 13:51:41.898" endtime="20220228 13:51:41.898"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.898" level="INFO">${value_temp} = NV284650</msg>
<status status="PASS" starttime="20220228 13:51:41.898" endtime="20220228 13:51:41.898"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.898" level="INFO">${data_format} = {"id":1235698,"code":"NV284650","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:41.898" endtime="20220228 13:51:41.898"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.898" endtime="20220228 13:51:41.898"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.899" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.899" endtime="20220228 13:51:41.899"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.899" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:41.899" endtime="20220228 13:51:41.899"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.899" level="INFO">${data_format} = {"id":1235698,"code":"NV284650","name":"FTBE","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:41.899" endtime="20220228 13:51:41.899"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.898" endtime="20220228 13:51:41.899"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.900" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.899" endtime="20220228 13:51:41.900"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.900" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.900" endtime="20220228 13:51:41.900"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.900" level="INFO">${data_format} = {"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:41.900" endtime="20220228 13:51:41.900"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.899" endtime="20220228 13:51:41.900"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.900" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.900" endtime="20220228 13:51:41.901"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:41.901" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:41.901" endtime="20220228 13:51:41.901"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:41.901" level="INFO">${data_format} = {"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:41.901" endtime="20220228 13:51:41.901"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.900" endtime="20220228 13:51:41.901"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.897" endtime="20220228 13:51:41.901"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:41.901" endtime="20220228 13:51:41.901"></status>
</kw>
<msg timestamp="20220228 13:51:41.901" level="INFO">${data} = {"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:41.896" endtime="20220228 13:51:41.901"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 13:51:41.902" level="INFO">${data} = (None, '{"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:41.902" endtime="20220228 13:51:41.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.902" level="INFO">(None, '{"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:41.902" endtime="20220228 13:51:41.902"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 13:51:41.902" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:41.902" endtime="20220228 13:51:41.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 13:51:41.903" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:41.902" endtime="20220228 13:51:41.903"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:42.005" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV284650","name":"FTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:42.005" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:42.005" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:41.903" endtime="20220228 13:51:42.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.005" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 13:51:42.005" endtime="20220228 13:51:42.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.005" endtime="20220228 13:51:42.005"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.005" endtime="20220228 13:51:42.005"></status>
</kw>
<msg timestamp="20220228 13:51:42.005" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 13:51:41.903" endtime="20220228 13:51:42.005"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:42.028" level="INFO">${result} = ['Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220228 13:51:42.005" endtime="20220228 13:51:42.028"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:42.028" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:42.028" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:42.028" endtime="20220228 13:51:42.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:42.028" endtime="20220228 13:51:42.029"></status>
</kw>
<msg timestamp="20220228 13:51:42.029" level="INFO">${result} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220228 13:51:42.028" endtime="20220228 13:51:42.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.029" endtime="20220228 13:51:42.029"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.029" endtime="20220228 13:51:42.029"></status>
</kw>
<msg timestamp="20220228 13:51:42.029" level="INFO">${mess_err} = Mã nhân viên đã tồn tại trong cửa hàng</msg>
<status status="PASS" starttime="20220228 13:51:42.005" endtime="20220228 13:51:42.029"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Mã nhân viên đã tồn tại trong cửa hàng</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:42.029" endtime="20220228 13:51:42.030"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:42.030"></status>
</kw>
<doc>Tạo mới nhân viên trùng mã nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:41.680" endtime="20220228 13:51:42.030" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Create empty employee">
<kw name="Create Empty Employee" library="employee">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1235698</arg>
<arg>NV${random_number}</arg>
<arg>\ \</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.031" level="INFO">${list_format} = ['1235698', 'NV23983364', ' ', 34428, 34428]</msg>
<status status="PASS" starttime="20220228 13:51:42.031" endtime="20220228 13:51:42.031"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:42.031" level="INFO">Length is 5</msg>
<msg timestamp="20220228 13:51:42.031" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 13:51:42.031" endtime="20220228 13:51:42.031"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.032" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:42.032" endtime="20220228 13:51:42.032"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.032" level="INFO">${value_temp} = 1235698</msg>
<status status="PASS" starttime="20220228 13:51:42.032" endtime="20220228 13:51:42.032"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.032" level="INFO">${data_format} = {"id":1235698,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:42.032" endtime="20220228 13:51:42.032"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.032" endtime="20220228 13:51:42.032"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.033" level="INFO">${value_temp} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:42.033" endtime="20220228 13:51:42.033"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.033" level="INFO">${value_temp} = NV23983364</msg>
<status status="PASS" starttime="20220228 13:51:42.033" endtime="20220228 13:51:42.033"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.033" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:42.033" endtime="20220228 13:51:42.033"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.032" endtime="20220228 13:51:42.033"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.034" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220228 13:51:42.034" endtime="20220228 13:51:42.034"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.034" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220228 13:51:42.034" endtime="20220228 13:51:42.034"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.034" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":" ","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:42.034" endtime="20220228 13:51:42.034"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.033" endtime="20220228 13:51:42.034"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.035" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.034" endtime="20220228 13:51:42.035"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.035" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.035" endtime="20220228 13:51:42.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.035" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:42.035" endtime="20220228 13:51:42.035"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.034" endtime="20220228 13:51:42.035"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.036" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.036" endtime="20220228 13:51:42.036"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.036" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.036" endtime="20220228 13:51:42.036"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.037" level="INFO">${data_format} = {"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:42.037" endtime="20220228 13:51:42.037"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.036" endtime="20220228 13:51:42.037"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.031" endtime="20220228 13:51:42.037"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.037" endtime="20220228 13:51:42.037"></status>
</kw>
<msg timestamp="20220228 13:51:42.037" level="INFO">${data} = {"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:42.031" endtime="20220228 13:51:42.037"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 13:51:42.038" level="INFO">${data} = (None, '{"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:42.037" endtime="20220228 13:51:42.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.038" level="INFO">(None, '{"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:42.038" endtime="20220228 13:51:42.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 13:51:42.038" level="INFO">${formdata} = {'employee': (None, '{"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:42.038" endtime="20220228 13:51:42.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.038" level="INFO">{'employee': (None, '{"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:42.038" endtime="20220228 13:51:42.038"></status>
</kw>
<kw name="Post Request Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}</arg>
<arg>${formdata}</arg>
<arg>400</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:42.640" level="INFO">Post Request using : alias=session, uri=/employees, data=&lt;empty&gt;, headers=None, files={'employee': (None, '{"id":1235698,"code":"NV23983364","name":" ","branchId":34428,"userId":null,"workBranchIds":[34428]}')}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:42.640" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:42.640" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.039" endtime="20220228 13:51:42.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.640" level="INFO">{'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPredicateValidator'}]}</msg>
<status status="PASS" starttime="20220228 13:51:42.640" endtime="20220228 13:51:42.640"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.640" endtime="20220228 13:51:42.640"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.640" endtime="20220228 13:51:42.640"></status>
</kw>
<msg timestamp="20220228 13:51:42.640" level="INFO">${resp} = {'message': 'Có lỗi khi tạo dữ liệu', 'errors': [{'message': 'Tên nhân viên không được để trống', 'code': 'PredicateValidator'}, {'message': 'Mã nhân viên đã tồn tại trong cửa hàng', 'code': 'AsyncPre...</msg>
<status status="PASS" starttime="20220228 13:51:42.039" endtime="20220228 13:51:42.640"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.errors..message</arg>
</arguments>
<assign>
<var>${mess_err}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:42.656" level="INFO">${result} = ['Tên nhân viên không được để trống', 'Mã nhân viên đã tồn tại trong cửa hàng']</msg>
<status status="PASS" starttime="20220228 13:51:42.640" endtime="20220228 13:51:42.656"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:42.656" level="INFO">Length is 2</msg>
<msg timestamp="20220228 13:51:42.656" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 13:51:42.656" endtime="20220228 13:51:42.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:42.656" endtime="20220228 13:51:42.656"></status>
</kw>
<msg timestamp="20220228 13:51:42.656" level="INFO">${result} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220228 13:51:42.656" endtime="20220228 13:51:42.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<msg timestamp="20220228 13:51:42.666" level="INFO">${mess_err} = Tên nhân viên không được để trống</msg>
<status status="PASS" starttime="20220228 13:51:42.640" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_err}</arg>
<arg>Tên nhân viên không được để trống</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.030" endtime="20220228 13:51:42.666"></status>
</kw>
<doc>Tạo mới nhân viên rỗng</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:42.030" endtime="20220228 13:51:42.666" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Update employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.666" level="INFO">${list_format} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:42.666" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:42.666" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.666" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:42.666" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:42.666" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<msg timestamp="20220228 13:51:42.666" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<msg timestamp="20220228 13:51:42.666" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.666"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:42.895" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428, headers=None json=None</msg>
<msg timestamp="20220228 13:51:42.895" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:42.895" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.896" level="INFO">{'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:47:18.3500000', 'modifiedBy': 59211, 'modifiedDate': '2021-07-15T09:40:49.3850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417302, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000180802}]}, {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:46:43.7070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088301, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003701}]}, {'id': 100000000107402, 'code': 'NV23983364', 'name': 'FTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, {'id': 170000000116004, 'code': 'NV000015', 'name': 'had', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305626, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:33:40.6130000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:42:03.3430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 170000000368804, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 170000000116004}]}, {'id': 100000000106203, 'code': 'NV000017', 'name': 'hihi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-12-17T00:50:22.5230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000190703, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000106203}]}, {'id': 100000000003301, 'code': 'NV000001', 'name': 'ik', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-04-20T11:20:27.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003301}]}, {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:36.1970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107401}]}, {'id': 100000000107301, 'code': 'NV284650', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107301}]}, {'id': 160000000211319, 'code': 'NV000007', 'name': 'nghĩa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T15:09:03.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['11'], 'employeeBranches': [{'id': 160000000363920, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211319}]}, {'id': 160000000211318, 'code': 'NV000006', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T14:52:02.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 160000000363919, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211318}]}, {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-05-06T09:27:04.9000000', 'modifiedBy': 59211, 'modifiedDate': '2021-06-15T18:46:54.8130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003501}]}, {'id': 60000000183102, 'code': 'NV000014', 'name': 'Nhân viên', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305625, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:26:25.6530000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:43:49.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001419702, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000183102}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:42.895" endtime="20220228 13:51:42.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:42.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.896" endtime="20220228 13:51:42.896"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.897" endtime="20220228 13:51:42.897"></status>
</kw>
<msg timestamp="20220228 13:51:42.897" level="INFO">${resp} = {'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.897"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:42.905" level="INFO">${list} = [60000000180802, 100000000003701, 100000000107402, 170000000116004, 100000000106203, 100000000003301, 100000000107401, 100000000107301, 160000000211319, 160000000211318, 100000000003501, 6000000018310...</msg>
<status status="PASS" starttime="20220228 13:51:42.897" endtime="20220228 13:51:42.905"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:42.916" level="INFO">${value} = 100000000107401</msg>
<status status="PASS" starttime="20220228 13:51:42.905" endtime="20220228 13:51:42.916"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:42.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:42.916" endtime="20220228 13:51:42.916"></status>
</kw>
<msg timestamp="20220228 13:51:42.916" level="INFO">${id_employee} = 100000000107401</msg>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:42.916"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.078" level="INFO">Get Request using : alias=session, uri=/employees/100000000107401, headers=None json=None</msg>
<msg timestamp="20220228 13:51:43.078" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.078" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:42.916" endtime="20220228 13:51:43.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.078" level="INFO">{'result': {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:36.1970000', 'isDeleted': False, 'clockings': [{'id': 100000000927701, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-04T14:00:00.0000000', 'endTime': '2022-02-04T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927702, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-05T14:00:00.0000000', 'endTime': '2022-02-05T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927703, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-06T14:00:00.0000000', 'endTime': '2022-02-06T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927704, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-07T14:00:00.0000000', 'endTime': '2022-02-07T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927705, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-08T14:00:00.0000000', 'endTime': '2022-02-08T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927706, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-09T14:00:00.0000000', 'endTime': '2022-02-09T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927707, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-10T14:00:00.0000000', 'endTime': '2022-02-10T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927708, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-11T14:00:00.0000000', 'endTime': '2022-02-11T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927709, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-12T14:00:00.0000000', 'endTime': '2022-02-12T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927710, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-13T14:00:00.0000000', 'endTime': '2022-02-13T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927711, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-14T14:00:00.0000000', 'endTime': '2022-02-14T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927712, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-15T14:00:00.0000000', 'endTime': '2022-02-15T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927713, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-16T14:00:00.0000000', 'endTime': '2022-02-16T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927714, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-17T14:00:00.0000000', 'endTime': '2022-02-17T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927715, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-18T14:00:00.0000000', 'endTime': '2022-02-18T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927716, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-19T14:00:00.0000000', 'endTime': '2022-02-19T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927717, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-20T14:00:00.0000000', 'endTime': '2022-02-20T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927718, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-21T14:00:00.0000000', 'endTime': '2022-02-21T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927719, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-22T14:00:00.0000000', 'endTime': '2022-02-22T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927720, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-23T14:00:00.0000000', 'endTime': '2022-02-23T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927721, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-24T14:00:00.0000000', 'endTime': '2022-02-24T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927722, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-25T14:00:00.0000000', 'endTime': '2022-02-25T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927723, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-26T14:00:00.0000000', 'endTime': '2022-02-26T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927724, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-27T14:00:00.0000000', 'endTime': '2022-02-27T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927725, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-02-28T14:00:00.0000000', 'endTime': '2022-02-28T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927726, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-01T14:00:00.0000000', 'endTime': '2022-03-01T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927727, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-02T14:00:00.0000000', 'endTime': '2022-03-02T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927728, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-03T14:00:00.0000000', 'endTime': '2022-03-03T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927729, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 2, 'startTime': '2022-03-04T14:00:00.0000000', 'endTime': '2022-03-04T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2022-03-04T07:26:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927730, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-05T14:00:00.0000000', 'endTime': '2022-03-05T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927731, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-06T14:00:00.0000000', 'endTime': '2022-03-06T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927732, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-07T14:00:00.0000000', 'endTime': '2022-03-07T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927733, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-08T14:00:00.0000000', 'endTime': '2022-03-08T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927734, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-09T14:00:00.0000000', 'endTime': '2022-03-09T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927735, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-10T14:00:00.0000000', 'endTime': '2022-03-10T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927736, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-11T14:00:00.0000000', 'endTime': '2022-03-11T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927737, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-12T14:00:00.0000000', 'endTime': '2022-03-12T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927738, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-13T14:00:00.0000000', 'endTime': '2022-03-13T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927739, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-14T14:00:00.0000000', 'endTime': '2022-03-14T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927740, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-15T14:00:00.0000000', 'endTime': '2022-03-15T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927741, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-16T14:00:00.0000000', 'endTime': '2022-03-16T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927742, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-17T14:00:00.0000000', 'endTime': '2022-03-17T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927743, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-18T14:00:00.0000000', 'endTime': '2022-03-18T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927744, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-19T14:00:00.0000000', 'endTime': '2022-03-19T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927745, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-20T14:00:00.0000000', 'endTime': '2022-03-20T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927746, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-21T14:00:00.0000000', 'endTime': '2022-03-21T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927747, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-22T14:00:00.0000000', 'endTime': '2022-03-22T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927748, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-23T14:00:00.0000000', 'endTime': '2022-03-23T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927749, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-24T14:00:00.0000000', 'endTime': '2022-03-24T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927750, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-25T14:00:00.0000000', 'endTime': '2022-03-25T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927751, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-26T14:00:00.0000000', 'endTime': '2022-03-26T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927752, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 3, 'startTime': '2022-03-27T14:00:00.0000000', 'endTime': '2022-03-27T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2022-03-27T14:00:00.0000000', 'checkOutDate': '2022-03-27T22:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927753, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 3, 'startTime': '2022-03-28T14:00:00.0000000', 'endTime': '2022-03-28T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkOutDate': '2022-03-28T22:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927754, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-29T14:00:00.0000000', 'endTime': '2022-03-29T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927755, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-30T14:00:00.0000000', 'endTime': '2022-03-30T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927756, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-03-31T14:00:00.0000000', 'endTime': '2022-03-31T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927757, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-01T14:00:00.0000000', 'endTime': '2022-04-01T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927758, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-02T14:00:00.0000000', 'endTime': '2022-04-02T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927759, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-03T14:00:00.0000000', 'endTime': '2022-04-03T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927760, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-04T14:00:00.0000000', 'endTime': '2022-04-04T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927761, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-05T14:00:00.0000000', 'endTime': '2022-04-05T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927762, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-06T14:00:00.0000000', 'endTime': '2022-04-06T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927763, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-07T14:00:00.0000000', 'endTime': '2022-04-07T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927764, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-08T14:00:00.0000000', 'endTime': '2022-04-08T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927765, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-09T14:00:00.0000000', 'endTime': '2022-04-09T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927766, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-11T14:00:00.0000000', 'endTime': '2022-04-11T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927767, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-12T14:00:00.0000000', 'endTime': '2022-04-12T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927768, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-13T14:00:00.0000000', 'endTime': '2022-04-13T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927769, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-14T14:00:00.0000000', 'endTime': '2022-04-14T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927770, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-15T14:00:00.0000000', 'endTime': '2022-04-15T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927771, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-16T14:00:00.0000000', 'endTime': '2022-04-16T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927772, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-17T14:00:00.0000000', 'endTime': '2022-04-17T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927773, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-18T14:00:00.0000000', 'endTime': '2022-04-18T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927774, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-19T14:00:00.0000000', 'endTime': '2022-04-19T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927775, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-20T14:00:00.0000000', 'endTime': '2022-04-20T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927776, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-21T14:00:00.0000000', 'endTime': '2022-04-21T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927777, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-22T14:00:00.0000000', 'endTime': '2022-04-22T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927778, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-23T14:00:00.0000000', 'endTime': '2022-04-23T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927779, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-24T14:00:00.0000000', 'endTime': '2022-04-24T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927780, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-25T14:00:00.0000000', 'endTime': '2022-04-25T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927781, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-26T14:00:00.0000000', 'endTime': '2022-04-26T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927782, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-27T14:00:00.0000000', 'endTime': '2022-04-27T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927783, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-28T14:00:00.0000000', 'endTime': '2022-04-28T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000927784, 'shiftId': 60000000150502, 'timeSheetId': 100000000192001, 'employeeId': 100000000107401, 'workById': 100000000107401, 'clockingStatus': 1, 'startTime': '2022-04-29T14:00:00.0000000', 'endTime': '2022-04-29T22:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000192101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107401}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.078" endtime="20220228 13:51:43.078"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:43.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.078" endtime="20220228 13:51:43.078"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.078" endtime="20220228 13:51:43.078"></status>
</kw>
<msg timestamp="20220228 13:51:43.078" level="INFO">${resp} = {'result': {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardN...</msg>
<status status="PASS" starttime="20220228 13:51:42.916" endtime="20220228 13:51:43.078"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:43.103" level="INFO">${list} = ['NV357232']</msg>
<status status="PASS" starttime="20220228 13:51:43.078" endtime="20220228 13:51:43.103"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value} = NV357232</msg>
<status status="PASS" starttime="20220228 13:51:43.103" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<msg timestamp="20220228 13:51:43.109" level="INFO">${code_employee} = NV357232</msg>
<status status="PASS" starttime="20220228 13:51:42.916" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Update Employee" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>UD${random_number}</arg>
<arg>Update${random_str}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${list} = [100000000107402, 'UD23983364', 'UpdateFTBE', 34428, 34428]</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_employee}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">Length is 5</msg>
<msg timestamp="20220228 13:51:43.109" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data_format} = {"id":100000000107402,"code":"[D1]","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = UD23983364</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = UD23983364</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data_format} = {"id":100000000107402,"code":"UD23983364","name":"[D2]","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = UpdateFTBE</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = UpdateFTBE</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data_format} = {"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":[D3],"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data_format} = {"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[[D4]]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data_format} = {"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data} = {"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(None,'${data}')</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${data} = (None, '{"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>employee=${data}</arg>
</arguments>
<assign>
<var>${formdata}</var>
</assign>
<msg timestamp="20220228 13:51:43.109" level="INFO">${formdata} = {'employee': (None, '{"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${formdata}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.109" level="INFO">{'employee': (None, '{"id":100000000107402,"code":"UD23983364","name":"UpdateFTBE","branchId":34428,"userId":null,"workBranchIds":[34428]}')}</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.109"></status>
</kw>
<kw name="Update Request Json KV Use Formdata KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>${formdata}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${headers_not_contenType}</arg>
<arg>files=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.299" level="INFO">Put Request using : alias=session, uri=/employees/100000000107402, data=None,                     headers={'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:43.299" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.299" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.299" level="INFO">{'result': {'id': 100000000107402, 'code': 'UD23983364', 'name': 'UpdateFTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'modifiedBy': 59211, 'modifiedDate': '2022-02-28T13:51:43.9536283+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': []}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.299" endtime="20220228 13:51:43.299"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.299" endtime="20220228 13:51:43.299"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.299" endtime="20220228 13:51:43.299"></status>
</kw>
<msg timestamp="20220228 13:51:43.315" level="INFO">${resp} = {'result': {'id': 100000000107402, 'code': 'UD23983364', 'name': 'UpdateFTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': ''...</msg>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.315"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.109" endtime="20220228 13:51:43.315"></status>
</kw>
<doc>Cập nhật nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:42.666" endtime="20220228 13:51:43.315" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Get pin code">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.315" level="INFO">${list_format} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.315"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:43.315" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:43.315" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.315"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.322" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.322"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.322" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.322"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.322" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.322"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.322"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.322"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.322"></status>
</kw>
<msg timestamp="20220228 13:51:43.322" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.322"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.322"></status>
</kw>
<msg timestamp="20220228 13:51:43.322" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.322"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.447" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428, headers=None json=None</msg>
<msg timestamp="20220228 13:51:43.447" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.447" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.447" level="INFO">{'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:47:18.3500000', 'modifiedBy': 59211, 'modifiedDate': '2021-07-15T09:40:49.3850000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417302, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000180802}]}, {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:46:43.7070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088301, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003701}]}, {'id': 170000000116004, 'code': 'NV000015', 'name': 'had', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305626, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:33:40.6130000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:42:03.3430000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 170000000368804, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 170000000116004}]}, {'id': 100000000106203, 'code': 'NV000017', 'name': 'hihi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-12-17T00:50:22.5230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000190703, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000106203}]}, {'id': 100000000003301, 'code': 'NV000001', 'name': 'ik', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-04-20T11:20:27.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003301}]}, {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:36.1970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107401}]}, {'id': 100000000107301, 'code': 'NV284650', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107301}]}, {'id': 160000000211319, 'code': 'NV000007', 'name': 'nghĩa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T15:09:03.9070000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['11'], 'employeeBranches': [{'id': 160000000363920, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211319}]}, {'id': 160000000211318, 'code': 'NV000006', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T14:52:02.2270000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 160000000363919, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211318}]}, {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-05-06T09:27:04.9000000', 'modifiedBy': 59211, 'modifiedDate': '2021-06-15T18:46:54.8130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003501}]}, {'id': 100000000107402, 'code': 'UD23983364', 'name': 'UpdateFTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000', 'modifiedBy': 59211, 'modifiedDate': '2022-02-28T13:51:43.9530000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, {'id': 60000000183102, 'code': 'NV000014', 'name': 'Nhân viên', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305625, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:26:25.6530000', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:43:49.2970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001419702, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000183102}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.447" endtime="20220228 13:51:43.447"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:43.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.447" endtime="20220228 13:51:43.459"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.459" endtime="20220228 13:51:43.459"></status>
</kw>
<msg timestamp="20220228 13:51:43.459" level="INFO">${resp} = {'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.459"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:43.478" level="INFO">${list} = [60000000180802, 100000000003701, 170000000116004, 100000000106203, 100000000003301, 100000000107401, 100000000107301, 160000000211319, 160000000211318, 100000000003501, 100000000107402, 6000000018310...</msg>
<status status="PASS" starttime="20220228 13:51:43.459" endtime="20220228 13:51:43.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:43.478" level="INFO">${value} = 100000000003501</msg>
<status status="PASS" starttime="20220228 13:51:43.478" endtime="20220228 13:51:43.478"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.478" endtime="20220228 13:51:43.478"></status>
</kw>
<msg timestamp="20220228 13:51:43.478" level="INFO">${id_employee} = 100000000003501</msg>
<status status="PASS" starttime="20220228 13:51:43.322" endtime="20220228 13:51:43.478"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.593" level="INFO">Get Request using : alias=session, uri=/employees/100000000003501, headers=None json=None</msg>
<msg timestamp="20220228 13:51:43.593" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.594" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.478" endtime="20220228 13:51:43.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.594" level="INFO">{'result': {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-05-06T09:27:04.9000000', 'modifiedBy': 59211, 'modifiedDate': '2021-06-15T18:46:54.8130000', 'isDeleted': False, 'clockings': [{'id': 60000004541401, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541402, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541403, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541404, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541405, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541406, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541407, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541408, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-14T07:00:00.0000000', 'endTime': '2021-05-14T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-14T07:00:00.0000000', 'checkOutDate': '2021-05-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541409, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541410, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541411, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541412, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541413, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-19T07:00:00.0000000', 'checkOutDate': '2021-05-19T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541414, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541415, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541416, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-22T07:00:00.0000000', 'checkOutDate': '2021-05-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541417, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541418, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541419, 'shiftId': 100000000003301, 'timeSheetId': 60000000604010, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000373808, 'shiftId': 100000000003301, 'timeSheetId': 100000000046003, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-07T07:00:00.0000000', 'endTime': '2021-05-07T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000382701, 'shiftId': 100000000003301, 'timeSheetId': 100000000047001, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 1, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000382702, 'shiftId': 100000000003301, 'timeSheetId': 100000000047001, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-03T07:00:00.0000000', 'checkOutDate': '2021-05-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000382703, 'shiftId': 100000000003301, 'timeSheetId': 100000000047001, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000382704, 'shiftId': 100000000003301, 'timeSheetId': 100000000047001, 'employeeId': 100000000003501, 'workById': 100000000003501, 'clockingStatus': 3, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-05T07:00:00.0000000', 'checkOutDate': '2021-05-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000088101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003501}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.594" endtime="20220228 13:51:43.594"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:43.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.594" endtime="20220228 13:51:43.595"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.595" endtime="20220228 13:51:43.595"></status>
</kw>
<msg timestamp="20220228 13:51:43.595" level="INFO">${resp} = {'result': {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardNa...</msg>
<status status="PASS" starttime="20220228 13:51:43.478" endtime="20220228 13:51:43.595"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:43.615" level="INFO">${list} = ['NV000002']</msg>
<status status="PASS" starttime="20220228 13:51:43.595" endtime="20220228 13:51:43.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:43.616" level="INFO">${value} = NV000002</msg>
<status status="PASS" starttime="20220228 13:51:43.616" endtime="20220228 13:51:43.616"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.617" endtime="20220228 13:51:43.617"></status>
</kw>
<msg timestamp="20220228 13:51:43.617" level="INFO">${code_employee} = NV000002</msg>
<status status="PASS" starttime="20220228 13:51:43.478" endtime="20220228 13:51:43.617"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.617" endtime="20220228 13:51:43.617"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.618"></status>
</kw>
<kw name="Get Pin Code" library="employee">
<arguments>
<arg>${id_employee}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_employee}</arg>
<arg>${user_login}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:43.618" level="INFO">${list} = [100000000107402, 59211]</msg>
<status status="PASS" starttime="20220228 13:51:43.618" endtime="20220228 13:51:43.618"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_pin_code}</arg>
<arg>${list}</arg>
</arguments>
<assign>
<var>${enp_pin_code}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:43.619" level="INFO">Length is 2</msg>
<msg timestamp="20220228 13:51:43.619" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 13:51:43.619" endtime="20220228 13:51:43.619"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.619" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:43.619" endtime="20220228 13:51:43.619"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.619" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:43.619" endtime="20220228 13:51:43.619"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.620" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=100000000107402&amp;UserId=[D1]</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.619" endtime="20220228 13:51:43.620"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.620" level="INFO">${value_temp} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.620" level="INFO">${value_temp} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.620" level="INFO">${data_format} = /employees/two-fa-pin?EmployeeId=100000000107402&amp;UserId=59211</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.619" endtime="20220228 13:51:43.620"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.620"></status>
</kw>
<msg timestamp="20220228 13:51:43.620" level="INFO">${enp_pin_code} = /employees/two-fa-pin?EmployeeId=100000000107402&amp;UserId=59211</msg>
<status status="PASS" starttime="20220228 13:51:43.618" endtime="20220228 13:51:43.620"></status>
</kw>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_pin_code}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">Get Request using : alias=session, uri=/employees/two-fa-pin?EmployeeId=100000000107402&amp;UserId=59211, headers=None json=None</msg>
<msg timestamp="20220228 13:51:43.762" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.762" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.762" level="INFO">{'result': {'pin': '936465'}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:43.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<msg timestamp="20220228 13:51:43.762" level="INFO">${resp} = {'result': {'pin': '936465'}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.620" endtime="20220228 13:51:43.762"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.618" endtime="20220228 13:51:43.762"></status>
</kw>
<doc>Lấy mã xác nhận cho chấm công gps</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:43.315" endtime="20220228 13:51:43.762" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Add work schedule">
<kw name="Add Work Schedule" library="employee">
<kw name="Format enp shift branch" library="shift">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">${list_format} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_shift_branch}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:43.762" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.762" level="INFO">${data_format} = /shifts/multiple-branch/orderby-from-to?BranchIds=34428&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<msg timestamp="20220228 13:51:43.762" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=34428&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_shift_branch}</arg>
<arg>${enp_shift_branch}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.762" level="INFO">${enp_shift_branch} = /shifts/multiple-branch/orderby-from-to?BranchIds=34428&amp;ShiftIds=</msg>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.762"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Create Shift" library="shift">
<arguments>
<arg>123456</arg>
<arg>${random_str}</arg>
<arg>${branchId}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp_shift}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id}</arg>
<arg>${name}</arg>
<arg>${branch_id}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${list_format} = ['123456', 'FTBE', 34428]</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_shift}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_shift}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">Length is 3</msg>
<msg timestamp="20220228 13:51:43.777" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${data_format} = {"shift":{"id":123456,"name":"[D1]","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = FTBE</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${data_format} = {"shift":{"id":123456,"name":"FTBE","from":420,"to":660,"isActive":true,"branchId":[D2],"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:43.777" level="INFO">${data_format} = {"shift":{"id":123456,"name":"FTBE","from":420,"to":660,"isActive":true,"branchId":34428,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<msg timestamp="20220228 13:51:43.777" level="INFO">${data_shift} = {"shift":{"id":123456,"name":"FTBE","from":420,"to":660,"isActive":true,"branchId":34428,"checkInBefore":240,"checkOutAfter":840}}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.777"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}</arg>
<arg>${data_shift}</arg>
<arg>${expected_statusCode}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.920" level="INFO">Post Request using : alias=session, uri=/shifts, data={"shift":{"id":123456,"name":"FTBE","from":420,"to":660,"isActive":true,"branchId":34428,"checkInBefore":240,"checkOutAfter":840}}, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:43.920" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.920" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.920" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.920"></status>
</kw>
<msg timestamp="20220228 13:51:43.920" level="INFO">${resp} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.920" level="INFO">{'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.920"></status>
</kw>
<msg timestamp="20220228 13:51:43.920" level="INFO">${resp_shift} = {'message': 'Tạo ca thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:43.777" endtime="20220228 13:51:43.920"></status>
</kw>
<kw name="Get RanDom ID Shift And Get Name From ID" library="shift">
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift_branch}</arg>
<arg>$..result[?(@.isActive==true)].id</arg>
</arguments>
<assign>
<var>${id_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:43.999" level="INFO">Get Request using : alias=session, uri=/shifts/multiple-branch/orderby-from-to?BranchIds=34428&amp;ShiftIds=, headers=None json=None</msg>
<msg timestamp="20220228 13:51:43.999" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:43.999" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.999" level="INFO">{'result': [{'id': 100000000003301, 'name': 'g', 'from': 300, 'oldFrom': 0, 'to': 840, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 120, 'checkOutAfter': 1020}, {'id': 100000000105201, 'name': 'FTBE', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 100000000105101, 'name': 'UpdateCcNz', 'from': 420, 'oldFrom': 0, 'to': 660, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 240, 'checkOutAfter': 840}, {'id': 60000000150502, 'name': 'd', 'from': 840, 'oldFrom': 0, 'to': 1320, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 660, 'checkOutAfter': 60}], 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:43.999" endtime="20220228 13:51:43.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:43.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:43.999" endtime="20220228 13:51:43.999"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:43.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:43.999" endtime="20220228 13:51:43.999"></status>
</kw>
<msg timestamp="20220228 13:51:43.999" level="INFO">${resp} = {'result': [{'id': 100000000003301, 'name': 'g', 'from': 300, 'oldFrom': 0, 'to': 840, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 120, 'checkOutAfter': 1020}...</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:43.999"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:44.015" level="INFO">${list} = [100000000003301, 100000000105201, 100000000105101, 60000000150502]</msg>
<status status="PASS" starttime="20220228 13:51:43.999" endtime="20220228 13:51:44.015"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:44.015" level="INFO">${value} = 100000000003301</msg>
<status status="PASS" starttime="20220228 13:51:44.015" endtime="20220228 13:51:44.015"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.015" endtime="20220228 13:51:44.015"></status>
</kw>
<msg timestamp="20220228 13:51:44.015" level="INFO">${id_shift} = 100000000003301</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:44.015"></status>
</kw>
<kw name="Get Detail From Id KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_shift}/${id_shift}</arg>
<arg>$..name</arg>
</arguments>
<assign>
<var>${name_shift}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:44.094" level="INFO">Get Request using : alias=session, uri=/shifts/100000000003301, headers=None json=None</msg>
<msg timestamp="20220228 13:51:44.094" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:44.094" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:44.015" endtime="20220228 13:51:44.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.094" level="INFO">{'result': {'id': 100000000003301, 'name': 'g', 'from': 300, 'oldFrom': 0, 'to': 840, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 120, 'checkOutAfter': 1020}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:44.094" endtime="20220228 13:51:44.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:44.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:44.094" endtime="20220228 13:51:44.094"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.094" endtime="20220228 13:51:44.094"></status>
</kw>
<msg timestamp="20220228 13:51:44.094" level="INFO">${resp} = {'result': {'id': 100000000003301, 'name': 'g', 'from': 300, 'oldFrom': 0, 'to': 840, 'oldTo': 0, 'isActive': True, 'branchId': 34428, 'tenantId': 122796, 'checkInBefore': 120, 'checkOutAfter': 1020},...</msg>
<status status="PASS" starttime="20220228 13:51:44.015" endtime="20220228 13:51:44.094"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:44.120" level="INFO">${result} = ['g']</msg>
<status status="PASS" starttime="20220228 13:51:44.094" endtime="20220228 13:51:44.120"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:44.121" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:44.121" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:44.120" endtime="20220228 13:51:44.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:44.121" endtime="20220228 13:51:44.121"></status>
</kw>
<msg timestamp="20220228 13:51:44.121" level="INFO">${result} = g</msg>
<status status="PASS" starttime="20220228 13:51:44.121" endtime="20220228 13:51:44.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.122" endtime="20220228 13:51:44.122"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.121" endtime="20220228 13:51:44.122"></status>
</kw>
<msg timestamp="20220228 13:51:44.122" level="INFO">${value} = g</msg>
<status status="PASS" starttime="20220228 13:51:44.094" endtime="20220228 13:51:44.122"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.122" endtime="20220228 13:51:44.122"></status>
</kw>
<msg timestamp="20220228 13:51:44.122" level="INFO">${name_shift} = g</msg>
<status status="PASS" starttime="20220228 13:51:44.015" endtime="20220228 13:51:44.122"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_shift}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.122" endtime="20220228 13:51:44.123"></status>
</kw>
<msg timestamp="20220228 13:51:44.123" level="INFO">${id_shift} = 100000000003301</msg>
<status status="PASS" starttime="20220228 13:51:43.920" endtime="20220228 13:51:44.123"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>12-12-2021</arg>
<arg>12-01-2022</arg>
<arg>${id_employee}</arg>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
<arg>${id_shift}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.123" level="INFO">${list_format} = ['12-12-2021', '12-01-2022', 100000000107402, 34428, 34428, 100000000003301]</msg>
<status status="PASS" starttime="20220228 13:51:44.123" endtime="20220228 13:51:44.123"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_add_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:44.124" level="INFO">Length is 6</msg>
<msg timestamp="20220228 13:51:44.124" level="INFO">${length} = 6</msg>
<status status="PASS" starttime="20220228 13:51:44.124" endtime="20220228 13:51:44.124"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.124" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220228 13:51:44.124" endtime="20220228 13:51:44.124"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.125" level="INFO">${value_temp} = 12-12-2021</msg>
<status status="PASS" starttime="20220228 13:51:44.125" endtime="20220228 13:51:44.125"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.125" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"[D1]","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts":[{"sh...</msg>
<status status="PASS" starttime="20220228 13:51:44.125" endtime="20220228 13:51:44.125"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.124" endtime="20220228 13:51:44.125"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.125" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220228 13:51:44.125" endtime="20220228 13:51:44.125"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.126" level="INFO">${value_temp} = 12-01-2022</msg>
<status status="PASS" starttime="20220228 13:51:44.126" endtime="20220228 13:51:44.126"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.126" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":[D2],"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeSheetShifts"...</msg>
<status status="PASS" starttime="20220228 13:51:44.126" endtime="20220228 13:51:44.126"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.125" endtime="20220228 13:51:44.126"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.126" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:44.126" endtime="20220228 13:51:44.126"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.127" level="INFO">${value_temp} = 100000000107402</msg>
<status status="PASS" starttime="20220228 13:51:44.126" endtime="20220228 13:51:44.127"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.127" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":[D3],"branchIds":[[D4]],"timeS...</msg>
<status status="PASS" starttime="20220228 13:51:44.127" endtime="20220228 13:51:44.127"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.126" endtime="20220228 13:51:44.127"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.127" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:44.127" endtime="20220228 13:51:44.127"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.128" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:44.127" endtime="20220228 13:51:44.128"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.128" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":34428,"branchIds":[[D4]],"time...</msg>
<status status="PASS" starttime="20220228 13:51:44.128" endtime="20220228 13:51:44.128"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.127" endtime="20220228 13:51:44.128"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.128" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:44.128" endtime="20220228 13:51:44.128"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.129" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:44.128" endtime="20220228 13:51:44.129"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.129" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":34428,"branchIds":[34428],"tim...</msg>
<status status="PASS" starttime="20220228 13:51:44.129" endtime="20220228 13:51:44.129"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.128" endtime="20220228 13:51:44.129"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.130" level="INFO">${value_temp} = 100000000003301</msg>
<status status="PASS" starttime="20220228 13:51:44.130" endtime="20220228 13:51:44.130"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.131" level="INFO">${value_temp} = 100000000003301</msg>
<status status="PASS" starttime="20220228 13:51:44.130" endtime="20220228 13:51:44.131"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.131" level="INFO">${data_format} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":34428,"branchIds":[34428],"tim...</msg>
<status status="PASS" starttime="20220228 13:51:44.131" endtime="20220228 13:51:44.131"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.129" endtime="20220228 13:51:44.131"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.124" endtime="20220228 13:51:44.131"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.131" endtime="20220228 13:51:44.132"></status>
</kw>
<msg timestamp="20220228 13:51:44.132" level="INFO">${data} = {"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":34428,"branchIds":[34428],"tim...</msg>
<status status="PASS" starttime="20220228 13:51:44.123" endtime="20220228 13:51:44.132"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_add_work_schedule}</arg>
<arg>${data}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:44.615" level="INFO">Post Request using : alias=session, uri=/timesheets, data={"TimeSheet":{"startDate":"12-12-2021","endDate":"12-01-2022","employeeId":100000000107402,"isRepeat":true,"hasEndDate":false,"repeatType":1,"repeatEachDay":1,"branchId":34428,"branchIds":[34428],"timeSheetShifts":[{"shiftIds":"100000000003301","repeatDaysOfWeek":null}]}}, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:44.615" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:44.615" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:44.133" endtime="20220228 13:51:44.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.616" level="INFO">{'result': {'id': 100000000193001, 'employeeId': 100000000107402, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDay': 1, 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'saveOnDaysOffOfBranch': False, 'saveOnHoliday': False, 'timeSheetStatus': 1, 'clockings': [{'id': 100000000936601, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-12T05:00:00.0000000', 'endTime': '2021-12-12T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936602, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-13T05:00:00.0000000', 'endTime': '2021-12-13T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936603, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-14T05:00:00.0000000', 'endTime': '2021-12-14T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936604, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-15T05:00:00.0000000', 'endTime': '2021-12-15T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936605, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-16T05:00:00.0000000', 'endTime': '2021-12-16T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936606, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-17T05:00:00.0000000', 'endTime': '2021-12-17T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936607, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-18T05:00:00.0000000', 'endTime': '2021-12-18T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936608, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-19T05:00:00.0000000', 'endTime': '2021-12-19T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936609, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-20T05:00:00.0000000', 'endTime': '2021-12-20T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936610, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-21T05:00:00.0000000', 'endTime': '2021-12-21T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936611, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-22T05:00:00.0000000', 'endTime': '2021-12-22T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936612, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-23T05:00:00.0000000', 'endTime': '2021-12-23T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936613, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-24T05:00:00.0000000', 'endTime': '2021-12-24T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936614, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-25T05:00:00.0000000', 'endTime': '2021-12-25T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936615, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-26T05:00:00.0000000', 'endTime': '2021-12-26T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936616, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-27T05:00:00.0000000', 'endTime': '2021-12-27T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936617, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-28T05:00:00.0000000', 'endTime': '2021-12-28T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936618, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-29T05:00:00.0000000', 'endTime': '2021-12-29T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936619, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-30T05:00:00.0000000', 'endTime': '2021-12-30T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936620, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2021-12-31T05:00:00.0000000', 'endTime': '2021-12-31T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936621, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-02T05:00:00.0000000', 'endTime': '2022-01-02T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936622, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-03T05:00:00.0000000', 'endTime': '2022-01-03T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936623, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-04T05:00:00.0000000', 'endTime': '2022-01-04T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936624, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-05T05:00:00.0000000', 'endTime': '2022-01-05T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936625, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-06T05:00:00.0000000', 'endTime': '2022-01-06T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936626, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-07T05:00:00.0000000', 'endTime': '2022-01-07T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936627, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-08T05:00:00.0000000', 'endTime': '2022-01-08T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936628, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-09T05:00:00.0000000', 'endTime': '2022-01-09T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936629, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-10T05:00:00.0000000', 'endTime': '2022-01-10T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936630, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-11T05:00:00.0000000', 'endTime': '2022-01-11T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 100000000936631, 'timeSheetId': 100000000193001, 'shiftId': 100000000003301, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-12T05:00:00.0000000', 'endTime': '2022-01-12T14:00:00.0000000', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:45.1930000', 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'clockingsOverlapTime': [{'id': 0, 'shiftId': 100000000003301, 'timeSheetId': -1, 'employeeId': 100000000107402, 'workById': 100000000107402, 'clockingStatus': 1, 'startTime': '2022-01-01T05:00:00.0000000', 'endTime': '2022-01-01T14:00:00.0000000', 'branchId': 34428, 'tenantId': 0, 'isDeleted': False, 'clockingHistories': [], 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'overlapType': 3, 'overlapHolidayName': 'Tết Dương lịch', 'clockingPaymentStatus': 0, 'clockingPenalizesDto': []}], 'timeSheetShifts': [{'id': -9223372036854774807, 'shiftIds': '100000000003301', 'timeSheetShiftStatus': 0, 'timeSheetId': 100000000193001}], 'hasEndDate': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:44.615" endtime="20220228 13:51:44.616"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:44.616" endtime="20220228 13:51:44.617"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.617" endtime="20220228 13:51:44.617"></status>
</kw>
<msg timestamp="20220228 13:51:44.617" level="INFO">${resp} = {'result': {'id': 100000000193001, 'employeeId': 100000000107402, 'startDate': '2021-12-12T00:00:00.0000000', 'endDate': '2022-01-12T23:59:59.0000000', 'isRepeat': True, 'repeatType': 1, 'repeatEachDa...</msg>
<status status="PASS" starttime="20220228 13:51:44.132" endtime="20220228 13:51:44.617"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_work_schedule}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:44.636" level="INFO">${result} = [100000000193001]</msg>
<status status="PASS" starttime="20220228 13:51:44.618" endtime="20220228 13:51:44.636"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:44.637" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<msg timestamp="20220228 13:51:44.637" level="INFO">${result} = 100000000193001</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<msg timestamp="20220228 13:51:44.637" level="INFO">${id_work_schedule} = 100000000193001</msg>
<status status="PASS" starttime="20220228 13:51:44.617" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
<arg>${id_work_schedule}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.637" level="INFO">${id_work_schedule} = 100000000193001</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:44.637"></status>
</kw>
<doc>Thêm lịch làm việc cho nhân viên tại MH nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:43.762" endtime="20220228 13:51:44.637" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Delete work schedule">
<kw name="Delete Work Schedule" library="employee">
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_work_schedule}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">${list_format} = [100000000193001]</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_del_work_schedule}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_del_work_schedule}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:44.637" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">${value_temp} = 100000000193001</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">${value_temp} = 100000000193001</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:44.637" level="INFO">${data_format} = {"Id":100000000193001}</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:44.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<msg timestamp="20220228 13:51:44.637" level="INFO">${data_del_work_schedule} = {"Id":100000000193001}</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:44.637"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_delete_work_schedule}</arg>
<arg>${data_del_work_schedule}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:45.418" level="INFO">Put Request using : alias=session, uri=/timesheets/cancelTimeSheet, data={"Id":100000000193001},                     headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMTAxLCJleHAiOjE2NDg0NTAzMDEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6IjRlZjZjZjA0ZjVlODQxMmI5N2Q0YmQ5NThkNDgzZWNkIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.i_-dJ9slRmpILwyM1S4gylagwW3H9Vho0YoQdwkMafsaj1Ka7bgHWtnV1FURMklZgKYMXrn1FBe7q9FX3FoSt786vAlsfBQxs4P5XJtefodevU6c4R0asrykilLVwrj7HSIxVsl8_oabM7aw-XQ2AyJmRLoAXJuweuE2kw63X0Kumk-YzudXmklco3UaZpU0UVczZdABO1RfOSmoZI31lRIsYUEyMnfdRhcnowm2m_pYehImChvKTn2oW60SHWW-ayJOfRMgGhPKK68ud8gD4-FxbFrUOlvOc9lGqdSd00XJkseuqGRgbEPVbxSltBJwhFIrFIMMaU6tcCWX310FnQ'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:45.418" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:45.419" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:45.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.419" level="INFO">{'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:45.419" endtime="20220228 13:51:45.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.419" endtime="20220228 13:51:45.420"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.420" endtime="20220228 13:51:45.420"></status>
</kw>
<msg timestamp="20220228 13:51:45.420" level="INFO">${resp} = {'message': 'Hủy lịch làm việc thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:45.420"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.message</arg>
</arguments>
<assign>
<var>${mess_validate}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:45.438" level="INFO">${result} = ['Hủy lịch làm việc thành công']</msg>
<status status="PASS" starttime="20220228 13:51:45.421" endtime="20220228 13:51:45.438"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:45.438" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:45.438" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:45.438" endtime="20220228 13:51:45.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:45.438" endtime="20220228 13:51:45.439"></status>
</kw>
<msg timestamp="20220228 13:51:45.439" level="INFO">${result} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220228 13:51:45.438" endtime="20220228 13:51:45.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.439" endtime="20220228 13:51:45.439"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:45.439" endtime="20220228 13:51:45.439"></status>
</kw>
<msg timestamp="20220228 13:51:45.439" level="INFO">${mess_validate} = Hủy lịch làm việc thành công</msg>
<status status="PASS" starttime="20220228 13:51:45.420" endtime="20220228 13:51:45.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${mess_validate}</arg>
<arg>Hủy lịch làm việc thành công</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:45.439" endtime="20220228 13:51:45.439"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:45.440"></status>
</kw>
<doc>Xóa lịch làm việc của nhân viên tại tab lịch làm việc của màn hình nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:44.637" endtime="20220228 13:51:45.440" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Delete Employee">
<kw name="Get Random ID Employee" library="employee">
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:45.441" level="INFO">${list_format} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:45.440" endtime="20220228 13:51:45.441"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:45.441" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:45.441" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:45.441" endtime="20220228 13:51:45.441"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:45.441" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:45.441" endtime="20220228 13:51:45.441"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:45.442" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:45.442" endtime="20220228 13:51:45.442"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:45.442" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:45.442" endtime="20220228 13:51:45.442"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:45.441" endtime="20220228 13:51:45.442"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:45.441" endtime="20220228 13:51:45.442"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.442" endtime="20220228 13:51:45.442"></status>
</kw>
<msg timestamp="20220228 13:51:45.442" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:45.441" endtime="20220228 13:51:45.442"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.442" endtime="20220228 13:51:45.443"></status>
</kw>
<msg timestamp="20220228 13:51:45.443" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428</msg>
<status status="PASS" starttime="20220228 13:51:45.440" endtime="20220228 13:51:45.443"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:45.535" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=34428, headers=None json=None</msg>
<msg timestamp="20220228 13:51:45.535" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:45.536" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.443" endtime="20220228 13:51:45.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.537" level="INFO">{'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:47:18.3500000+07:00', 'modifiedBy': 59211, 'modifiedDate': '2021-07-15T09:40:49.3850000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417302, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000180802}]}, {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:46:43.7070000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088301, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003701}]}, {'id': 170000000116004, 'code': 'NV000015', 'name': 'had', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305626, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:33:40.6130000+07:00', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:42:03.3430000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 170000000368804, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 170000000116004}]}, {'id': 100000000106203, 'code': 'NV000017', 'name': 'hihi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-12-17T00:50:22.5230000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000190703, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000106203}]}, {'id': 100000000003301, 'code': 'NV000001', 'name': 'ik', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-04-20T11:20:27.2270000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003301}]}, {'id': 100000000107401, 'code': 'NV357232', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:36.1970000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107401}]}, {'id': 100000000107301, 'code': 'NV284650', 'name': 'nfPI', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192001, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107301}]}, {'id': 160000000211319, 'code': 'NV000007', 'name': 'nghĩa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T15:09:03.9070000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['11'], 'employeeBranches': [{'id': 160000000363920, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211319}]}, {'id': 160000000211318, 'code': 'NV000006', 'name': 'phuoc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-07-16T14:52:02.2270000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 160000000363919, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 160000000211318}]}, {'id': 100000000003501, 'code': 'NV000002', 'name': 'rfg', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-05-06T09:27:04.9000000+07:00', 'modifiedBy': 59211, 'modifiedDate': '2021-06-15T18:46:54.8130000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000088101, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003501}]}, {'id': 100000000107402, 'code': 'UD23983364', 'name': 'UpdateFTBE', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:42.0200000+07:00', 'modifiedBy': 59211, 'modifiedDate': '2022-02-28T13:51:44.4420000+07:00', 'isDeleted': False, 'secretKeyTakenUserId': 59211, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000192102, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000107402}]}, {'id': 60000000183102, 'code': 'NV000014', 'name': 'Nhân viên', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 305625, 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-09-01T12:26:25.6530000+07:00', 'modifiedBy': 59211, 'modifiedDate': '2021-09-01T12:43:49.2970000+07:00', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001419702, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 60000000183102}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:45.536" endtime="20220228 13:51:45.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:45.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.537" endtime="20220228 13:51:45.538"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.538" endtime="20220228 13:51:45.538"></status>
</kw>
<msg timestamp="20220228 13:51:45.540" level="INFO">${resp} = {'result': {'total': 12, 'data': [{'id': 60000000180802, 'code': 'NV000004', 'name': 'dfer', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loc...</msg>
<status status="PASS" starttime="20220228 13:51:45.443" endtime="20220228 13:51:45.540"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:45.563" level="INFO">${list} = [60000000180802, 100000000003701, 170000000116004, 100000000106203, 100000000003301, 100000000107401, 100000000107301, 160000000211319, 160000000211318, 100000000003501, 100000000107402, 6000000018310...</msg>
<status status="PASS" starttime="20220228 13:51:45.540" endtime="20220228 13:51:45.563"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:45.564" level="INFO">${value} = 100000000003701</msg>
<status status="PASS" starttime="20220228 13:51:45.564" endtime="20220228 13:51:45.564"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.564" endtime="20220228 13:51:45.565"></status>
</kw>
<msg timestamp="20220228 13:51:45.565" level="INFO">${id_employee} = 100000000003701</msg>
<status status="PASS" starttime="20220228 13:51:45.443" endtime="20220228 13:51:45.565"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:45.667" level="INFO">Get Request using : alias=session, uri=/employees/100000000003701, headers=None json=None</msg>
<msg timestamp="20220228 13:51:45.667" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:45.667" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.565" endtime="20220228 13:51:45.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.667" level="INFO">{'result': {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 122796, 'branchId': 34428, 'createdBy': 59211, 'createdDate': '2021-06-15T18:46:43.7070000', 'isDeleted': False, 'clockings': [{'id': 60000004541331, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-02T07:00:00.0000000', 'checkOutDate': '2021-05-02T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541332, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541333, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541334, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541335, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541336, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-07T07:00:00.0000000', 'endTime': '2021-05-07T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-07T07:00:00.0000000', 'checkOutDate': '2021-05-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541337, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541338, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541339, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541340, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-11T07:00:00.0000000', 'checkOutDate': '2021-05-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541341, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541342, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-13T07:00:00.0000000', 'checkOutDate': '2021-05-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541343, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-14T07:00:00.0000000', 'endTime': '2021-05-14T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-14T07:00:00.0000000', 'checkOutDate': '2021-05-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541344, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541345, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541346, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541347, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541348, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541349, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-20T07:00:00.0000000', 'checkOutDate': '2021-05-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541350, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541351, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541352, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541353, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 3, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'checkInDate': '2021-05-24T07:00:00.0000000', 'checkOutDate': '2021-05-24T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004541354, 'shiftId': 100000000003301, 'timeSheetId': 60000000604007, 'employeeId': 100000000003701, 'workById': 100000000003701, 'clockingStatus': 1, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T11:00:00.0000000', 'branchId': 34428, 'tenantId': 122796, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100000000088301, 'tenantId': 122796, 'branchId': 34428, 'employeeId': 100000000003701}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:45.667" endtime="20220228 13:51:45.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:45.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.667" endtime="20220228 13:51:45.667"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.667" endtime="20220228 13:51:45.667"></status>
</kw>
<msg timestamp="20220228 13:51:45.667" level="INFO">${resp} = {'result': {'id': 100000000003701, 'code': 'NV000003', 'name': 'dffc', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardN...</msg>
<status status="PASS" starttime="20220228 13:51:45.565" endtime="20220228 13:51:45.667"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:45.682" level="INFO">${list} = ['NV000003']</msg>
<status status="PASS" starttime="20220228 13:51:45.667" endtime="20220228 13:51:45.682"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:45.682" level="INFO">${value} = NV000003</msg>
<status status="PASS" starttime="20220228 13:51:45.682" endtime="20220228 13:51:45.682"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.682" endtime="20220228 13:51:45.682"></status>
</kw>
<msg timestamp="20220228 13:51:45.682" level="INFO">${code_employee} = NV000003</msg>
<status status="PASS" starttime="20220228 13:51:45.565" endtime="20220228 13:51:45.682"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.682" endtime="20220228 13:51:45.682"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:45.440" endtime="20220228 13:51:45.682"></status>
</kw>
<kw name="Delete Request KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>200</arg>
</arguments>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:45.865" level="INFO">Delete Request using : alias=session, uri=/employees/100000000107402, data=(),                     headers=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:45.865" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:45.866" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.682" endtime="20220228 13:51:45.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.867" level="INFO">{'message': 'Xóa nhân viên thành công'}</msg>
<status status="PASS" starttime="20220228 13:51:45.866" endtime="20220228 13:51:45.867"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:45.868" endtime="20220228 13:51:45.868"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:45.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:45.868" endtime="20220228 13:51:45.869"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:45.682" endtime="20220228 13:51:45.869"></status>
</kw>
<doc>Xóa 1 nhân viên</doc>
<tags>
<tag>all</tag>
<tag>employee</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:45.440" endtime="20220228 13:51:45.870" critical="yes"></status>
</test>
<status status="PASS" starttime="20220228 13:51:40.097" endtime="20220228 13:51:45.871"></status>
</suite>
<status status="PASS" starttime="20220228 13:51:40.096" endtime="20220228 13:51:45.875"></status>
</suite>
<status status="PASS" starttime="20220228 13:51:40.065" endtime="20220228 13:51:45.878"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0">all</stat>
<stat pass="8" fail="0">employee</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="8" fail="0" id="s1-s1-s1" name="Employee">Testsuites.NhanVien.Employee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
