<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220217 17:27:30.067">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Payment" source="D:\timesheet\testsuites\NhanVien\payment.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220217 17:27:30.284" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone1': 'https://testz...</msg>
<status status="PASS" starttime="20220217 17:27:30.284" endtime="20220217 17:27:30.284"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>59902=/auth/salelogin</arg>
<arg>59903=/auth/salelogin</arg>
<arg>booking=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220217 17:27:30.284" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', '59902': '/auth/salelogin', '59903': '/auth/salelogin', ...</msg>
<status status="PASS" starttime="20220217 17:27:30.284" endtime="20220217 17:27:30.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>59902=https://kvpos.com:55002</arg>
<arg>59903=https://kvpos.com:55003</arg>
<arg>booking=https://timesheetapi.kvpos.com:9009</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220217 17:27:30.285" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220217 17:27:30.285" endtime="20220217 17:27:30.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>59902=https://kvpos.com:59932/api</arg>
<arg>59903=https://kvpos.com:59933/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220217 17:27:30.285" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220217 17:27:30.285" endtime="20220217 17:27:30.285"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>booking=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220217 17:27:30.286" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', '59902': '1', '59903': '1', 'booking': '1', 'fnb15': 'admin'}</msg>
<status status="PASS" starttime="20220217 17:27:30.285" endtime="20220217 17:27:30.286"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>booking=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220217 17:27:30.286" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', '59902': '1', '59903': '1', 'booking': '1', 'fnb15': '123'}</msg>
<status status="PASS" starttime="20220217 17:27:30.286" endtime="20220217 17:27:30.286"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>59902=phuoc902</arg>
<arg>59903=phuoc903</arg>
<arg>booking=autobooking</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220217 17:27:30.286" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', '59902': 'phuoc902', '59903': 'phuoc903', 'booking': 'autobooking', 'fnb15': 'testfnbz15a'}</msg>
<status status="PASS" starttime="20220217 17:27:30.286" endtime="20220217 17:27:30.286"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220217 17:27:30.287" level="INFO">${username} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.286" endtime="20220217 17:27:30.287"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220217 17:27:30.287" level="INFO">${password} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.287" endtime="20220217 17:27:30.287"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220217 17:27:30.287" level="INFO">${retailer} = autobooking</msg>
<status status="PASS" starttime="20220217 17:27:30.287" endtime="20220217 17:27:30.287"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220217 17:27:30.287" level="INFO">${url_saleLogin} = https://bookinghcm.kvpos.com:9009/api</msg>
<status status="PASS" starttime="20220217 17:27:30.287" endtime="20220217 17:27:30.287"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220217 17:27:30.288" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220217 17:27:30.287" endtime="20220217 17:27:30.288"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220217 17:27:30.288" level="INFO">${url} = https://timesheetapi.kvpos.com:9009</msg>
<status status="PASS" starttime="20220217 17:27:30.288" endtime="20220217 17:27:30.288"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220217 17:27:30.288" level="INFO">${url_man} = https://bookinghcm.kvpos.com:9009/api</msg>
<status status="PASS" starttime="20220217 17:27:30.288" endtime="20220217 17:27:30.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.288" level="INFO">${username} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.288" endtime="20220217 17:27:30.288"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.289" level="INFO">${password} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.288" endtime="20220217 17:27:30.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.289" level="INFO">${retailer} = autobooking</msg>
<status status="PASS" starttime="20220217 17:27:30.289" endtime="20220217 17:27:30.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.289" level="INFO">${url_saleLogin} = https://bookinghcm.kvpos.com:9009/api</msg>
<status status="PASS" starttime="20220217 17:27:30.289" endtime="20220217 17:27:30.289"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.290" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220217 17:27:30.289" endtime="20220217 17:27:30.290"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.290" level="INFO">${url} = https://timesheetapi.kvpos.com:9009</msg>
<status status="PASS" starttime="20220217 17:27:30.290" endtime="20220217 17:27:30.290"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.290" level="INFO">${url_man} = https://bookinghcm.kvpos.com:9009/api</msg>
<status status="PASS" starttime="20220217 17:27:30.290" endtime="20220217 17:27:30.290"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220217 17:27:30.290" level="INFO">${header} = {'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220217 17:27:30.290" endtime="20220217 17:27:30.290"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220217 17:27:30.291" level="INFO">${data_saleLogin} = {'UserName': '1', 'Password': '1'}</msg>
<status status="PASS" starttime="20220217 17:27:30.291" endtime="20220217 17:27:30.291"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.291" level="INFO">Creating Session using : alias=sessionLogin, url=https://bookinghcm.kvpos.com:9009/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220217 17:27:30.291" endtime="20220217 17:27:30.292"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220217 17:27:30.389" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "1", "Password": "1"}, headers={'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220217 17:27:30.389" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'bookinghcm.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220217 17:27:30.389" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.292" endtime="20220217 17:27:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.389" level="INFO">{'UserId': 10003, 'UserName': '1', 'SessionId': 'h1qg0vZj9HEt9wnXGoRn', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImQyOTVjOGFhZjk5NDRjYzA5MTNkMTk2MTk1ZjM0YjFkIiwia3Z1aWQiOjEwMDAzLCJrdnVndm5hbWUiOiJwaHVvYyIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTAwMiwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoiYXV0b2Jvb2tpbmciLCJrdnJpZCI6MTAwMiwia3Z1cmlkIjoxMDAyLCJrdnJnaWQiOjEsInBlcm1zIjoiIn0.DaFKtFET_YIdJqTeRJenNNzfMvl9CDpOuNjUN1UBcUQ', 'BranchId': 1002, 'IsUsingNewFnb': False, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220217 17:27:30.389" endtime="20220217 17:27:30.390"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220217 17:27:30.409" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlc...</msg>
<status status="PASS" starttime="20220217 17:27:30.390" endtime="20220217 17:27:30.409"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.410" level="INFO">Length is 1</msg>
<msg timestamp="20220217 17:27:30.410" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.409" endtime="20220217 17:27:30.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220217 17:27:30.410" endtime="20220217 17:27:30.410"></status>
</kw>
<msg timestamp="20220217 17:27:30.410" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI...</msg>
<status status="PASS" starttime="20220217 17:27:30.410" endtime="20220217 17:27:30.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.410" endtime="20220217 17:27:30.411"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.410" endtime="20220217 17:27:30.411"></status>
</kw>
<msg timestamp="20220217 17:27:30.411" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI...</msg>
<status status="PASS" starttime="20220217 17:27:30.390" endtime="20220217 17:27:30.411"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220217 17:27:30.411" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJr...</msg>
<status status="PASS" starttime="20220217 17:27:30.411" endtime="20220217 17:27:30.411"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220217 17:27:30.429" level="INFO">${result} = [10003]</msg>
<status status="PASS" starttime="20220217 17:27:30.411" endtime="20220217 17:27:30.429"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.429" level="INFO">Length is 1</msg>
<msg timestamp="20220217 17:27:30.429" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.429" endtime="20220217 17:27:30.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220217 17:27:30.430" endtime="20220217 17:27:30.430"></status>
</kw>
<msg timestamp="20220217 17:27:30.430" level="INFO">${result} = 10003</msg>
<status status="PASS" starttime="20220217 17:27:30.430" endtime="20220217 17:27:30.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.430" endtime="20220217 17:27:30.430"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.430" endtime="20220217 17:27:30.430"></status>
</kw>
<msg timestamp="20220217 17:27:30.431" level="INFO">${user_login} = 10003</msg>
<status status="PASS" starttime="20220217 17:27:30.411" endtime="20220217 17:27:30.431"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.431" level="INFO">${user_login} = 10003</msg>
<status status="PASS" starttime="20220217 17:27:30.431" endtime="20220217 17:27:30.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.431" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJr...</msg>
<status status="PASS" starttime="20220217 17:27:30.431" endtime="20220217 17:27:30.432"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220217 17:27:30.432" level="INFO">${random_str} = rCBe</msg>
<status status="PASS" starttime="20220217 17:27:30.432" endtime="20220217 17:27:30.432"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.432" endtime="20220217 17:27:30.432"></status>
</kw>
<msg timestamp="20220217 17:27:30.432" level="INFO">${random_str} = rCBe</msg>
<status status="PASS" starttime="20220217 17:27:30.432" endtime="20220217 17:27:30.432"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.433" level="INFO">${random_str} = rCBe</msg>
<status status="PASS" starttime="20220217 17:27:30.432" endtime="20220217 17:27:30.433"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220217 17:27:30.433" level="INFO">${random_number} = 86328750</msg>
<status status="PASS" starttime="20220217 17:27:30.433" endtime="20220217 17:27:30.433"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.433" endtime="20220217 17:27:30.433"></status>
</kw>
<msg timestamp="20220217 17:27:30.433" level="INFO">${random_number} = 86328750</msg>
<status status="PASS" starttime="20220217 17:27:30.433" endtime="20220217 17:27:30.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.434" level="INFO">${random_number} = 86328750</msg>
<status status="PASS" starttime="20220217 17:27:30.433" endtime="20220217 17:27:30.434"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220217 17:27:30.450" level="INFO">${result} = []</msg>
<status status="PASS" starttime="20220217 17:27:30.434" endtime="20220217 17:27:30.450"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.451" level="INFO">Length is 0</msg>
<msg timestamp="20220217 17:27:30.451" level="INFO">${length} = 0</msg>
<status status="PASS" starttime="20220217 17:27:30.450" endtime="20220217 17:27:30.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220217 17:27:30.451" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20220217 17:27:30.451" endtime="20220217 17:27:30.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.451" endtime="20220217 17:27:30.451"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.451" endtime="20220217 17:27:30.451"></status>
</kw>
<msg timestamp="20220217 17:27:30.452" level="INFO">${branchId} = 0</msg>
<status status="PASS" starttime="20220217 17:27:30.434" endtime="20220217 17:27:30.452"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.452" level="INFO">${branchId} = 0</msg>
<status status="PASS" starttime="20220217 17:27:30.452" endtime="20220217 17:27:30.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${env}'=='zone12'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Run Fnb" library="enviroment">
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp_json}</arg>
<arg>$.BranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220217 17:27:30.470" level="INFO">${result} = [1002]</msg>
<status status="PASS" starttime="20220217 17:27:30.453" endtime="20220217 17:27:30.470"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.470" level="INFO">Length is 1</msg>
<msg timestamp="20220217 17:27:30.470" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.470" endtime="20220217 17:27:30.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220217 17:27:30.471" endtime="20220217 17:27:30.471"></status>
</kw>
<msg timestamp="20220217 17:27:30.471" level="INFO">${result} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.470" endtime="20220217 17:27:30.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.471" endtime="20220217 17:27:30.471"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.471" endtime="20220217 17:27:30.471"></status>
</kw>
<msg timestamp="20220217 17:27:30.471" level="INFO">${branchId} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.452" endtime="20220217 17:27:30.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.472" level="INFO">${branchId} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.472" endtime="20220217 17:27:30.472"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.472" endtime="20220217 17:27:30.472"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.452" endtime="20220217 17:27:30.472"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.452" endtime="20220217 17:27:30.472"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220217 17:27:30.472" level="INFO">${branchId} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.472" endtime="20220217 17:27:30.472"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220217 17:27:30.473" level="INFO">${header} = {'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwi...</msg>
<status status="PASS" starttime="20220217 17:27:30.473" endtime="20220217 17:27:30.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220217 17:27:30.473" level="INFO">${headers_not_contenType} = {'retailer': 'autobooking', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2ND...</msg>
<status status="PASS" starttime="20220217 17:27:30.473" endtime="20220217 17:27:30.473"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.474" level="INFO">${header} = {'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwi...</msg>
<status status="PASS" starttime="20220217 17:27:30.473" endtime="20220217 17:27:30.474"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.474" level="INFO">${headers_not_contenType} = {'retailer': 'autobooking', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2ND...</msg>
<status status="PASS" starttime="20220217 17:27:30.474" endtime="20220217 17:27:30.474"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.474" level="INFO">Creating Session using : alias=session, url=https://timesheetapi.kvpos.com:9009, headers={'retailer': 'autobooking', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImQyOTVjOGFhZjk5NDRjYzA5MTNkMTk2MTk1ZjM0YjFkIiwia3Z1aWQiOjEwMDAzLCJrdnVndm5hbWUiOiJwaHVvYyIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTAwMiwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoiYXV0b2Jvb2tpbmciLCJrdnJpZCI6MTAwMiwia3Z1cmlkIjoxMDAyLCJrdnJnaWQiOjEsInBlcm1zIjoiIn0.DaFKtFET_YIdJqTeRJenNNzfMvl9CDpOuNjUN1UBcUQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220217 17:27:30.474" endtime="20220217 17:27:30.474"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.475" level="INFO">Creating Session using : alias=sessionMan, url=https://bookinghcm.kvpos.com:9009/api, headers={'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImQyOTVjOGFhZjk5NDRjYzA5MTNkMTk2MTk1ZjM0YjFkIiwia3Z1aWQiOjEwMDAzLCJrdnVndm5hbWUiOiJwaHVvYyIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTAwMiwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoiYXV0b2Jvb2tpbmciLCJrdnJpZCI6MTAwMiwia3Z1cmlkIjoxMDAyLCJrdnJnaWQiOjEsInBlcm1zIjoiIn0.DaFKtFET_YIdJqTeRJenNNzfMvl9CDpOuNjUN1UBcUQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220217 17:27:30.474" endtime="20220217 17:27:30.475"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220217 17:27:30.476" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220217 17:27:30.475" endtime="20220217 17:27:30.476"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220217 17:27:30.476" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220217 17:27:30.476" endtime="20220217 17:27:30.476"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220217 17:27:30.519" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/1002, headers=None json=None</msg>
<msg timestamp="20220217 17:27:30.520" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'bookinghcm.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220217 17:27:30.520" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.477" endtime="20220217 17:27:30.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.520" level="INFO">{'Id': 1002, 'Name': 'Update uSxQ', 'Type': 0, 'Address': '123', 'Province': 'Bà Rịa - Vũng Tàu', 'District': 'Huyện Long Điền', 'ContactNumber': '0376666666', 'IsActive': True, 'RetailerId': 1002, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Bà Rịa - Vũng Tàu - Huyện Long Điền', 'WardName': 'Xã Phước Hưng', 'isAcceptBookClosing': False, 'GmbStatus': 1, 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'PriceBookDiningOptions': [], 'ProcessingSectors': [], 'CancelDishReasonDetails': [], 'CancelDishReasons': [], 'Reservation': [], 'NotifyDishes': [], 'GroupNoteTemplates': [], 'NoteTemplates': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'BranchTakingAddresses': [], 'Bookings': [], 'TotalUser': 0, 'CompareBranchName': 'Update uSxQ', 'IsTimeSheetException': False}</msg>
<status status="PASS" starttime="20220217 17:27:30.520" endtime="20220217 17:27:30.520"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220217 17:27:30.537" level="INFO">${name} = ['Update uSxQ']</msg>
<status status="PASS" starttime="20220217 17:27:30.520" endtime="20220217 17:27:30.537"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.537" endtime="20220217 17:27:30.537"></status>
</kw>
<msg timestamp="20220217 17:27:30.537" level="INFO">${name_branch} = ['Update uSxQ']</msg>
<status status="PASS" starttime="20220217 17:27:30.476" endtime="20220217 17:27:30.537"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.472" endtime="20220217 17:27:30.538"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.284" endtime="20220217 17:27:30.538"></status>
</kw>
<test id="s1-s1-s1-t1" name="Payment not distributed to payslip">
<kw name="Get Random ID Employee" library="employee">
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.539" level="INFO">${list_format} = [1002]</msg>
<status status="PASS" starttime="20220217 17:27:30.539" endtime="20220217 17:27:30.539"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.539" level="INFO">Length is 1</msg>
<msg timestamp="20220217 17:27:30.539" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220217 17:27:30.539" endtime="20220217 17:27:30.539"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.540" level="INFO">${value_temp} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.540" endtime="20220217 17:27:30.540"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.540" level="INFO">${value_temp} = 1002</msg>
<status status="PASS" starttime="20220217 17:27:30.540" endtime="20220217 17:27:30.540"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.540" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1002</msg>
<status status="PASS" starttime="20220217 17:27:30.540" endtime="20220217 17:27:30.540"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.539" endtime="20220217 17:27:30.540"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.539" endtime="20220217 17:27:30.540"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.541" endtime="20220217 17:27:30.541"></status>
</kw>
<msg timestamp="20220217 17:27:30.541" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1002</msg>
<status status="PASS" starttime="20220217 17:27:30.539" endtime="20220217 17:27:30.541"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.541" endtime="20220217 17:27:30.541"></status>
</kw>
<msg timestamp="20220217 17:27:30.541" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1002</msg>
<status status="PASS" starttime="20220217 17:27:30.538" endtime="20220217 17:27:30.541"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220217 17:27:30.586" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=1002, headers=None json=None</msg>
<msg timestamp="20220217 17:27:30.586" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'timesheetapi.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220217 17:27:30.586" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.542" endtime="20220217 17:27:30.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.587" level="INFO">{'result': {'total': 6, 'data': [{'id': 90000000005112, 'code': 'NV057708', 'name': 'DsdR', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:25:13.1970000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012530, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005112}]}, {'id': 90000000005115, 'code': 'NV156496', 'name': 'ESEr', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:27:28.9900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012533, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005115}]}, {'id': 90000000005114, 'code': 'NV485549', 'name': 'ESEr', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:27:23.8830000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012532, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005114}]}, {'id': 90000000005108, 'code': 'NV422743', 'name': 'FDcz', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:17:17.8870000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012526, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005108}]}, {'id': 90000000005116, 'code': 'UD00831138', 'name': 'UpdateGrPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:27:30.2900000', 'modifiedBy': 10003, 'modifiedDate': '2022-02-17T17:27:31.5470000', 'isDeleted': False, 'secretKeyTakenUserId': 10003, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012534, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005116}]}, {'id': 90000000005105, 'code': 'UD13744956', 'name': 'UpdateOWqa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:14:12.2770000', 'modifiedBy': 10003, 'modifiedDate': '2022-02-17T17:14:13.3580000', 'isDeleted': False, 'secretKeyTakenUserId': 10003, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100012523, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005105}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220217 17:27:30.586" endtime="20220217 17:27:30.587"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220217 17:27:30.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.587" endtime="20220217 17:27:30.587"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.587" endtime="20220217 17:27:30.587"></status>
</kw>
<msg timestamp="20220217 17:27:30.587" level="INFO">${resp} = {'result': {'total': 6, 'data': [{'id': 90000000005112, 'code': 'NV057708', 'name': 'DsdR', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'loca...</msg>
<status status="PASS" starttime="20220217 17:27:30.542" endtime="20220217 17:27:30.587"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220217 17:27:30.605" level="INFO">${list} = [90000000005112, 90000000005115, 90000000005114, 90000000005108, 90000000005116, 90000000005105]</msg>
<status status="PASS" starttime="20220217 17:27:30.588" endtime="20220217 17:27:30.605"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220217 17:27:30.608" level="INFO">${value} = 90000000005112</msg>
<status status="PASS" starttime="20220217 17:27:30.605" endtime="20220217 17:27:30.608"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.608" endtime="20220217 17:27:30.608"></status>
</kw>
<msg timestamp="20220217 17:27:30.608" level="INFO">${id_employee} = 90000000005112</msg>
<status status="PASS" starttime="20220217 17:27:30.541" endtime="20220217 17:27:30.608"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220217 17:27:30.624" level="INFO">Get Request using : alias=session, uri=/employees/90000000005112, headers=None json=None</msg>
<msg timestamp="20220217 17:27:30.624" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'timesheetapi.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220217 17:27:30.624" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.609" endtime="20220217 17:27:30.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.625" level="INFO">{'result': {'id': 90000000005112, 'code': 'NV057708', 'name': 'DsdR', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 1002, 'branchId': 1002, 'createdBy': 10003, 'createdDate': '2022-02-17T17:25:13.1970000', 'isDeleted': False, 'clockings': [{'id': 456924, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-02T07:00:00.0000000', 'endTime': '2022-02-02T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456925, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-03T07:00:00.0000000', 'endTime': '2022-02-03T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456926, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-04T07:00:00.0000000', 'endTime': '2022-02-04T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456927, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 4, 'startTime': '2022-02-06T07:00:00.0000000', 'endTime': '2022-02-06T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'absenceType': 2, 'clockingPaymentStatus': 0}, {'id': 456928, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-07T07:00:00.0000000', 'endTime': '2022-02-07T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456929, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-08T07:00:00.0000000', 'endTime': '2022-02-08T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456930, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-09T07:00:00.0000000', 'endTime': '2022-02-09T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456931, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-10T07:00:00.0000000', 'endTime': '2022-02-10T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456932, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-11T07:00:00.0000000', 'endTime': '2022-02-11T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456933, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-13T07:00:00.0000000', 'endTime': '2022-02-13T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456934, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-14T07:00:00.0000000', 'endTime': '2022-02-14T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456935, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-15T07:00:00.0000000', 'endTime': '2022-02-15T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456936, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-16T07:00:00.0000000', 'endTime': '2022-02-16T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456937, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-17T07:00:00.0000000', 'endTime': '2022-02-17T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456938, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-18T07:00:00.0000000', 'endTime': '2022-02-18T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456939, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-20T07:00:00.0000000', 'endTime': '2022-02-20T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456940, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-21T07:00:00.0000000', 'endTime': '2022-02-21T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456941, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-22T07:00:00.0000000', 'endTime': '2022-02-22T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456942, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-23T07:00:00.0000000', 'endTime': '2022-02-23T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456943, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-24T07:00:00.0000000', 'endTime': '2022-02-24T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456944, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-25T07:00:00.0000000', 'endTime': '2022-02-25T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456945, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-27T07:00:00.0000000', 'endTime': '2022-02-27T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456946, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-02-28T07:00:00.0000000', 'endTime': '2022-02-28T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456947, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-01T07:00:00.0000000', 'endTime': '2022-03-01T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456948, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-02T07:00:00.0000000', 'endTime': '2022-03-02T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456949, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-03T07:00:00.0000000', 'endTime': '2022-03-03T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456950, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-04T07:00:00.0000000', 'endTime': '2022-03-04T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456951, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-06T07:00:00.0000000', 'endTime': '2022-03-06T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456952, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-07T07:00:00.0000000', 'endTime': '2022-03-07T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456953, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-08T07:00:00.0000000', 'endTime': '2022-03-08T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456954, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-09T07:00:00.0000000', 'endTime': '2022-03-09T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456955, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-10T07:00:00.0000000', 'endTime': '2022-03-10T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456956, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-11T07:00:00.0000000', 'endTime': '2022-03-11T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456957, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-13T07:00:00.0000000', 'endTime': '2022-03-13T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456958, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-14T07:00:00.0000000', 'endTime': '2022-03-14T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456959, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-15T07:00:00.0000000', 'endTime': '2022-03-15T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456960, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-16T07:00:00.0000000', 'endTime': '2022-03-16T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456961, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-17T07:00:00.0000000', 'endTime': '2022-03-17T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456962, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-18T07:00:00.0000000', 'endTime': '2022-03-18T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456963, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-20T07:00:00.0000000', 'endTime': '2022-03-20T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456964, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-21T07:00:00.0000000', 'endTime': '2022-03-21T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456965, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-22T07:00:00.0000000', 'endTime': '2022-03-22T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456966, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-23T07:00:00.0000000', 'endTime': '2022-03-23T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456967, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-24T07:00:00.0000000', 'endTime': '2022-03-24T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456968, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 3, 'startTime': '2022-03-25T07:00:00.0000000', 'endTime': '2022-03-25T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': False, 'checkOutDate': '2022-03-25T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456969, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-27T07:00:00.0000000', 'endTime': '2022-03-27T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456970, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-28T07:00:00.0000000', 'endTime': '2022-03-28T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456971, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-29T07:00:00.0000000', 'endTime': '2022-03-29T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456972, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-30T07:00:00.0000000', 'endTime': '2022-03-30T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456973, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-03-31T07:00:00.0000000', 'endTime': '2022-03-31T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456974, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-01T07:00:00.0000000', 'endTime': '2022-04-01T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456975, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 4, 'startTime': '2022-04-03T07:00:00.0000000', 'endTime': '2022-04-03T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'absenceType': 1, 'clockingPaymentStatus': 0}, {'id': 456976, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-04T07:00:00.0000000', 'endTime': '2022-04-04T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456977, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 2, 'startTime': '2022-04-05T07:00:00.0000000', 'endTime': '2022-04-05T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': False, 'checkInDate': '2022-04-05T07:26:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456978, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-06T07:00:00.0000000', 'endTime': '2022-04-06T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456979, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-07T07:00:00.0000000', 'endTime': '2022-04-07T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456980, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-08T07:00:00.0000000', 'endTime': '2022-04-08T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456981, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-10T07:00:00.0000000', 'endTime': '2022-04-10T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456982, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-11T07:00:00.0000000', 'endTime': '2022-04-11T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456983, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-12T07:00:00.0000000', 'endTime': '2022-04-12T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456984, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-13T07:00:00.0000000', 'endTime': '2022-04-13T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456985, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-14T07:00:00.0000000', 'endTime': '2022-04-14T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456986, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-15T07:00:00.0000000', 'endTime': '2022-04-15T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456987, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-17T07:00:00.0000000', 'endTime': '2022-04-17T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456988, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-18T07:00:00.0000000', 'endTime': '2022-04-18T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456989, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-19T07:00:00.0000000', 'endTime': '2022-04-19T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456990, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-20T07:00:00.0000000', 'endTime': '2022-04-20T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456991, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-21T07:00:00.0000000', 'endTime': '2022-04-21T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456992, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 3, 'startTime': '2022-04-22T07:00:00.0000000', 'endTime': '2022-04-22T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': False, 'checkInDate': '2022-04-22T07:00:00.0000000', 'checkOutDate': '2022-04-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456993, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-24T07:00:00.0000000', 'endTime': '2022-04-24T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456994, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-25T07:00:00.0000000', 'endTime': '2022-04-25T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456995, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-26T07:00:00.0000000', 'endTime': '2022-04-26T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456996, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-27T07:00:00.0000000', 'endTime': '2022-04-27T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456997, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-28T07:00:00.0000000', 'endTime': '2022-04-28T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 456998, 'shiftId': 5103, 'timeSheetId': 51012, 'employeeId': 90000000005112, 'workById': 90000000005112, 'clockingStatus': 1, 'startTime': '2022-04-29T07:00:00.0000000', 'endTime': '2022-04-29T11:00:00.0000000', 'branchId': 1002, 'tenantId': 1002, 'isDeleted': True, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 100012530, 'tenantId': 1002, 'branchId': 1002, 'employeeId': 90000000005112}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220217 17:27:30.624" endtime="20220217 17:27:30.625"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220217 17:27:30.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.626" endtime="20220217 17:27:30.626"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.626" endtime="20220217 17:27:30.626"></status>
</kw>
<msg timestamp="20220217 17:27:30.627" level="INFO">${resp} = {'result': {'id': 90000000005112, 'code': 'NV057708', 'name': 'DsdR', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardNa...</msg>
<status status="PASS" starttime="20220217 17:27:30.609" endtime="20220217 17:27:30.627"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220217 17:27:30.648" level="INFO">${list} = ['NV057708']</msg>
<status status="PASS" starttime="20220217 17:27:30.627" endtime="20220217 17:27:30.648"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220217 17:27:30.649" level="INFO">${value} = NV057708</msg>
<status status="PASS" starttime="20220217 17:27:30.648" endtime="20220217 17:27:30.649"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.649" endtime="20220217 17:27:30.649"></status>
</kw>
<msg timestamp="20220217 17:27:30.649" level="INFO">${code_employee} = NV057708</msg>
<status status="PASS" starttime="20220217 17:27:30.609" endtime="20220217 17:27:30.649"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.649" endtime="20220217 17:27:30.649"></status>
</kw>
<msg timestamp="20220217 17:27:30.650" level="INFO">${id_employee} = 90000000005112</msg>
<status status="PASS" starttime="20220217 17:27:30.538" endtime="20220217 17:27:30.650"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${amount}</arg>
<arg>${id_employee}</arg>
<arg>${method}</arg>
<arg>${date}</arg>
<arg>\ \</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.650" level="INFO">${list_format} = ['10000', 90000000005112, 'Cash', '10/01/2022', ' ']</msg>
<status status="PASS" starttime="20220217 17:27:30.650" endtime="20220217 17:27:30.650"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_payment}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_payment}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220217 17:27:30.650" level="INFO">Length is 5</msg>
<msg timestamp="20220217 17:27:30.650" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220217 17:27:30.650" endtime="20220217 17:27:30.650"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.651" level="INFO">${value_temp} = 10000</msg>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.651"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.651" level="INFO">${value_temp} = 10000</msg>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.651"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.651" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":[D1],"Method":"[D2]","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.651"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.651"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.652" level="INFO">${value_temp} = 90000000005112</msg>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.652"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.652" level="INFO">${value_temp} = 90000000005112</msg>
<status status="PASS" starttime="20220217 17:27:30.652" endtime="20220217 17:27:30.652"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.652" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"[D2]","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220217 17:27:30.652" endtime="20220217 17:27:30.652"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.651" endtime="20220217 17:27:30.652"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.652" level="INFO">${value_temp} = Cash</msg>
<status status="PASS" starttime="20220217 17:27:30.652" endtime="20220217 17:27:30.652"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.653" level="INFO">${value_temp} = Cash</msg>
<status status="PASS" starttime="20220217 17:27:30.653" endtime="20220217 17:27:30.653"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.653" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"Cash","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220217 17:27:30.653" endtime="20220217 17:27:30.653"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.652" endtime="20220217 17:27:30.653"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.653" level="INFO">${value_temp} = 10/01/2022</msg>
<status status="PASS" starttime="20220217 17:27:30.653" endtime="20220217 17:27:30.653"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.654" level="INFO">${value_temp} = 10/01/2022</msg>
<status status="PASS" starttime="20220217 17:27:30.653" endtime="20220217 17:27:30.654"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.654" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220217 17:27:30.654" endtime="20220217 17:27:30.654"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.653" endtime="20220217 17:27:30.654"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.654" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220217 17:27:30.654" endtime="20220217 17:27:30.654"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220217 17:27:30.654" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220217 17:27:30.654" endtime="20220217 17:27:30.654"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220217 17:27:30.655" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}</msg>
<status status="PASS" starttime="20220217 17:27:30.654" endtime="20220217 17:27:30.655"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.654" endtime="20220217 17:27:30.655"></status>
</kw>
<status status="PASS" starttime="20220217 17:27:30.650" endtime="20220217 17:27:30.655"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.655" endtime="20220217 17:27:30.655"></status>
</kw>
<msg timestamp="20220217 17:27:30.655" level="INFO">${data_payment} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}</msg>
<status status="PASS" starttime="20220217 17:27:30.650" endtime="20220217 17:27:30.655"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session_man}</arg>
<arg>${enp_payment}</arg>
<arg>${data_payment}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220217 17:27:30.901" level="INFO">Post Request using : alias=sessionMan, uri=/payslip-payments, data={"PayslipPayments":[{"Amount":10000,"EmployeeId":90000000005112,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}, headers={'retailer': 'autobooking', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '1002', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IjJYViJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDAwMywiaWF0IjoxNjQ1MDkzNjUwLCJleHAiOjE2NDUxODAwNTAsInByZWZlcnJlZF91c2VybmFtZSI6MSwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImQyOTVjOGFhZjk5NDRjYzA5MTNkMTk2MTk1ZjM0YjFkIiwia3Z1aWQiOjEwMDAzLCJrdnVndm5hbWUiOiJwaHVvYyIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTAwMiwia3ZyaW5kaWQiOjE2LCJrdnJjb2RlIjoiYXV0b2Jvb2tpbmciLCJrdnJpZCI6MTAwMiwia3Z1cmlkIjoxMDAyLCJrdnJnaWQiOjEsInBlcm1zIjoiIn0.DaFKtFET_YIdJqTeRJenNNzfMvl9CDpOuNjUN1UBcUQ'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220217 17:27:30.902" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'bookinghcm.kvpos.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220217 17:27:30.902" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.656" endtime="20220217 17:27:30.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.903" level="INFO">[{'EmployeeIsDeleted': False, 'PayslipValue': 0, 'PaidValue': 0, 'NeedPayValue': 0, 'TargetCode': 'PCL000005', 'UserName': '', 'Id': 6, 'Code': 'PCL000005', 'Amount': 10000, 'Method': 'Cash', 'RetailerId': 1002, 'BranchId': 1002, 'PayslipId': 0, 'EmployeeId': 90000000005112, 'TransDate': '2022-01-10T00:00:00.0060000+07:00', 'UserId': 10003, 'Status': 0, 'CreatedDate': '2022-02-17T17:27:31.9770000', 'CreatedBy': 10003, 'AmountOriginal': 10000, 'IsAllowcation': False}]</msg>
<status status="PASS" starttime="20220217 17:27:30.903" endtime="20220217 17:27:30.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220217 17:27:30.904" endtime="20220217 17:27:30.905"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220217 17:27:30.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220217 17:27:30.905" endtime="20220217 17:27:30.906"></status>
</kw>
<msg timestamp="20220217 17:27:30.907" level="INFO">${resp} = [{'EmployeeIsDeleted': False, 'PayslipValue': 0, 'PaidValue': 0, 'NeedPayValue': 0, 'TargetCode': 'PCL000005', 'UserName': '', 'Id': 6, 'Code': 'PCL000005', 'Amount': 10000, 'Method': 'Cash', 'Retaile...</msg>
<status status="PASS" starttime="20220217 17:27:30.655" endtime="20220217 17:27:30.907"></status>
</kw>
<doc>Thanh toán bằng tiền mặt không phân bổ vào phiếu lương</doc>
<tags>
<tag>all</tag>
<tag>payment</tag>
</tags>
<status status="PASS" starttime="20220217 17:27:30.538" endtime="20220217 17:27:30.907" critical="yes"></status>
</test>
<status status="PASS" starttime="20220217 17:27:30.087" endtime="20220217 17:27:30.908"></status>
</suite>
<status status="PASS" starttime="20220217 17:27:30.086" endtime="20220217 17:27:30.916"></status>
</suite>
<status status="PASS" starttime="20220217 17:27:30.068" endtime="20220217 17:27:30.917"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">all</stat>
<stat pass="1" fail="0">payment</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="1" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Payment">Testsuites.NhanVien.Payment</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
