<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220215 22:05:44.822">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="NhanVien" source="D:\timesheet\testsuites\NhanVien">
<suite id="s1-s1-s1" name="Payment" source="D:\timesheet\testsuites\NhanVien\payment.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:45.168" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone1': 'https://testz...</msg>
<status status="PASS" starttime="20220215 22:05:45.168" endtime="20220215 22:05:45.168"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>59902=/auth/salelogin</arg>
<arg>59903=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:45.169" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', '59902': '/auth/salelogin', '59903': '/auth/salelogin', ...</msg>
<status status="PASS" starttime="20220215 22:05:45.168" endtime="20220215 22:05:45.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>59902=https://kvpos.com:55002</arg>
<arg>59903=https://kvpos.com:55003</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220215 22:05:45.169" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220215 22:05:45.169" endtime="20220215 22:05:45.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>59902=https://kvpos.com:59932/api</arg>
<arg>59903=https://kvpos.com:59933/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220215 22:05:45.169" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220215 22:05:45.169" endtime="20220215 22:05:45.169"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220215 22:05:45.170" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', '59902': '1', '59903': '1', 'fnb15': 'admin'}</msg>
<status status="PASS" starttime="20220215 22:05:45.170" endtime="20220215 22:05:45.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>59902=1</arg>
<arg>59903=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220215 22:05:45.170" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', '59902': '1', '59903': '1', 'fnb15': '123'}</msg>
<status status="PASS" starttime="20220215 22:05:45.170" endtime="20220215 22:05:45.170"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>59902=phuoc902</arg>
<arg>59903=phuoc903</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220215 22:05:45.171" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', '59902': 'phuoc902', '59903': 'phuoc903', 'fnb15': 'testfnbz15a'}</msg>
<status status="PASS" starttime="20220215 22:05:45.170" endtime="20220215 22:05:45.171"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220215 22:05:45.171" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 22:05:45.171" endtime="20220215 22:05:45.171"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220215 22:05:45.171" level="INFO">${password} = 123</msg>
<status status="PASS" starttime="20220215 22:05:45.171" endtime="20220215 22:05:45.171"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220215 22:05:45.171" level="INFO">${retailer} = testz1</msg>
<status status="PASS" starttime="20220215 22:05:45.171" endtime="20220215 22:05:45.172"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:45.172" level="INFO">${url_saleLogin} = https://testz1.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:45.172" endtime="20220215 22:05:45.172"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:45.172" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 22:05:45.172" endtime="20220215 22:05:45.172"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220215 22:05:45.173" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 22:05:45.172" endtime="20220215 22:05:45.173"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220215 22:05:45.173" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:45.173" endtime="20220215 22:05:45.173"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.173" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220215 22:05:45.173" endtime="20220215 22:05:45.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.174" level="INFO">${password} = 123</msg>
<status status="PASS" starttime="20220215 22:05:45.174" endtime="20220215 22:05:45.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.174" level="INFO">${retailer} = testz1</msg>
<status status="PASS" starttime="20220215 22:05:45.174" endtime="20220215 22:05:45.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.174" level="INFO">${url_saleLogin} = https://testz1.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:45.174" endtime="20220215 22:05:45.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.175" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220215 22:05:45.175" endtime="20220215 22:05:45.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.175" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220215 22:05:45.175" endtime="20220215 22:05:45.175"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.176" level="INFO">${url_man} = https://api-man.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220215 22:05:45.175" endtime="20220215 22:05:45.176"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 22:05:45.177" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220215 22:05:45.176" endtime="20220215 22:05:45.177"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220215 22:05:45.177" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123'}</msg>
<status status="PASS" starttime="20220215 22:05:45.177" endtime="20220215 22:05:45.177"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.178" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz1.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:45.177" endtime="20220215 22:05:45.178"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.513" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123"}, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:45.513" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz1.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.514" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.178" endtime="20220215 22:05:45.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.515" level="INFO">{'UserId': 14164, 'UserName': 'admin', 'SessionId': 'TwdRQbcyqndxWrbZUzHu', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6Ijg3MjY5MjY2MWUzODQ2NzRiMDE5YWU3OTgyZjdhYzE1Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.v24fvw5VuzGZcTRcFEMZZlwQvDVOd9QEKuCOhacLSCyPCuvMQ9_MxgCV_7zSBdVr1jpuonX0kN1daBVq19om1YGmK1mEhRxfVAKev8IvFnU4lWyALCBQmeNfLRk-AY9z3sUyNeNnRvEd9Aqtgehb1wRJVeorrhyOJx7Q-mfi_yPiBydCKq0vdNHNOExDAxy9wjd3x3U5iKEB_oMDQ18Uma0del-bu4CNDhnu5L-Lzz3iMQQSgQoxM1r8RRFOEOB6242jluVZLq3_ZT4LEk28ZPm-_-N-G93H_iJp2_gdDWELc1LLh3gtH-tg_o_oRHQB9TXgpe14nzQJ2ufMf9MVWQ', 'CurrentBranchId': 172909, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220215 22:05:45.514" endtime="20220215 22:05:45.516"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.549" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdL...</msg>
<status status="PASS" starttime="20220215 22:05:45.517" endtime="20220215 22:05:45.549"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:45.550" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.550" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.550" endtime="20220215 22:05:45.550"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.550" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220215 22:05:45.550" endtime="20220215 22:05:45.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.550" endtime="20220215 22:05:45.551"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.550" endtime="20220215 22:05:45.551"></status>
</kw>
<msg timestamp="20220215 22:05:45.551" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220215 22:05:45.516" endtime="20220215 22:05:45.551"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220215 22:05:45.551" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220215 22:05:45.551" endtime="20220215 22:05:45.551"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.570" level="INFO">${result} = [172909]</msg>
<status status="PASS" starttime="20220215 22:05:45.551" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:45.570" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.570" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.570" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.570" level="INFO">${result} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.570" endtime="20220215 22:05:45.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.571" endtime="20220215 22:05:45.571"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.570" endtime="20220215 22:05:45.571"></status>
</kw>
<msg timestamp="20220215 22:05:45.571" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.551" endtime="20220215 22:05:45.571"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220215 22:05:45.571" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.571" endtime="20220215 22:05:45.571"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.572" level="INFO">${branchId} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:45.572"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.589" level="INFO">${result} = [14164]</msg>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:45.589"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${lenght}</var>
</assign>
<msg timestamp="20220215 22:05:45.589" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.590" level="INFO">${lenght} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.589" endtime="20220215 22:05:45.590"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220215 22:05:45.590" level="INFO">${result} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:45.590" endtime="20220215 22:05:45.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenght}==0</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.590" endtime="20220215 22:05:45.590"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.590" endtime="20220215 22:05:45.590"></status>
</kw>
<msg timestamp="20220215 22:05:45.590" level="INFO">${user_login} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:45.572" endtime="20220215 22:05:45.590"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.591" level="INFO">${user_login} = 14164</msg>
<status status="PASS" starttime="20220215 22:05:45.591" endtime="20220215 22:05:45.591"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220215 22:05:45.591" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 22:05:45.591" endtime="20220215 22:05:45.591"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220215 22:05:45.592" level="INFO">${headers_not_contenType} = {'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczN...</msg>
<status status="PASS" starttime="20220215 22:05:45.591" endtime="20220215 22:05:45.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.592" level="INFO">${header} = {'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220215 22:05:45.592" endtime="20220215 22:05:45.592"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.592" level="INFO">${headers_not_contenType} = {'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczN...</msg>
<status status="PASS" starttime="20220215 22:05:45.592" endtime="20220215 22:05:45.592"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.592" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz1', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6Ijg3MjY5MjY2MWUzODQ2NzRiMDE5YWU3OTgyZjdhYzE1Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.v24fvw5VuzGZcTRcFEMZZlwQvDVOd9QEKuCOhacLSCyPCuvMQ9_MxgCV_7zSBdVr1jpuonX0kN1daBVq19om1YGmK1mEhRxfVAKev8IvFnU4lWyALCBQmeNfLRk-AY9z3sUyNeNnRvEd9Aqtgehb1wRJVeorrhyOJx7Q-mfi_yPiBydCKq0vdNHNOExDAxy9wjd3x3U5iKEB_oMDQ18Uma0del-bu4CNDhnu5L-Lzz3iMQQSgQoxM1r8RRFOEOB6242jluVZLq3_ZT4LEk28ZPm-_-N-G93H_iJp2_gdDWELc1LLh3gtH-tg_o_oRHQB9TXgpe14nzQJ2ufMf9MVWQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:45.592" endtime="20220215 22:05:45.593"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.593" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man.kiotviet.vn/api, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6Ijg3MjY5MjY2MWUzODQ2NzRiMDE5YWU3OTgyZjdhYzE1Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.v24fvw5VuzGZcTRcFEMZZlwQvDVOd9QEKuCOhacLSCyPCuvMQ9_MxgCV_7zSBdVr1jpuonX0kN1daBVq19om1YGmK1mEhRxfVAKev8IvFnU4lWyALCBQmeNfLRk-AY9z3sUyNeNnRvEd9Aqtgehb1wRJVeorrhyOJx7Q-mfi_yPiBydCKq0vdNHNOExDAxy9wjd3x3U5iKEB_oMDQ18Uma0del-bu4CNDhnu5L-Lzz3iMQQSgQoxM1r8RRFOEOB6242jluVZLq3_ZT4LEk28ZPm-_-N-G93H_iJp2_gdDWELc1LLh3gtH-tg_o_oRHQB9TXgpe14nzQJ2ufMf9MVWQ'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220215 22:05:45.593" endtime="20220215 22:05:45.593"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220215 22:05:45.594" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220215 22:05:45.593" endtime="20220215 22:05:45.594"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220215 22:05:45.595" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220215 22:05:45.594" endtime="20220215 22:05:45.595"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220215 22:05:45.595" level="INFO">${random_str} = RfYM</msg>
<status status="PASS" starttime="20220215 22:05:45.595" endtime="20220215 22:05:45.595"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.595" endtime="20220215 22:05:45.596"></status>
</kw>
<msg timestamp="20220215 22:05:45.596" level="INFO">${random_str} = RfYM</msg>
<status status="PASS" starttime="20220215 22:05:45.595" endtime="20220215 22:05:45.596"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.596" level="INFO">${random_str} = RfYM</msg>
<status status="PASS" starttime="20220215 22:05:45.596" endtime="20220215 22:05:45.596"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220215 22:05:45.596" level="INFO">${random_number} = 18258703</msg>
<status status="PASS" starttime="20220215 22:05:45.596" endtime="20220215 22:05:45.596"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.596" endtime="20220215 22:05:45.597"></status>
</kw>
<msg timestamp="20220215 22:05:45.597" level="INFO">${random_number} = 18258703</msg>
<status status="PASS" starttime="20220215 22:05:45.596" endtime="20220215 22:05:45.597"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.597" level="INFO">${random_number} = 18258703</msg>
<status status="PASS" starttime="20220215 22:05:45.597" endtime="20220215 22:05:45.597"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.168" endtime="20220215 22:05:45.597"></status>
</kw>
<test id="s1-s1-s1-t1" name="Payment not distributed to payslip">
<kw name="Get Random ID Employee" library="employee">
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Format Enp Filter_enp_employee" library="employee">
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.598" level="INFO">${list_format} = ['172909']</msg>
<status status="PASS" starttime="20220215 22:05:45.598" endtime="20220215 22:05:45.598"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${filter_enp_employee}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${filter_enp_employee}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.599" level="INFO">Length is 1</msg>
<msg timestamp="20220215 22:05:45.599" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220215 22:05:45.599" endtime="20220215 22:05:45.599"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.599" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.599" endtime="20220215 22:05:45.599"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.599" level="INFO">${value_temp} = 172909</msg>
<status status="PASS" starttime="20220215 22:05:45.599" endtime="20220215 22:05:45.599"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.600" level="INFO">${data_format} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.600" endtime="20220215 22:05:45.600"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.599" endtime="20220215 22:05:45.600"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.599" endtime="20220215 22:05:45.600"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.600" endtime="20220215 22:05:45.600"></status>
</kw>
<msg timestamp="20220215 22:05:45.600" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.598" endtime="20220215 22:05:45.600"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${filter_enp_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.600" endtime="20220215 22:05:45.600"></status>
</kw>
<msg timestamp="20220215 22:05:45.600" level="INFO">${filter_enp_employee} = /employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909</msg>
<status status="PASS" starttime="20220215 22:05:45.598" endtime="20220215 22:05:45.601"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${filter_enp_employee}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.727" level="INFO">Get Request using : alias=session, uri=/employees?skip=0&amp;take=100&amp;OrderByDesc=id&amp;includeFingerPrint=true&amp;BranchIds=172909, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.728" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.728" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.601" endtime="20220215 22:05:45.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">{'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 451691, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-09T18:33:56.7630000', 'modifiedBy': 14164, 'modifiedDate': '2021-05-28T11:05:53.7860000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011904, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006604}]}, {'id': 210000001006225, 'code': 'NV000432', 'name': 'aaaaaaaa1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T11:27:04.4130000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011537647, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006225}]}, {'id': 30000000011407, 'code': 'NV000382', 'name': 'Nguyễn Thị Cúc Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:15.4700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T16:25:16.8730000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['17', '15', '21'], 'employeeBranches': [{'id': 140000000209808, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011407}]}, {'id': 30000000011404, 'code': 'NV000376', 'name': 'Hoàng Nam Anh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:57:00.8700000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:47.1490000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 140000000209805, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011404}]}, {'id': 180000000006314, 'code': 'NV000426', 'name': 'Nguyễn Thị Phương Chi', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:26:44.0330000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-14T19:20:56.8580000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000011616, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000006314}]}, {'id': 30000000011406, 'code': 'NV000380', 'name': 'Nguyễn Diệu Chinh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:59:02.2130000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:18.3660000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18', '17'], 'employeeBranches': [{'id': 140000000209807, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011406}]}, {'id': 220000000000810, 'code': 'NV000442', 'name': 'ddđ', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'departmentId': 18011, 'department': {'id': 18011, 'name': '111111', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 452180, 'createdDate': '2020-07-03T15:05:08.3570000', 'isDeleted': False}, 'jobTitleId': 60000000003323, 'jobTitle': {'id': 60000000003323, 'name': 'Lễ tân 1', 'description': '', 'isActive': True, 'tenantId': 4765, 'createdBy': 14164, 'createdDate': '2020-03-27T19:03:02.8260000', 'modifiedBy': 14164, 'modifiedDate': '2020-06-18T14:53:35.4730000', 'isDeleted': False}, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T14:56:12.0200000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T17:50:27.6950000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '111111', 'jobTitleName': 'Lễ tân 1', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 220000000001010, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 220000000000810}]}, {'id': 180000000015919, 'code': 'NV000430', 'name': 'Tung Test Gio', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-06-10T10:55:22.5770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000021419, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000015919}]}, {'id': 30000000011403, 'code': 'NV000374', 'name': 'Trương Thị Mỹ Hạnh', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:56:44.2470000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:18:04.3370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['19'], 'employeeBranches': [{'id': 140000000209804, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011403}]}, {'id': 140000000104304, 'code': 'NV000415', 'name': 'Nguyễn Thị Quỳnh Hoa', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T22:19:35.3200000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:29.4360000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162205, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104304}]}, {'id': 100000000003221, 'code': 'NV000428', 'name': 'HuanTest', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-15T14:21:42.6670000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-02T10:22:17.0240000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 100000000087927, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 100000000003221}]}, {'id': 80000000135822, 'code': 'NV049334', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:42.3170000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177522, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135822}]}, {'id': 80000000135821, 'code': 'NV502878', 'name': 'KLxU', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:39.5900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177521, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135821}]}, {'id': 80000000135820, 'code': 'NV757290', 'name': 'MLxl', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:51:48.3770000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 80000000177520, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 80000000135820}]}, {'id': 220000000000814, 'code': 'NV000443', 'name': 'nv more', 'isActive': True, 'identityNumber': '', 'mobilePhone': '125412512512512', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-08-26T18:05:03.2730000', 'modifiedBy': 14164, 'modifiedDate': '2021-12-18T18:08:50.1660000', 'isDeleted': False, 'profilePictures': [{'id': 230000000004302, 'imageUrl': 'https://cdn-images.kiotviet.vn/4765/fee8cd0fff6449ebb6b740c63218d0b2', 'isMainImage': False, 'employeeId': 220000000000814, 'tenantId': 4765}], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['2'], 'employeeBranches': [{'id': 210000011769085, 'tenantId': 4765, 'branchId': 274126, 'employeeId': 220000000000814}]}, {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, {'id': 30000000017948, 'code': 'NV000413', 'name': 'Nguyễn Thị Thùy Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-12-21T13:50:51.3230000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:41.1890000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['3'], 'employeeBranches': [{'id': 30000000150248, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000017948}]}, {'id': 180000000017574, 'code': 'NV000431', 'name': 'phuoctesst', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-01T15:59:32.1900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 60000001417925, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000017574}]}, {'id': 30000000011405, 'code': 'NV000379', 'name': 'Lê Thị Ngọc Phương', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2020-08-21T18:58:58.6270000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:17:28.8370000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': ['18'], 'employeeBranches': [{'id': 140000000209806, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000011405}]}, {'id': 40000000110212, 'code': 'NV000438', 'name': 'Ha Test', 'dob': '2000-06-23T00:00:00.0000000', 'gender': False, 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-15T09:06:46.5200000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236619, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110212}]}, {'id': 180000000013124, 'code': 'NV000429', 'name': 'test1', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 556660, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-05-04T10:27:01.3600000', 'modifiedBy': 14164, 'modifiedDate': '2021-06-06T10:51:34.3710000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 180000000018526, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 180000000013124}]}, {'id': 50000000124614, 'code': 'NV000433', 'name': 'testcn', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-12T15:38:14.3770000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-12T15:39:49.8510000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000324817, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 50000000124614}]}, {'id': 40000000110435, 'code': 'NV000439', 'name': 'testdemo', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'userId': 557193, 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-19T13:46:39.8270000', 'modifiedBy': 14164, 'modifiedDate': '2021-07-19T13:47:46.6410000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 40000000236836, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 40000000110435}]}, {'id': 110000000019929, 'code': 'NV000440', 'name': 'testP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-29T15:33:27.1600000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162830, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 110000000019929}]}, {'id': 210000001006944, 'code': 'NV000441', 'name': 'TrangcP', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-07-30T11:29:29.4900000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 210000011599952, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 210000001006944}]}, {'id': 140000000104309, 'code': 'NV000419', 'name': 'Trần Mạnh Trung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:14:59.0630000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-08T10:16:08.4250000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 110000000162210, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104309}]}, {'id': 30000000124634, 'code': 'UD81169100', 'name': 'UpdateGpaY', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T22:05:43.5130000', 'modifiedBy': 14164, 'modifiedDate': '2022-02-15T22:05:46.3840000', 'isDeleted': False, 'secretKeyTakenUserId': 14164, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 30000000256734, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124634}]}, {'id': 30000000124701, 'code': 'NV354758', 'name': 'ZWPV', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2022-02-15T21:11:01.8230000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'finqerCodes': [], 'employeeBranches': [{'id': 50000000329070, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 30000000124701}]}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.728" endtime="20220215 22:05:45.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.729" endtime="20220215 22:05:45.729"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.729" endtime="20220215 22:05:45.730"></status>
</kw>
<msg timestamp="20220215 22:05:45.730" level="INFO">${resp} = {'result': {'total': 28, 'data': [{'id': 180000000006604, 'code': 'NV000427', 'name': 'tesstchace 2', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address':...</msg>
<status status="PASS" starttime="20220215 22:05:45.601" endtime="20220215 22:05:45.730"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.755" level="INFO">${list} = [180000000006604, 210000001006225, 30000000011407, 30000000011404, 180000000006314, 30000000011406, 220000000000810, 180000000015919, 30000000011403, 140000000104304, 100000000003221, 80000000135822, ...</msg>
<status status="PASS" starttime="20220215 22:05:45.730" endtime="20220215 22:05:45.755"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:45.758" level="INFO">${value} = 140000000104312</msg>
<status status="PASS" starttime="20220215 22:05:45.756" endtime="20220215 22:05:45.759"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.759" endtime="20220215 22:05:45.759"></status>
</kw>
<msg timestamp="20220215 22:05:45.759" level="INFO">${id_employee} = 140000000104312</msg>
<status status="PASS" starttime="20220215 22:05:45.601" endtime="20220215 22:05:45.759"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_employee}/${id_employee}</arg>
<arg>$..code</arg>
</arguments>
<assign>
<var>${code_employee}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:45.819" level="INFO">Get Request using : alias=session, uri=/employees/140000000104312, headers=None json=None</msg>
<msg timestamp="20220215 22:05:45.819" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:45.819" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.759" endtime="20220215 22:05:45.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.820" level="INFO">{'result': {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 4765, 'branchId': 172909, 'createdBy': 14164, 'createdDate': '2021-04-05T23:16:46.7900000', 'modifiedBy': 14164, 'modifiedDate': '2021-04-13T17:52:58.7750000', 'isDeleted': False, 'clockings': [{'id': 50000002076343, 'shiftId': 170000000006364, 'timeSheetId': 50000000213068, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-01T08:30:00.0000000', 'endTime': '2021-04-01T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002076344, 'shiftId': 170000000006364, 'timeSheetId': 50000000213068, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-02T08:30:00.0000000', 'endTime': '2021-04-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002076345, 'shiftId': 170000000006364, 'timeSheetId': 50000000213068, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-03T08:30:00.0000000', 'endTime': '2021-04-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002076346, 'shiftId': 170000000006364, 'timeSheetId': 50000000213068, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-04T08:30:00.0000000', 'endTime': '2021-04-04T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085527, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 0, 'startTime': '2021-04-05T08:00:00.0000000', 'endTime': '2021-04-05T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085528, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-06T08:00:00.0000000', 'endTime': '2021-04-06T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085529, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-07T08:00:00.0000000', 'endTime': '2021-04-07T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085530, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-08T08:00:00.0000000', 'endTime': '2021-04-08T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085531, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 4, 'startTime': '2021-04-09T08:00:00.0000000', 'endTime': '2021-04-09T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'absenceType': 1, 'clockingPaymentStatus': 1}, {'id': 50000002085532, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-10T08:00:00.0000000', 'endTime': '2021-04-10T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085533, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-11T08:00:00.0000000', 'endTime': '2021-04-11T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085534, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-12T08:00:00.0000000', 'endTime': '2021-04-12T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085535, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-13T08:00:00.0000000', 'endTime': '2021-04-13T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085536, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-14T08:00:00.0000000', 'endTime': '2021-04-14T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085537, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-15T08:00:00.0000000', 'endTime': '2021-04-15T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085538, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-16T08:00:00.0000000', 'endTime': '2021-04-16T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085539, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-17T08:00:00.0000000', 'endTime': '2021-04-17T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085540, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-18T08:00:00.0000000', 'endTime': '2021-04-18T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085541, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-19T08:00:00.0000000', 'endTime': '2021-04-19T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085542, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-20T08:00:00.0000000', 'endTime': '2021-04-20T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085543, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-22T08:00:00.0000000', 'endTime': '2021-04-22T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085544, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-23T08:00:00.0000000', 'endTime': '2021-04-23T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085545, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-24T08:00:00.0000000', 'endTime': '2021-04-24T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085546, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-25T08:00:00.0000000', 'endTime': '2021-04-25T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085547, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-26T08:00:00.0000000', 'endTime': '2021-04-26T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085548, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-27T08:00:00.0000000', 'endTime': '2021-04-27T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085549, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-28T08:00:00.0000000', 'endTime': '2021-04-28T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085550, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-04-29T08:00:00.0000000', 'endTime': '2021-04-29T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085551, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 0, 'startTime': '2021-05-02T08:00:00.0000000', 'endTime': '2021-05-02T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085552, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 0, 'startTime': '2021-05-03T08:00:00.0000000', 'endTime': '2021-05-03T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085553, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 0, 'startTime': '2021-05-04T08:00:00.0000000', 'endTime': '2021-05-04T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 50000002085554, 'shiftId': 60000000015408, 'timeSheetId': 50000000214073, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 0, 'startTime': '2021-05-05T08:00:00.0000000', 'endTime': '2021-05-05T18:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533693, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-01T07:00:00.0000000', 'endTime': '2021-06-01T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533694, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-06-02T07:00:00.0000000', 'endTime': '2021-06-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-02T07:00:00.0000000', 'checkOutDate': '2021-06-02T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004533695, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-06-03T07:00:00.0000000', 'endTime': '2021-06-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-03T07:00:00.0000000', 'checkOutDate': '2021-06-03T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004533696, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-05T07:00:00.0000000', 'endTime': '2021-06-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533697, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-06T07:00:00.0000000', 'endTime': '2021-06-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533698, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-07T07:00:00.0000000', 'endTime': '2021-06-07T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533699, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-06-08T07:00:00.0000000', 'endTime': '2021-06-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-08T07:00:00.0000000', 'checkOutDate': '2021-06-08T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004533700, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-06-09T07:00:00.0000000', 'endTime': '2021-06-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-09T07:00:00.0000000', 'checkOutDate': '2021-06-09T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004533701, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-10T07:00:00.0000000', 'endTime': '2021-06-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533702, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-12T07:00:00.0000000', 'endTime': '2021-06-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533703, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-06-13T07:00:00.0000000', 'endTime': '2021-06-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-06-13T07:00:00.0000000', 'checkOutDate': '2021-06-13T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 1}, {'id': 60000004533704, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-14T07:00:00.0000000', 'endTime': '2021-06-14T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004533705, 'shiftId': 160000000004503, 'timeSheetId': 60000000603309, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-06-15T07:00:00.0000000', 'endTime': '2021-06-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534004, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534005, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534006, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534007, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-05T07:00:00.0000000', 'checkOutDate': '2021-05-05T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534008, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534009, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534010, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534011, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534012, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534013, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534014, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534015, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534016, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534017, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534018, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534019, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-19T07:00:00.0000000', 'checkOutDate': '2021-05-19T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534020, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534021, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-22T07:00:00.0000000', 'checkOutDate': '2021-05-22T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534022, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T12:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534023, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}, {'id': 60000004534024, 'shiftId': 160000000004503, 'timeSheetId': 60000000603326, 'employeeId': 140000000104312, 'workById': 140000000104312, 'clockingStatus': 1, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T12:00:00.0000000', 'branchId': 172909, 'tenantId': 4765, 'isDeleted': False, 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingPaymentStatus': 0}], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 110000000162213, 'tenantId': 4765, 'branchId': 172909, 'employeeId': 140000000104312}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220215 22:05:45.819" endtime="20220215 22:05:45.821"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220215 22:05:45.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.821" endtime="20220215 22:05:45.821"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.821" endtime="20220215 22:05:45.821"></status>
</kw>
<msg timestamp="20220215 22:05:45.822" level="INFO">${resp} = {'result': {'id': 140000000104312, 'code': 'NV000421', 'name': 'Tạ Hồng Nhung', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '...</msg>
<status status="PASS" starttime="20220215 22:05:45.759" endtime="20220215 22:05:45.822"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220215 22:05:45.842" level="INFO">${list} = ['NV000421']</msg>
<status status="PASS" starttime="20220215 22:05:45.822" endtime="20220215 22:05:45.842"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220215 22:05:45.842" level="INFO">${value} = NV000421</msg>
<status status="PASS" starttime="20220215 22:05:45.842" endtime="20220215 22:05:45.842"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.843" endtime="20220215 22:05:45.843"></status>
</kw>
<msg timestamp="20220215 22:05:45.843" level="INFO">${code_employee} = NV000421</msg>
<status status="PASS" starttime="20220215 22:05:45.759" endtime="20220215 22:05:45.843"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_employee}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.843" endtime="20220215 22:05:45.843"></status>
</kw>
<msg timestamp="20220215 22:05:45.843" level="INFO">${id_employee} = 140000000104312</msg>
<status status="PASS" starttime="20220215 22:05:45.598" endtime="20220215 22:05:45.843"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${amount}</arg>
<arg>${id_employee}</arg>
<arg>${method}</arg>
<arg>${date}</arg>
<arg>\ \</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.844" level="INFO">${list_format} = ['10000', 140000000104312, 'Cash', '10/01/2022', ' ']</msg>
<status status="PASS" starttime="20220215 22:05:45.843" endtime="20220215 22:05:45.844"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_payment}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_payment}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220215 22:05:45.844" level="INFO">Length is 5</msg>
<msg timestamp="20220215 22:05:45.844" level="INFO">${length} = 5</msg>
<status status="PASS" starttime="20220215 22:05:45.844" endtime="20220215 22:05:45.844"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.845" level="INFO">${value_temp} = 10000</msg>
<status status="PASS" starttime="20220215 22:05:45.844" endtime="20220215 22:05:45.845"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.845" level="INFO">${value_temp} = 10000</msg>
<status status="PASS" starttime="20220215 22:05:45.845" endtime="20220215 22:05:45.845"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.845" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":[D1],"Method":"[D2]","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:45.845" endtime="20220215 22:05:45.845"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.844" endtime="20220215 22:05:45.845"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.845" level="INFO">${value_temp} = 140000000104312</msg>
<status status="PASS" starttime="20220215 22:05:45.845" endtime="20220215 22:05:45.845"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.846" level="INFO">${value_temp} = 140000000104312</msg>
<status status="PASS" starttime="20220215 22:05:45.845" endtime="20220215 22:05:45.846"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.846" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"[D2]","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:45.846" endtime="20220215 22:05:45.846"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.845" endtime="20220215 22:05:45.846"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.846" level="INFO">${value_temp} = Cash</msg>
<status status="PASS" starttime="20220215 22:05:45.846" endtime="20220215 22:05:45.846"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.846" level="INFO">${value_temp} = Cash</msg>
<status status="PASS" starttime="20220215 22:05:45.846" endtime="20220215 22:05:45.846"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.847" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"Cash","TransDate":"[D3]"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:45.847" endtime="20220215 22:05:45.847"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.846" endtime="20220215 22:05:45.847"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.847" level="INFO">${value_temp} = 10/01/2022</msg>
<status status="PASS" starttime="20220215 22:05:45.847" endtime="20220215 22:05:45.847"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.847" level="INFO">${value_temp} = 10/01/2022</msg>
<status status="PASS" starttime="20220215 22:05:45.847" endtime="20220215 22:05:45.847"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.848" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[[D4]]}</msg>
<status status="PASS" starttime="20220215 22:05:45.847" endtime="20220215 22:05:45.848"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.847" endtime="20220215 22:05:45.848"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.848" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 22:05:45.848" endtime="20220215 22:05:45.848"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220215 22:05:45.848" level="INFO">${value_temp} =  </msg>
<status status="PASS" starttime="20220215 22:05:45.848" endtime="20220215 22:05:45.848"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220215 22:05:45.848" level="INFO">${data_format} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}</msg>
<status status="PASS" starttime="20220215 22:05:45.848" endtime="20220215 22:05:45.848"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.848" endtime="20220215 22:05:45.848"></status>
</kw>
<status status="PASS" starttime="20220215 22:05:45.844" endtime="20220215 22:05:45.848"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220215 22:05:45.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:45.849" endtime="20220215 22:05:45.849"></status>
</kw>
<msg timestamp="20220215 22:05:45.849" level="INFO">${data_payment} = {"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}</msg>
<status status="PASS" starttime="20220215 22:05:45.844" endtime="20220215 22:05:45.849"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session_man}</arg>
<arg>${enp_payment}</arg>
<arg>${data_payment}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220215 22:05:46.186" level="INFO">Post Request using : alias=sessionMan, uri=/payslip-payments, data={"PayslipPayments":[{"Amount":10000,"EmployeeId":140000000104312,"Method":"Cash","TransDate":"10/01/2022"}],"Paysheets":[ ]}, headers={'retailer': 'testz1', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '172909', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxNDE2NCwiaWF0IjoxNjQ0OTM3NTQ2LCJleHAiOjE2NDczNTY3NDYsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6Ijg3MjY5MjY2MWUzODQ2NzRiMDE5YWU3OTgyZjdhYzE1Iiwia3Z1aWQiOjE0MTY0LCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MTcyOTA5LCJrdnJpbmRpZCI6Miwia3ZyY29kZSI6InRlc3R6MSIsImt2cmlkIjo0NzY1LCJrdnVyaWQiOjQ3NjUsImt2cmdpZCI6MSwicGVybXMiOiIifQ.v24fvw5VuzGZcTRcFEMZZlwQvDVOd9QEKuCOhacLSCyPCuvMQ9_MxgCV_7zSBdVr1jpuonX0kN1daBVq19om1YGmK1mEhRxfVAKev8IvFnU4lWyALCBQmeNfLRk-AY9z3sUyNeNnRvEd9Aqtgehb1wRJVeorrhyOJx7Q-mfi_yPiBydCKq0vdNHNOExDAxy9wjd3x3U5iKEB_oMDQ18Uma0del-bu4CNDhnu5L-Lzz3iMQQSgQoxM1r8RRFOEOB6242jluVZLq3_ZT4LEk28ZPm-_-N-G93H_iJp2_gdDWELc1LLh3gtH-tg_o_oRHQB9TXgpe14nzQJ2ufMf9MVWQ'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220215 22:05:46.186" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-man.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220215 22:05:46.186" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220215 22:05:45.849" endtime="20220215 22:05:46.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.187" level="INFO">[{'EmployeeIsDeleted': False, 'PayslipValue': 0, 'PaidValue': 0, 'NeedPayValue': 0, 'TargetCode': 'PCL000037', 'UserName': '', 'EventId': 0, 'EventAction': 0, 'RetryCount': 0, 'Id': 203924, 'Code': 'PCL000037', 'Amount': 10000, 'AmountOriginal': 10000, 'IsAllowcation': False, 'Method': 'Cash', 'RetailerId': 4765, 'BranchId': 172909, 'PayslipId': 0, 'EmployeeId': 140000000104312, 'TransDate': '2022-01-10T00:00:00.0060000+07:00', 'UserId': 14164, 'Status': 0, 'CreatedDate': '2022-02-15T22:05:46.8871024+07:00', 'CreatedBy': 14164}]</msg>
<status status="PASS" starttime="20220215 22:05:46.187" endtime="20220215 22:05:46.187"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220215 22:05:46.187" endtime="20220215 22:05:46.187"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220215 22:05:46.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220215 22:05:46.188" endtime="20220215 22:05:46.188"></status>
</kw>
<msg timestamp="20220215 22:05:46.188" level="INFO">${resp} = [{'EmployeeIsDeleted': False, 'PayslipValue': 0, 'PaidValue': 0, 'NeedPayValue': 0, 'TargetCode': 'PCL000037', 'UserName': '', 'EventId': 0, 'EventAction': 0, 'RetryCount': 0, 'Id': 203924, 'Code': 'P...</msg>
<status status="PASS" starttime="20220215 22:05:45.849" endtime="20220215 22:05:46.188"></status>
</kw>
<doc>Thanh toán bằng tiền mặt không phân bổ vào phiếu lương</doc>
<tags>
<tag>all</tag>
<tag>payment</tag>
</tags>
<status status="PASS" starttime="20220215 22:05:45.597" endtime="20220215 22:05:46.188" critical="yes"></status>
</test>
<status status="PASS" starttime="20220215 22:05:44.901" endtime="20220215 22:05:46.189"></status>
</suite>
<status status="PASS" starttime="20220215 22:05:44.899" endtime="20220215 22:05:46.190"></status>
</suite>
<status status="PASS" starttime="20220215 22:05:44.825" endtime="20220215 22:05:46.190"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">all</stat>
<stat pass="1" fail="0">payment</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="1" fail="0" id="s1-s1" name="NhanVien">Testsuites.NhanVien</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Payment">Testsuites.NhanVien.Payment</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
