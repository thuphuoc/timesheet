<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220228 13:51:29.778">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="BangTinhLuong" source="D:\timesheet\testsuites\BangTinhLuong">
<suite id="s1-s1-s1" name="Paysheet" source="D:\timesheet\testsuites\BangTinhLuong\paysheet.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone61=https://testz61.kiotviet.vn/api</arg>
<arg>zone9=https://taphoa.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>zone59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>zone59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb59508=https://phuoc59508.kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:30.330" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone61': 'https://test...</msg>
<status status="PASS" starttime="20220228 13:51:30.329" endtime="20220228 13:51:30.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>zone61=/auth/salelogin</arg>
<arg>zone9=/auth/salelogin</arg>
<arg>zone59902=/auth/salelogin</arg>
<arg>zone59903=/auth/salelogin</arg>
<arg>fnb59508=/auth/salelogin</arg>
<arg>booking=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:30.330" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', 'zone61': '/auth/salelogin', 'zone9': '/auth/salelogin',...</msg>
<status status="PASS" starttime="20220228 13:51:30.330" endtime="20220228 13:51:30.330"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>zone61=https://api-timesheet.kiotviet.vn</arg>
<arg>zone9=https://api-timesheet2.kiotviet.vn</arg>
<arg>zone59902=https://kvpos.com:55002</arg>
<arg>zone59903=https://kvpos.com:55003</arg>
<arg>fnb59508=https://kvpos.com:55008</arg>
<arg>booking=https://timesheetapi.kvpos.com:9009</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220228 13:51:30.331" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220228 13:51:30.330" endtime="20220228 13:51:30.331"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>zone61=https://api-man3.kiotviet.vn/api</arg>
<arg>zone9=https://api-man3.kiotviet.vn/api</arg>
<arg>zone59902=https://kvpos.com:59932/api</arg>
<arg>zone59903=https://kvpos.com:59933/api</arg>
<arg>fnb59508=https://kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220228 13:51:30.331" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220228 13:51:30.331" endtime="20220228 13:51:30.331"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=admin</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220228 13:51:30.331" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', 'zone9': 'taphoa', 'zone61': 'admin', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1', 'booking': '1',...</msg>
<status status="PASS" starttime="20220228 13:51:30.331" endtime="20220228 13:51:30.331"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>zone9=123456</arg>
<arg>zone61=123456</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220228 13:51:30.332" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', 'zone9': '123456', 'zone61': '123456', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1', 'booking': '1', 'f...</msg>
<status status="PASS" starttime="20220228 13:51:30.331" endtime="20220228 13:51:30.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=testz61</arg>
<arg>zone59902=phuoc902</arg>
<arg>zone59903=phuoc903</arg>
<arg>fnb59508=phuoc59508</arg>
<arg>booking=phuoc009</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220228 13:51:30.332" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', 'zone9': 'taphoa', 'zone61': 'testz61', 'zone59902': 'phuoc902', 'zone59903': 'phuoc903', 'fnb59508'...</msg>
<status status="PASS" starttime="20220228 13:51:30.332" endtime="20220228 13:51:30.332"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220228 13:51:30.332" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 13:51:30.332" endtime="20220228 13:51:30.332"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220228 13:51:30.333" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:30.332" endtime="20220228 13:51:30.333"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220228 13:51:30.333" level="INFO">${retailer} = testz61</msg>
<status status="PASS" starttime="20220228 13:51:30.333" endtime="20220228 13:51:30.333"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:30.333" level="INFO">${url_saleLogin} = https://testz61.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:30.333" endtime="20220228 13:51:30.333"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:30.333" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 13:51:30.333" endtime="20220228 13:51:30.333"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220228 13:51:30.334" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 13:51:30.333" endtime="20220228 13:51:30.334"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220228 13:51:30.334" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:30.334" endtime="20220228 13:51:30.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.334" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 13:51:30.334" endtime="20220228 13:51:30.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.334" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 13:51:30.334" endtime="20220228 13:51:30.334"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.335" level="INFO">${retailer} = testz61</msg>
<status status="PASS" starttime="20220228 13:51:30.334" endtime="20220228 13:51:30.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.335" level="INFO">${url_saleLogin} = https://testz61.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:30.335" endtime="20220228 13:51:30.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.335" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 13:51:30.335" endtime="20220228 13:51:30.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.335" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 13:51:30.335" endtime="20220228 13:51:30.335"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.336" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 13:51:30.336" endtime="20220228 13:51:30.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 13:51:30.336" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220228 13:51:30.336" endtime="20220228 13:51:30.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220228 13:51:30.336" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123456'}</msg>
<status status="PASS" starttime="20220228 13:51:30.336" endtime="20220228 13:51:30.336"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.337" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz61.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:30.337" endtime="20220228 13:51:30.337"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:30.963" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123456"}, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:30.963" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz61.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:30.963" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:30.337" endtime="20220228 13:51:30.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:30.963" level="INFO">{'UserId': 59211, 'UserName': 'admin', 'SessionId': '6PvxcdP0qkLMCHApWbLr', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw', 'CurrentBranchId': 34428, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220228 13:51:30.963" endtime="20220228 13:51:30.963"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:31.004" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdL...</msg>
<status status="PASS" starttime="20220228 13:51:30.963" endtime="20220228 13:51:31.004"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:31.004" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:31.004" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:31.004" endtime="20220228 13:51:31.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:31.005" endtime="20220228 13:51:31.005"></status>
</kw>
<msg timestamp="20220228 13:51:31.005" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220228 13:51:31.004" endtime="20220228 13:51:31.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.005" endtime="20220228 13:51:31.005"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.005" endtime="20220228 13:51:31.005"></status>
</kw>
<msg timestamp="20220228 13:51:31.005" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJ...</msg>
<status status="PASS" starttime="20220228 13:51:30.963" endtime="20220228 13:51:31.005"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220228 13:51:31.006" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220228 13:51:31.006" endtime="20220228 13:51:31.006"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:31.024" level="INFO">${result} = [59211]</msg>
<status status="PASS" starttime="20220228 13:51:31.006" endtime="20220228 13:51:31.024"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:31.024" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:31.024" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:31.024" endtime="20220228 13:51:31.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:31.025" endtime="20220228 13:51:31.025"></status>
</kw>
<msg timestamp="20220228 13:51:31.025" level="INFO">${result} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:31.025" endtime="20220228 13:51:31.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.025" endtime="20220228 13:51:31.026"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.025" endtime="20220228 13:51:31.026"></status>
</kw>
<msg timestamp="20220228 13:51:31.026" level="INFO">${user_login} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:31.006" endtime="20220228 13:51:31.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.026" level="INFO">${user_login} = 59211</msg>
<status status="PASS" starttime="20220228 13:51:31.026" endtime="20220228 13:51:31.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.026" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNl...</msg>
<status status="PASS" starttime="20220228 13:51:31.026" endtime="20220228 13:51:31.027"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220228 13:51:31.027" level="INFO">${random_str} = brqu</msg>
<status status="PASS" starttime="20220228 13:51:31.027" endtime="20220228 13:51:31.027"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.027" endtime="20220228 13:51:31.027"></status>
</kw>
<msg timestamp="20220228 13:51:31.027" level="INFO">${random_str} = brqu</msg>
<status status="PASS" starttime="20220228 13:51:31.027" endtime="20220228 13:51:31.027"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.028" level="INFO">${random_str} = brqu</msg>
<status status="PASS" starttime="20220228 13:51:31.028" endtime="20220228 13:51:31.028"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220228 13:51:31.028" level="INFO">${random_number} = 89357880</msg>
<status status="PASS" starttime="20220228 13:51:31.028" endtime="20220228 13:51:31.028"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.028" endtime="20220228 13:51:31.028"></status>
</kw>
<msg timestamp="20220228 13:51:31.029" level="INFO">${random_number} = 89357880</msg>
<status status="PASS" starttime="20220228 13:51:31.028" endtime="20220228 13:51:31.029"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.029" level="INFO">${random_number} = 89357880</msg>
<status status="PASS" starttime="20220228 13:51:31.029" endtime="20220228 13:51:31.029"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">${result} = [34428]</msg>
<status status="PASS" starttime="20220228 13:51:31.029" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:31.046" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<msg timestamp="20220228 13:51:31.046" level="INFO">${result} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<msg timestamp="20220228 13:51:31.046" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.029" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<assign>
<var>${is_run_retail}</var>
<var>${value}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<msg timestamp="20220228 13:51:31.046" level="INFO">${is_run_retail} = PASS</msg>
<msg timestamp="20220228 13:51:31.046" level="INFO">${value} = None</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${is_run_retail}' == 'PASS'</arg>
<arg>${true}</arg>
<arg>${false}</arg>
</arguments>
<assign>
<var>${run}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">${run} = True</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${run}'=='True'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb Or Booking</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RunRetail</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">RunRetail</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">${branchId} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220228 13:51:31.046" level="INFO">${headers_not_contenType} = {'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0N...</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">${header} = {'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3V...</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">${headers_not_contenType} = {'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0N...</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz61', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man3.kiotviet.vn/api, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220228 13:51:31.046" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.046"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:31.268" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/34428, headers=None json=None</msg>
<msg timestamp="20220228 13:51:31.268" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-man3.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:31.268" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.291" level="INFO">{'Id': 34428, 'Name': 'Chi nhánh B', 'Type': 0, 'Address': '434 trần Khát chân', 'Province': 'Hà Giang', 'District': 'Huyện Bắc Quang', 'ContactNumber': '0912345678', 'IsActive': True, 'RetailerId': 122796, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Hà Giang - Huyện Bắc Quang', 'WardName': 'Xã Tân Lập', 'GmbStatus': 1, 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'OrderSuppliers': [], 'WarrantyBranchGroups': [], 'BranchTakingAddresses': [], 'Patients': [], 'Clinics': [], 'Doctors': [], 'DoctorQualifications': [], 'DoctorSpecialities': [], 'Prescriptions': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'IdOld': 0, 'TotalUser': 0, 'CompareBranchName': 'Chi nhánh B', 'StatusGmbValue': 'Chưa đăng ký', 'IsTimeSheetException': False, 'LocationId': 0, 'WardId': 0, 'SyncProductSearchEventId': 0}</msg>
<status status="PASS" starttime="20220228 13:51:31.268" endtime="20220228 13:51:31.291"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220228 13:51:31.318" level="INFO">${name} = ['Chi nhánh B']</msg>
<status status="PASS" starttime="20220228 13:51:31.299" endtime="20220228 13:51:31.318"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.318" endtime="20220228 13:51:31.318"></status>
</kw>
<msg timestamp="20220228 13:51:31.318" level="INFO">${name_branch} = ['Chi nhánh B']</msg>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.318"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.046" endtime="20220228 13:51:31.318"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:30.329" endtime="20220228 13:51:31.318"></status>
</kw>
<test id="s1-s1-s1-t1" name="Create paysheet">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${startDate}</arg>
<arg>${endDate}</arg>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:31.319" level="INFO">${list_format} = ['01/01/2022', '31/01/2022', 34428]</msg>
<status status="PASS" starttime="20220228 13:51:31.319" endtime="20220228 13:51:31.319"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_paysheet}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_paysheet}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:31.320" level="INFO">Length is 3</msg>
<msg timestamp="20220228 13:51:31.320" level="INFO">${length} = 3</msg>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.320"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.320" level="INFO">${value_temp} = 01/01/2022</msg>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.320"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.320" level="INFO">${value_temp} = 01/01/2022</msg>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.320"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:31.321" level="INFO">${data_format} = {"startTime":"01/01/2022","endTime":"[D1]","salaryPeriod":1,"branches":[{"id":[D2]}]}</msg>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.321"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.321"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.321" level="INFO">${value_temp} = 31/01/2022</msg>
<status status="PASS" starttime="20220228 13:51:31.321" endtime="20220228 13:51:31.321"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.321" level="INFO">${value_temp} = 31/01/2022</msg>
<status status="PASS" starttime="20220228 13:51:31.321" endtime="20220228 13:51:31.321"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:31.321" level="INFO">${data_format} = {"startTime":"01/01/2022","endTime":"31/01/2022","salaryPeriod":1,"branches":[{"id":[D2]}]}</msg>
<status status="PASS" starttime="20220228 13:51:31.321" endtime="20220228 13:51:31.321"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.321" endtime="20220228 13:51:31.322"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.322" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.322" endtime="20220228 13:51:31.323"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:31.324" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:31.324" endtime="20220228 13:51:31.324"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:31.324" level="INFO">${data_format} = {"startTime":"01/01/2022","endTime":"31/01/2022","salaryPeriod":1,"branches":[{"id":34428}]}</msg>
<status status="PASS" starttime="20220228 13:51:31.324" endtime="20220228 13:51:31.324"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.322" endtime="20220228 13:51:31.324"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:31.320" endtime="20220228 13:51:31.324"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:31.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:31.324" endtime="20220228 13:51:31.325"></status>
</kw>
<msg timestamp="20220228 13:51:31.325" level="INFO">${data_paysheet} = {"startTime":"01/01/2022","endTime":"31/01/2022","salaryPeriod":1,"branches":[{"id":34428}]}</msg>
<status status="PASS" starttime="20220228 13:51:31.319" endtime="20220228 13:51:31.325"></status>
</kw>
<kw name="Post Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_paysheet}</arg>
<arg>${data_paysheet}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:32.601" level="INFO">Post Request using : alias=session, uri=/paysheets, data={"startTime":"01/01/2022","endTime":"31/01/2022","salaryPeriod":1,"branches":[{"id":34428}]}, headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:32.602" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:32.602" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:31.326" endtime="20220228 13:51:32.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.602" level="INFO">{'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương 01/01/2022 - 31/01/2022', 'salaryPeriod': 1, 'startTime': '2022-01-01T00:00:00.0000000+07:00', 'paysheetStatus': 4, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/01/2022 - 31/01/2022', 'endTime': '2022-01-31T23:59:59.0000000+07:00', 'employeeTotal': 0, 'totalNetSalary': 0, 'totalPayment': 0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2022-02-28T13:51:32.3828619+07:00', 'version': 0, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:32.602" endtime="20220228 13:51:32.602"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:32.602" endtime="20220228 13:51:32.603"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:32.603" endtime="20220228 13:51:32.603"></status>
</kw>
<msg timestamp="20220228 13:51:32.603" level="INFO">${resp} = {'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương ...</msg>
<status status="PASS" starttime="20220228 13:51:31.325" endtime="20220228 13:51:32.603"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp}</arg>
<arg>$.result.id</arg>
</arguments>
<assign>
<var>${id_paysheet}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 13:51:32.633" level="INFO">${result} = [100000000107501]</msg>
<status status="PASS" starttime="20220228 13:51:32.604" endtime="20220228 13:51:32.633"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:32.633" level="INFO">Length is 1</msg>
<msg timestamp="20220228 13:51:32.633" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 13:51:32.633" endtime="20220228 13:51:32.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 13:51:32.633" endtime="20220228 13:51:32.633"></status>
</kw>
<msg timestamp="20220228 13:51:32.633" level="INFO">${result} = 100000000107501</msg>
<status status="PASS" starttime="20220228 13:51:32.633" endtime="20220228 13:51:32.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:32.634" endtime="20220228 13:51:32.634"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:32.634" endtime="20220228 13:51:32.634"></status>
</kw>
<msg timestamp="20220228 13:51:32.634" level="INFO">${id_paysheet} = 100000000107501</msg>
<status status="PASS" starttime="20220228 13:51:32.603" endtime="20220228 13:51:32.634"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_paysheet}/${id_paysheet}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:32.817" level="INFO">Get Request using : alias=session, uri=/paysheets/100000000107501, headers=None json=None</msg>
<msg timestamp="20220228 13:51:32.818" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:32.818" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:32.635" endtime="20220228 13:51:32.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.820" level="INFO">{'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương 01/01/2022 - 31/01/2022', 'salaryPeriod': 1, 'startTime': '2022-01-01T00:00:00.0000000', 'paysheetStatus': 4, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/01/2022 - 31/01/2022', 'endTime': '2022-01-31T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0, 'totalPayment': 0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2022-02-28T13:51:32.3820000', 'version': 0, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:32.819" endtime="20220228 13:51:32.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:32.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:32.820" endtime="20220228 13:51:32.822"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:32.822" endtime="20220228 13:51:32.823"></status>
</kw>
<msg timestamp="20220228 13:51:32.824" level="INFO">${resp} = {'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương ...</msg>
<status status="PASS" starttime="20220228 13:51:32.634" endtime="20220228 13:51:32.824"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:32.866" level="INFO">${list} = ['BL000039']</msg>
<status status="PASS" starttime="20220228 13:51:32.824" endtime="20220228 13:51:32.866"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:32.870" level="INFO">${value} = BL000039</msg>
<status status="PASS" starttime="20220228 13:51:32.866" endtime="20220228 13:51:32.870"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:32.871" endtime="20220228 13:51:32.871"></status>
</kw>
<msg timestamp="20220228 13:51:32.871" level="INFO">${code_paysheet} = BL000039</msg>
<status status="PASS" starttime="20220228 13:51:32.634" endtime="20220228 13:51:32.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${code_paysheet}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.871" level="INFO">BL000039</msg>
<status status="PASS" starttime="20220228 13:51:32.871" endtime="20220228 13:51:32.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_paysheet}</arg>
<arg>${id_paysheet}</arg>
</arguments>
<msg timestamp="20220228 13:51:32.871" level="INFO">${id_paysheet} = 100000000107501</msg>
<status status="PASS" starttime="20220228 13:51:32.871" endtime="20220228 13:51:32.872"></status>
</kw>
<doc>Thêm mới bảng lương tạm tính</doc>
<tags>
<tag>all</tag>
<tag>paysheet</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:31.319" endtime="20220228 13:51:32.872" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Auto loading paysheet">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3x</arg>
<arg>3</arg>
<arg>Auto loading paysheet</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Auto loading paysheet">
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_autoloading}/${id_paysheet}</arg>
<arg>${data_auto_load}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:33.008" level="INFO">Put Request using : alias=session, uri=/paysheets/auto-loading-and-update-data-source/100000000107501, data={"modifiedDate":"2022-01-18T17:56:51.3240000"},                     headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:33.009" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:33.009" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:32.873" endtime="20220228 13:51:33.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:33.009" level="INFO">{'message': 'Có lỗi khi cập nhật dữ liệu', 'errors': [{'message': 'Bảng lương đang xử lỉ.'}]}</msg>
<status status="PASS" starttime="20220228 13:51:33.009" endtime="20220228 13:51:33.009"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:33.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220228 13:51:33.010" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20220228 13:51:33.009" endtime="20220228 13:51:33.010"></status>
</kw>
<status status="FAIL" starttime="20220228 13:51:32.873" endtime="20220228 13:51:33.010"></status>
</kw>
<status status="FAIL" starttime="20220228 13:51:32.873" endtime="20220228 13:51:33.010"></status>
</kw>
<kw name="Auto loading paysheet">
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_autoloading}/${id_paysheet}</arg>
<arg>${data_auto_load}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:36.154" level="INFO">Put Request using : alias=session, uri=/paysheets/auto-loading-and-update-data-source/100000000107501, data={"modifiedDate":"2022-01-18T17:56:51.3240000"},                     headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:36.154" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:36.154" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:36.012" endtime="20220228 13:51:36.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:36.154" level="INFO">{'message': 'Có lỗi khi cập nhật dữ liệu', 'errors': [{'message': 'Bảng lương đang xử lỉ.'}]}</msg>
<status status="PASS" starttime="20220228 13:51:36.154" endtime="20220228 13:51:36.154"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:36.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220228 13:51:36.154" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20220228 13:51:36.154" endtime="20220228 13:51:36.154"></status>
</kw>
<status status="FAIL" starttime="20220228 13:51:36.011" endtime="20220228 13:51:36.154"></status>
</kw>
<status status="FAIL" starttime="20220228 13:51:36.011" endtime="20220228 13:51:36.154"></status>
</kw>
<kw name="Auto loading paysheet">
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_autoloading}/${id_paysheet}</arg>
<arg>${data_auto_load}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:39.423" level="INFO">Put Request using : alias=session, uri=/paysheets/auto-loading-and-update-data-source/100000000107501, data={"modifiedDate":"2022-01-18T17:56:51.3240000"},                     headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:39.423" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:39.423" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.169" endtime="20220228 13:51:39.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.423" level="INFO">{'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương 01/01/2022 - 31/01/2022', 'salaryPeriod': 1, 'startTime': '2022-01-01T00:00:00.0000000', 'paysheetStatus': 4, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/01/2022 - 31/01/2022', 'endTime': '2022-01-31T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0, 'totalPayment': 0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2022-02-28T13:51:36.5840000', 'modifiedDate': '2022-02-28T13:51:40.0903525+07:00', 'version': 0, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:39.423" endtime="20220228 13:51:39.423"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.423" endtime="20220228 13:51:39.423"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.423" endtime="20220228 13:51:39.423"></status>
</kw>
<msg timestamp="20220228 13:51:39.423" level="INFO">${resp} = {'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương ...</msg>
<status status="PASS" starttime="20220228 13:51:39.169" endtime="20220228 13:51:39.423"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.423" endtime="20220228 13:51:39.423"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.169" endtime="20220228 13:51:39.438"></status>
</kw>
<msg timestamp="20220228 13:51:39.438" level="INFO">${resp} = {'result': {'id': 100000000107501, 'code': 'BL000039', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2022-02-28T13:51:33.0030000', 'name': 'Bảng lương ...</msg>
<status status="PASS" starttime="20220228 13:51:32.872" endtime="20220228 13:51:39.438"></status>
</kw>
<doc>Tải lại bảng lương tạm tính</doc>
<tags>
<tag>all</tag>
<tag>paysheet</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:32.872" endtime="20220228 13:51:39.438" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Cancel paysheet">
<kw name="Get Id In List Paysheets">
<arguments>
<arg>${draft}</arg>
</arguments>
<assign>
<var>${id_paysheet}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${status_paysheet}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${list_format} = [34428, '1']</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_filter_sheets}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_filter_sheets}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">Length is 2</msg>
<msg timestamp="20220228 13:51:39.438" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${value_temp} = 34428</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${data_format} = /paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[[D1]]</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${value_temp} = 1</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${value_temp} = 1</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.438" level="INFO">${data_format} = /paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[1]</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<msg timestamp="20220228 13:51:39.438" level="INFO">${enp_filter_sheets} = /paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[1]</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${enp_filter_sheets}</arg>
<arg>${enp_filter_sheets}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.438" level="INFO">${enp_filter_sheets} = /paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[1]</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.438"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_filter_sheets}</arg>
<arg>$..data..id</arg>
</arguments>
<assign>
<var>${id_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:39.697" level="INFO">Get Request using : alias=session, uri=/paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[1], headers=None json=None</msg>
<msg timestamp="20220228 13:51:39.697" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:39.697" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.697" level="INFO">{'result': {'totalNetSalary': 876227974.0, 'totalPayment': 0.0, 'totalNeedPay': 876227974.0, 'totalRefund': 0, 'total': 32, 'data': [{'id': 50000000121111, 'code': 'BL000038', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-17T00:53:44.9230000', 'name': 'Bảng lương 10/12/2021 - 16/12/2021', 'salaryPeriod': 3, 'startTime': '2021-12-10T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 7, 'paysheetPeriodName': '10/12/2021 - 16/12/2021', 'endTime': '2021-12-16T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-17T00:53:46.8720000', 'modifiedDate': '2021-12-17T00:53:46.8730000', 'version': 0, 'isDraft': False}, {'id': 100000000106301, 'code': 'BL000037', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-17T00:53:28.2600000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-17T00:53:30.8710000', 'modifiedDate': '2021-12-17T00:53:30.9070000', 'version': 0, 'isDraft': False}, {'id': 120000000123403, 'code': 'BL000036', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-13T17:09:08.4700000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-13T17:09:10.1130000', 'modifiedDate': '2021-12-13T17:09:10.1670000', 'version': 0, 'isDraft': False}, {'id': 100000000005501, 'code': 'BL000030', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-07-15T09:40:23.7070000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 113020.0, 'totalPayment': 0.0, 'totalNeedPay': 113020.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T09:40:55.7570000', 'modifiedDate': '2021-07-15T09:40:56.7160000', 'version': 1, 'isDraft': False}, {'id': 60000000162928, 'code': 'BL000029', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:04.8930000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 4, 'totalNetSalary': 24076729.0, 'totalPayment': 0.0, 'totalNeedPay': 24076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:20:03.4600000', 'modifiedDate': '2021-07-15T09:40:50.0860000', 'version': 1, 'isDraft': False}, {'id': 60000000162927, 'code': 'BL000028', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:03.1170000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:20:01.6430000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162926, 'code': 'BL000027', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:01.3100000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:59.8520000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162925, 'code': 'BL000026', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:19:59.5000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:57.9970000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162924, 'code': 'BL000025', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:19:57.7000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:56.2350000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000163125, 'code': 'BL000024', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:30.0400000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:31.2680000', 'modifiedDate': '2021-07-15T09:40:50.0890000', 'version': 1, 'isDraft': False}, {'id': 60000000163025, 'code': 'BL000023', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9970000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:28.6730000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, {'id': 60000000163024, 'code': 'BL000022', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9730000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:28.7740000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, {'id': 60000000163124, 'code': 'BL000021', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:08.2270000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:08.1500000', 'modifiedDate': '2021-07-15T09:40:50.0890000', 'version': 1, 'isDraft': False}, {'id': 60000000163023, 'code': 'BL000020', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:08.1330000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:08.0580000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, {'id': 60000000163122, 'code': 'BL000019', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:06.3000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:06.1970000', 'modifiedDate': '2021-07-15T09:40:50.0880000', 'version': 1, 'isDraft': False}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:39.697" endtime="20220228 13:51:39.697"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:39.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.697" endtime="20220228 13:51:39.697"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.697" endtime="20220228 13:51:39.697"></status>
</kw>
<msg timestamp="20220228 13:51:39.697" level="INFO">${resp} = {'result': {'totalNetSalary': 876227974.0, 'totalPayment': 0.0, 'totalNeedPay': 876227974.0, 'totalRefund': 0, 'total': 32, 'data': [{'id': 50000000121111, 'code': 'BL000038', 'tenantId': 122796, 'bra...</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.697"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:39.723" level="INFO">${list} = [50000000121111, 100000000106301, 120000000123403, 100000000005501, 60000000162928, 60000000162927, 60000000162926, 60000000162925, 60000000162924, 60000000163125, 60000000163025, 60000000163024, 6000...</msg>
<status status="PASS" starttime="20220228 13:51:39.697" endtime="20220228 13:51:39.723"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:39.724" level="INFO">${value} = 60000000163024</msg>
<status status="PASS" starttime="20220228 13:51:39.724" endtime="20220228 13:51:39.724"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.725" endtime="20220228 13:51:39.725"></status>
</kw>
<msg timestamp="20220228 13:51:39.725" level="INFO">${id_paysheet} = 60000000163024</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.725"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${id_paysheet}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.725" endtime="20220228 13:51:39.725"></status>
</kw>
<msg timestamp="20220228 13:51:39.725" level="INFO">${id_paysheet} = 60000000163024</msg>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:39.725"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_paysheet}/${id_paysheet}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:39.946" level="INFO">Get Request using : alias=session, uri=/paysheets/60000000163024, headers=None json=None</msg>
<msg timestamp="20220228 13:51:39.946" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:39.946" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.726" endtime="20220228 13:51:39.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.954" level="INFO">{'result': {'id': 60000000163024, 'code': 'BL000022', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9730000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [{'id': 60000000245865, 'code': 'PL000098', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 60000000180802, 'mainSalary': 11400000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 475000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 11875000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 48.0, 'calculatedDefault': 48.0, 'mainSalaryByShiftParamDetails': [{'value': 12.0, 'calculatedValue': 12.0, 'type': 6}, {'value': 16.0, 'calculatedValue': 16.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 1}]}, 'commissionSalaryRuleParam': {'type': 1, 'totalRevenue': 0.0, 'totalGrossProfit': 0.0, 'commissionSalaryOrigin': 0.0, 'commissionParams': [{'commissionLevel': 0.0, 'productRevenues': []}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 100000000002401, 'value': 25000.0, 'calculatedValue': 25000.0, 'numberWorkingDay': 19, 'type': 1, 'standardWorkingDayNumber': 31, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': []}, 'mainSalaryRuleValue': {'type': 1, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 150000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'commissionSalaryRuleValue': {'type': 1, 'formalityTypes': 0, 'isAllBranch': False, 'branchIds': [], 'minCommission': 0.0, 'useMinCommission': False, 'commissionSalaryRuleValueDetails': [{'commissionLevel': 300.0, 'commissionTableId': 100000000002201}, {'commissionLevel': 2.0, 'value': 250000.0}, {'commissionLevel': 1.0, 'valueRatio': 10.0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 100000000002401, 'value': 25000.0, 'rank': 0, 'type': 1, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': []}, 'netSalary': 11875000.0, 'grossSalary': 11875000.0, 'payslipClockings': [{'id': 150575, 'payslipId': 60000000245865, 'clockingId': 60000004541307, 'checkInDate': '2021-05-02T07:00:00.0000000', 'checkOutDate': '2021-05-02T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150624, 'payslipId': 60000000245865, 'clockingId': 60000004541317, 'checkInDate': '2021-05-12T07:00:00.0000000', 'checkOutDate': '2021-05-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150626, 'payslipId': 60000000245865, 'clockingId': 60000004541318, 'checkInDate': '2021-05-13T07:00:00.0000000', 'checkOutDate': '2021-05-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150627, 'payslipId': 60000000245865, 'clockingId': 60000004541320, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150628, 'payslipId': 60000000245865, 'clockingId': 60000004541330, 'checkInDate': '2021-05-25T07:00:00.0000000', 'checkOutDate': '2021-05-25T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-25T07:00:00.0000000', 'endTime': '2021-05-25T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150629, 'payslipId': 60000000245865, 'clockingId': 60000004541329, 'checkInDate': '2021-05-24T07:00:00.0000000', 'checkOutDate': '2021-05-24T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150630, 'payslipId': 60000000245865, 'clockingId': 60000004541328, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150631, 'payslipId': 60000000245865, 'clockingId': 60000004541327, 'checkInDate': '2021-05-22T07:00:00.0000000', 'checkOutDate': '2021-05-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150632, 'payslipId': 60000000245865, 'clockingId': 60000004541321, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150633, 'payslipId': 60000000245865, 'clockingId': 60000004541322, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150634, 'payslipId': 60000000245865, 'clockingId': 60000004541323, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150637, 'payslipId': 60000000245865, 'clockingId': 60000004541325, 'checkInDate': '2021-05-20T07:00:00.0000000', 'checkOutDate': '2021-05-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150639, 'payslipId': 60000000245865, 'clockingId': 60000004541308, 'checkInDate': '2021-05-03T07:00:00.0000000', 'checkOutDate': '2021-05-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150640, 'payslipId': 60000000245865, 'clockingId': 60000004541311, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150644, 'payslipId': 60000000245865, 'clockingId': 60000004541326, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150649, 'payslipId': 60000000245865, 'clockingId': 60000004541313, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150650, 'payslipId': 60000000245865, 'clockingId': 60000004541314, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150651, 'payslipId': 60000000245865, 'clockingId': 60000004541315, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150652, 'payslipId': 60000000245865, 'clockingId': 60000004541316, 'checkInDate': '2021-05-11T07:00:00.0000000', 'checkOutDate': '2021-05-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T11:00:00.0000000', 'shiftId': 100000000003301}], 'payslipDetails': [{'id': 45532, 'payslipId': 60000000245865, 'ruleType': 'CommissionSalaryRuleV2', 'ruleValue': '{"Type":1,"FormalityTypes":0,"IsAllBranch":false,"BranchIds":[],"MinCommission":0.0,"UseMinCommission":false,"CommissionSalaryRuleValueDetails":[{"CommissionLevel":300.0,"Value":null,"ValueRatio":null,"CommissionTableId":100000000002201},{"CommissionLevel":2.0,"Value":250000.0,"ValueRatio":null,"CommissionTableId":null},{"CommissionLevel":1.0,"Value":null,"ValueRatio":10.0,"CommissionTableId":null}]}', 'ruleParam': '{"Type":1,"TotalRevenue":0.0,"TotalGrossProfit":0.0,"CommissionSalary":null,"CommissionSalaryOrigin":0.0,"CommissionParams":[{"CommissionLevel":0.0,"Value":null,"ValueRatio":null,"ValueOrigin":null,"ValueRatioOrigin":null,"IsDirty":null,"ProductRevenues":[],"CommissionTable":null}]}'}, {'id': 45535, 'payslipId': 60000000245865, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":1,"MainSalaryValueDetails":[{"ShiftId":0,"Default":150000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":48.0,"CalculatedDefault":48.0,"MainSalaryByShiftParamDetails":[{"Value":12.0,"CalculatedValue":12.0,"Type":6},{"Value":16.0,"CalculatedValue":16.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":1}]}'}, {'id': 45536, 'payslipId': 60000000245865, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":100000000002401,"Name":null,"Value":25000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":100000000002401,"Value":25000.0,"ValueRatio":null,"Name":null,"CalculatedValue":25000.0,"CalculatedValueRatio":null,"NumberWorkingDay":19,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":31,"IsChecked":true}]}'}, {'id': 45537, 'payslipId': 60000000245865, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[]}', 'ruleParam': '{"Deductions":[]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245868, 'code': 'PL000099', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 100000000003701, 'mainSalary': 9600000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 400000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 10000000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 44.0, 'calculatedDefault': 44.0, 'mainSalaryByShiftParamDetails': [{'value': 4.0, 'calculatedValue': 4.0, 'type': 6}, {'value': 16.0, 'calculatedValue': 16.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 1}]}, 'commissionSalaryRuleParam': {'type': 1, 'totalRevenue': 0.0, 'totalGrossProfit': 0.0, 'commissionSalaryOrigin': 0.0, 'commissionParams': [{'commissionLevel': 0.0, 'productRevenues': []}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 100000000002401, 'value': 25000.0, 'calculatedValue': 25000.0, 'numberWorkingDay': 16, 'type': 1, 'standardWorkingDayNumber': 31, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': []}, 'mainSalaryRuleValue': {'type': 1, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 150000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'commissionSalaryRuleValue': {'type': 1, 'formalityTypes': 0, 'isAllBranch': False, 'branchIds': [], 'minCommission': 0.0, 'useMinCommission': False, 'commissionSalaryRuleValueDetails': [{'commissionLevel': 2.0, 'commissionTableId': 100000000002201}, {'commissionLevel': 1.0, 'valueRatio': 10.0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 100000000002401, 'value': 25000.0, 'rank': 0, 'type': 1, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': []}, 'netSalary': 10000000.0, 'grossSalary': 10000000.0, 'payslipClockings': [{'id': 150619, 'payslipId': 60000000245868, 'clockingId': 60000004541342, 'checkInDate': '2021-05-13T07:00:00.0000000', 'checkOutDate': '2021-05-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150620, 'payslipId': 60000000245868, 'clockingId': 60000004541338, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150621, 'payslipId': 60000000245868, 'clockingId': 60000004541336, 'checkInDate': '2021-05-07T07:00:00.0000000', 'checkOutDate': '2021-05-07T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-07T07:00:00.0000000', 'endTime': '2021-05-07T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150622, 'payslipId': 60000000245868, 'clockingId': 60000004541335, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150623, 'payslipId': 60000000245868, 'clockingId': 60000004541331, 'checkInDate': '2021-05-02T07:00:00.0000000', 'checkOutDate': '2021-05-02T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150635, 'payslipId': 60000000245868, 'clockingId': 60000004541339, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150636, 'payslipId': 60000000245868, 'clockingId': 60000004541340, 'checkInDate': '2021-05-11T07:00:00.0000000', 'checkOutDate': '2021-05-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150638, 'payslipId': 60000000245868, 'clockingId': 60000004541343, 'checkInDate': '2021-05-14T07:00:00.0000000', 'checkOutDate': '2021-05-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-14T07:00:00.0000000', 'endTime': '2021-05-14T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150641, 'payslipId': 60000000245868, 'clockingId': 60000004541353, 'checkInDate': '2021-05-24T07:00:00.0000000', 'checkOutDate': '2021-05-24T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150642, 'payslipId': 60000000245868, 'clockingId': 60000004541352, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150643, 'payslipId': 60000000245868, 'clockingId': 60000004541350, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150645, 'payslipId': 60000000245868, 'clockingId': 60000004541347, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150646, 'payslipId': 60000000245868, 'clockingId': 60000004541349, 'checkInDate': '2021-05-20T07:00:00.0000000', 'checkOutDate': '2021-05-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150647, 'payslipId': 60000000245868, 'clockingId': 60000004541345, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150648, 'payslipId': 60000000245868, 'clockingId': 60000004541344, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150653, 'payslipId': 60000000245868, 'clockingId': 60000004541346, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'shiftId': 100000000003301}], 'payslipDetails': [{'id': 45531, 'payslipId': 60000000245868, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[]}', 'ruleParam': '{"Deductions":[]}'}, {'id': 45543, 'payslipId': 60000000245868, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":1,"MainSalaryValueDetails":[{"ShiftId":0,"Default":150000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":44.0,"CalculatedDefault":44.0,"MainSalaryByShiftParamDetails":[{"Value":4.0,"CalculatedValue":4.0,"Type":6},{"Value":16.0,"CalculatedValue":16.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":1}]}'}, {'id': 45544, 'payslipId': 60000000245868, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":100000000002401,"Name":null,"Value":25000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":100000000002401,"Value":25000.0,"ValueRatio":null,"Name":null,"CalculatedValue":25000.0,"CalculatedValueRatio":null,"NumberWorkingDay":16,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":31,"IsChecked":true}]}'}, {'id': 45545, 'payslipId': 60000000245868, 'ruleType': 'CommissionSalaryRuleV2', 'ruleValue': '{"Type":1,"FormalityTypes":0,"IsAllBranch":false,"BranchIds":[],"MinCommission":0.0,"UseMinCommission":false,"CommissionSalaryRuleValueDetails":[{"CommissionLevel":2.0,"Value":null,"ValueRatio":null,"CommissionTableId":100000000002201},{"CommissionLevel":1.0,"Value":null,"ValueRatio":10.0,"CommissionTableId":null}]}', 'ruleParam': '{"Type":1,"TotalRevenue":0.0,"TotalGrossProfit":0.0,"CommissionSalary":null,"CommissionSalaryOrigin":0.0,"CommissionParams":[{"CommissionLevel":0.0,"Value":null,"ValueRatio":null,"ValueOrigin":null,"ValueRatioOrigin":null,"IsDirty":null,"ProductRevenues":[],"CommissionTable":null}]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245869, 'code': 'PL000100', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 60000000180803, 'mainSalary': 1156129.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 375600.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 1531729.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 10.0, 'calculatedDefault': 10.0, 'mainSalaryByShiftParamDetails': [{'value': 1.0, 'calculatedValue': 1.0, 'type': 6}, {'value': 3.0, 'calculatedValue': 3.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 3}]}, 'commissionSalaryRuleParam': {'type': 1, 'totalRevenue': 0.0, 'totalGrossProfit': 0.0, 'commissionSalaryOrigin': 0.0, 'commissionParams': [{'commissionLevel': 0.0, 'productRevenues': []}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 100000000002401, 'value': 25000.0, 'calculatedValue': 25000.0, 'numberWorkingDay': 14, 'type': 1, 'standardWorkingDayNumber': 31, 'isChecked': True}, {'allowanceId': 60000000137202, 'value': 25600.0, 'calculatedValue': 25600.0, 'numberWorkingDay': 14, 'type': 0, 'standardWorkingDayNumber': 31, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': []}, 'mainSalaryRuleValue': {'type': 3, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 2560000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'commissionSalaryRuleValue': {'type': 1, 'formalityTypes': 0, 'isAllBranch': False, 'branchIds': [], 'minCommission': 0.0, 'useMinCommission': False, 'commissionSalaryRuleValueDetails': [{'commissionLevel': 1.0, 'valueRatio': 10.0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 100000000002401, 'value': 25000.0, 'rank': 0, 'type': 1, 'isChecked': True}, {'allowanceId': 60000000137202, 'value': 25600.0, 'rank': 0, 'type': 0, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': []}, 'netSalary': 1531729.0, 'grossSalary': 1531729.0, 'payslipClockings': [{'id': 150585, 'payslipId': 60000000245869, 'clockingId': 60000004541377, 'checkInDate': '2021-05-24T07:00:00.0000000', 'checkOutDate': '2021-05-24T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-24T07:00:00.0000000', 'endTime': '2021-05-24T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150586, 'payslipId': 60000000245869, 'clockingId': 60000004541374, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150587, 'payslipId': 60000000245869, 'clockingId': 60000004541373, 'checkInDate': '2021-05-20T07:00:00.0000000', 'checkOutDate': '2021-05-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150588, 'payslipId': 60000000245869, 'clockingId': 60000004541370, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150589, 'payslipId': 60000000245869, 'clockingId': 60000004541369, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150590, 'payslipId': 60000000245869, 'clockingId': 60000004541368, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150591, 'payslipId': 60000000245869, 'clockingId': 60000004541366, 'checkInDate': '2021-05-13T07:00:00.0000000', 'checkOutDate': '2021-05-13T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-13T07:00:00.0000000', 'endTime': '2021-05-13T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150592, 'payslipId': 60000000245869, 'clockingId': 60000004541363, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150593, 'payslipId': 60000000245869, 'clockingId': 60000004541362, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150594, 'payslipId': 60000000245869, 'clockingId': 60000004541376, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150595, 'payslipId': 60000000245869, 'clockingId': 60000004541359, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150617, 'payslipId': 60000000245869, 'clockingId': 60000004541357, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150618, 'payslipId': 60000000245869, 'clockingId': 60000004541365, 'checkInDate': '2021-05-12T07:00:00.0000000', 'checkOutDate': '2021-05-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150625, 'payslipId': 60000000245869, 'clockingId': 60000004541356, 'checkInDate': '2021-05-03T07:00:00.0000000', 'checkOutDate': '2021-05-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T11:00:00.0000000', 'shiftId': 100000000003301}], 'payslipDetails': [{'id': 45538, 'payslipId': 60000000245869, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[]}', 'ruleParam': '{"Deductions":[]}'}, {'id': 45539, 'payslipId': 60000000245869, 'ruleType': 'CommissionSalaryRuleV2', 'ruleValue': '{"Type":1,"FormalityTypes":0,"IsAllBranch":false,"BranchIds":[],"MinCommission":0.0,"UseMinCommission":false,"CommissionSalaryRuleValueDetails":[{"CommissionLevel":1.0,"Value":null,"ValueRatio":10.0,"CommissionTableId":null}]}', 'ruleParam': '{"Type":1,"TotalRevenue":0.0,"TotalGrossProfit":0.0,"CommissionSalary":null,"CommissionSalaryOrigin":0.0,"CommissionParams":[{"CommissionLevel":0.0,"Value":null,"ValueRatio":null,"ValueOrigin":null,"ValueRatioOrigin":null,"IsDirty":null,"ProductRevenues":[],"CommissionTable":null}]}'}, {'id': 45540, 'payslipId': 60000000245869, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":100000000002401,"Name":null,"Value":25000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true},{"AllowanceId":60000000137202,"Name":null,"Value":25600.0,"ValueRatio":null,"Rank":0,"Type":0,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":100000000002401,"Value":25000.0,"ValueRatio":null,"Name":null,"CalculatedValue":25000.0,"CalculatedValueRatio":null,"NumberWorkingDay":14,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":31,"IsChecked":true},{"AllowanceId":60000000137202,"Value":25600.0,"ValueRatio":null,"Name":null,"CalculatedValue":25600.0,"CalculatedValueRatio":null,"NumberWorkingDay":14,"SelectedItem":null,"Type":0,"StandardWorkingDayNumber":31,"IsChecked":true}]}'}, {'id': 45541, 'payslipId': 60000000245869, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":3,"MainSalaryValueDetails":[{"ShiftId":0,"Default":2560000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":10.0,"CalculatedDefault":10.0,"MainSalaryByShiftParamDetails":[{"Value":1.0,"CalculatedValue":1.0,"Type":6},{"Value":3.0,"CalculatedValue":3.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":3}]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245871, 'code': 'PL000101', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 100000000003301, 'mainSalary': 1920000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 0.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 1920000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 10.0, 'calculatedDefault': 10.0, 'mainSalaryByShiftParamDetails': [{'value': 3.0, 'calculatedValue': 3.0, 'type': 6}, {'value': 3.0, 'calculatedValue': 3.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 2}]}, 'commissionSalaryRuleParam': {'type': 1, 'totalRevenue': 0.0, 'totalGrossProfit': 0.0, 'commissionSalaryOrigin': 0.0, 'commissionParams': [{'commissionLevel': 0.0, 'productRevenues': []}]}, 'deductionRuleParam': {'deductions': []}, 'mainSalaryRuleValue': {'type': 2, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 120000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'commissionSalaryRuleValue': {'type': 1, 'formalityTypes': 0, 'isAllBranch': False, 'branchIds': [], 'minCommission': 0.0, 'useMinCommission': False, 'commissionSalaryRuleValueDetails': [{'commissionLevel': 10000.0, 'valueRatio': 1.0}]}, 'deductionRuleValue': {'deductionRuleValueDetails': []}, 'netSalary': 1920000.0, 'grossSalary': 1920000.0, 'payslipClockings': [{'id': 150576, 'payslipId': 60000000245871, 'clockingId': 60000004541389, 'checkInDate': '2021-05-14T07:00:00.0000000', 'checkOutDate': '2021-05-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-14T07:00:00.0000000', 'endTime': '2021-05-14T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150577, 'payslipId': 60000000245871, 'clockingId': 60000004541387, 'checkInDate': '2021-05-12T07:00:00.0000000', 'checkOutDate': '2021-05-12T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-12T07:00:00.0000000', 'endTime': '2021-05-12T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150578, 'payslipId': 60000000245871, 'clockingId': 60000004541386, 'checkInDate': '2021-05-11T07:00:00.0000000', 'checkOutDate': '2021-05-11T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-11T07:00:00.0000000', 'endTime': '2021-05-11T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150579, 'payslipId': 60000000245871, 'clockingId': 60000004541384, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150580, 'payslipId': 60000000245871, 'clockingId': 60000004541383, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150581, 'payslipId': 60000000245871, 'clockingId': 60000004541381, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150582, 'payslipId': 60000000245871, 'clockingId': 60000004541380, 'checkInDate': '2021-05-05T07:00:00.0000000', 'checkOutDate': '2021-05-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150583, 'payslipId': 60000000245871, 'clockingId': 60000004541379, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150584, 'payslipId': 60000000245871, 'clockingId': 60000004541390, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150596, 'payslipId': 60000000245871, 'clockingId': 60000004541393, 'checkInDate': '2021-05-18T07:00:00.0000000', 'checkOutDate': '2021-05-18T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-18T07:00:00.0000000', 'endTime': '2021-05-18T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150597, 'payslipId': 60000000245871, 'clockingId': 60000004541395, 'checkInDate': '2021-05-20T07:00:00.0000000', 'checkOutDate': '2021-05-20T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-20T07:00:00.0000000', 'endTime': '2021-05-20T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150606, 'payslipId': 60000000245871, 'clockingId': 60000004541394, 'checkInDate': '2021-05-19T07:00:00.0000000', 'checkOutDate': '2021-05-19T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150612, 'payslipId': 60000000245871, 'clockingId': 100000000373801, 'checkInDate': '2021-05-02T07:00:00.0000000', 'checkOutDate': '2021-05-02T12:31:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 91, 'clockingStatus': 3, 'startTime': '2021-05-02T07:00:00.0000000', 'endTime': '2021-05-02T11:00:00.0000000', 'shiftId': 60000000150502}, {'id': 150613, 'payslipId': 60000000245871, 'clockingId': 60000004541398, 'checkInDate': '2021-05-23T07:00:00.0000000', 'checkOutDate': '2021-05-23T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-23T07:00:00.0000000', 'endTime': '2021-05-23T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150614, 'payslipId': 60000000245871, 'clockingId': 60000004541397, 'checkInDate': '2021-05-22T07:00:00.0000000', 'checkOutDate': '2021-05-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150615, 'payslipId': 60000000245871, 'clockingId': 60000004541396, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'shiftId': 100000000003301}], 'payslipDetails': [{'id': 45533, 'payslipId': 60000000245871, 'ruleType': 'CommissionSalaryRuleV2', 'ruleValue': '{"Type":1,"FormalityTypes":0,"IsAllBranch":false,"BranchIds":[],"MinCommission":0.0,"UseMinCommission":false,"CommissionSalaryRuleValueDetails":[{"CommissionLevel":10000.0,"Value":null,"ValueRatio":1.0,"CommissionTableId":null}]}', 'ruleParam': '{"Type":1,"TotalRevenue":0.0,"TotalGrossProfit":0.0,"CommissionSalary":null,"CommissionSalaryOrigin":0.0,"CommissionParams":[{"CommissionLevel":0.0,"Value":null,"ValueRatio":null,"ValueOrigin":null,"ValueRatioOrigin":null,"IsDirty":null,"ProductRevenues":[],"CommissionTable":null}]}'}, {'id': 45534, 'payslipId': 60000000245871, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":2,"MainSalaryValueDetails":[{"ShiftId":0,"Default":120000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":10.0,"CalculatedDefault":10.0,"MainSalaryByShiftParamDetails":[{"Value":3.0,"CalculatedValue":3.0,"Type":6},{"Value":3.0,"CalculatedValue":3.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":2}]}'}, {'id': 45546, 'payslipId': 60000000245871, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[]}', 'ruleParam': '{"Deductions":[]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245874, 'code': 'PL000102', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 100000000003501, 'mainSalary': 8400000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 350000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 8750000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 36.0, 'calculatedDefault': 36.0, 'mainSalaryByShiftParamDetails': [{'value': 12.0, 'calculatedValue': 12.0, 'type': 6}, {'value': 8.0, 'calculatedValue': 8.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 1}]}, 'commissionSalaryRuleParam': {'type': 1, 'totalRevenue': 0.0, 'totalGrossProfit': 0.0, 'commissionSalaryOrigin': 0.0, 'commissionParams': [{'commissionLevel': 0.0, 'productRevenues': []}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 100000000002401, 'value': 25000.0, 'calculatedValue': 25000.0, 'numberWorkingDay': 14, 'type': 1, 'standardWorkingDayNumber': 31, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': []}, 'mainSalaryRuleValue': {'type': 1, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 150000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'commissionSalaryRuleValue': {'type': 1, 'formalityTypes': 0, 'isAllBranch': False, 'branchIds': [], 'minCommission': 0.0, 'useMinCommission': False, 'commissionSalaryRuleValueDetails': [{'commissionLevel': 1.0, 'valueRatio': 10.0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 100000000002401, 'value': 25000.0, 'rank': 0, 'type': 1, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': []}, 'netSalary': 8750000.0, 'grossSalary': 8750000.0, 'payslipClockings': [{'id': 150598, 'payslipId': 60000000245874, 'clockingId': 100000000382704, 'checkInDate': '2021-05-05T07:00:00.0000000', 'checkOutDate': '2021-05-05T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-05T07:00:00.0000000', 'endTime': '2021-05-05T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150599, 'payslipId': 60000000245874, 'clockingId': 100000000382703, 'checkInDate': '2021-05-04T07:00:00.0000000', 'checkOutDate': '2021-05-04T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-04T07:00:00.0000000', 'endTime': '2021-05-04T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150600, 'payslipId': 60000000245874, 'clockingId': 100000000382702, 'checkInDate': '2021-05-03T07:00:00.0000000', 'checkOutDate': '2021-05-03T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-03T07:00:00.0000000', 'endTime': '2021-05-03T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150601, 'payslipId': 60000000245874, 'clockingId': 60000004541416, 'checkInDate': '2021-05-22T07:00:00.0000000', 'checkOutDate': '2021-05-22T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-22T07:00:00.0000000', 'endTime': '2021-05-22T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150602, 'payslipId': 60000000245874, 'clockingId': 60000004541415, 'checkInDate': '2021-05-21T07:00:00.0000000', 'checkOutDate': '2021-05-21T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-21T07:00:00.0000000', 'endTime': '2021-05-21T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150603, 'payslipId': 60000000245874, 'clockingId': 60000004541413, 'checkInDate': '2021-05-19T07:00:00.0000000', 'checkOutDate': '2021-05-19T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-19T07:00:00.0000000', 'endTime': '2021-05-19T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150604, 'payslipId': 60000000245874, 'clockingId': 60000004541411, 'checkInDate': '2021-05-17T07:00:00.0000000', 'checkOutDate': '2021-05-17T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-17T07:00:00.0000000', 'endTime': '2021-05-17T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150605, 'payslipId': 60000000245874, 'clockingId': 60000004541410, 'checkInDate': '2021-05-16T07:00:00.0000000', 'checkOutDate': '2021-05-16T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-16T07:00:00.0000000', 'endTime': '2021-05-16T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150607, 'payslipId': 60000000245874, 'clockingId': 60000004541409, 'checkInDate': '2021-05-15T07:00:00.0000000', 'checkOutDate': '2021-05-15T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-15T07:00:00.0000000', 'endTime': '2021-05-15T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150608, 'payslipId': 60000000245874, 'clockingId': 60000004541404, 'checkInDate': '2021-05-10T07:00:00.0000000', 'checkOutDate': '2021-05-10T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-10T07:00:00.0000000', 'endTime': '2021-05-10T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150609, 'payslipId': 60000000245874, 'clockingId': 60000004541403, 'checkInDate': '2021-05-09T07:00:00.0000000', 'checkOutDate': '2021-05-09T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-09T07:00:00.0000000', 'endTime': '2021-05-09T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150610, 'payslipId': 60000000245874, 'clockingId': 60000004541402, 'checkInDate': '2021-05-08T07:00:00.0000000', 'checkOutDate': '2021-05-08T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-08T07:00:00.0000000', 'endTime': '2021-05-08T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150611, 'payslipId': 60000000245874, 'clockingId': 60000004541401, 'checkInDate': '2021-05-06T07:00:00.0000000', 'checkOutDate': '2021-05-06T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-06T07:00:00.0000000', 'endTime': '2021-05-06T11:00:00.0000000', 'shiftId': 100000000003301}, {'id': 150616, 'payslipId': 60000000245874, 'clockingId': 60000004541408, 'checkInDate': '2021-05-14T07:00:00.0000000', 'checkOutDate': '2021-05-14T11:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-05-14T07:00:00.0000000', 'endTime': '2021-05-14T11:00:00.0000000', 'shiftId': 100000000003301}], 'payslipDetails': [{'id': 45529, 'payslipId': 60000000245874, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":1,"MainSalaryValueDetails":[{"ShiftId":0,"Default":150000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":36.0,"CalculatedDefault":36.0,"MainSalaryByShiftParamDetails":[{"Value":12.0,"CalculatedValue":12.0,"Type":6},{"Value":8.0,"CalculatedValue":8.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":1}]}'}, {'id': 45530, 'payslipId': 60000000245874, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":100000000002401,"Name":null,"Value":25000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":100000000002401,"Value":25000.0,"ValueRatio":null,"Name":null,"CalculatedValue":25000.0,"CalculatedValueRatio":null,"NumberWorkingDay":14,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":31,"IsChecked":true}]}'}, {'id': 45542, 'payslipId': 60000000245874, 'ruleType': 'CommissionSalaryRuleV2', 'ruleValue': '{"Type":1,"FormalityTypes":0,"IsAllBranch":false,"BranchIds":[],"MinCommission":0.0,"UseMinCommission":false,"CommissionSalaryRuleValueDetails":[{"CommissionLevel":1.0,"Value":null,"ValueRatio":10.0,"CommissionTableId":null}]}', 'ruleParam': '{"Type":1,"TotalRevenue":0.0,"TotalGrossProfit":0.0,"CommissionSalary":null,"CommissionSalaryOrigin":0.0,"CommissionParams":[{"CommissionLevel":0.0,"Value":null,"ValueRatio":null,"ValueOrigin":null,"ValueRatioOrigin":null,"IsDirty":null,"ProductRevenues":[],"CommissionTable":null}]}'}, {'id': 45547, 'payslipId': 60000000245874, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[]}', 'ruleParam': '{"Deductions":[]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:28.7740000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:39.946" endtime="20220228 13:51:39.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:39.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.954" endtime="20220228 13:51:39.954"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.954" endtime="20220228 13:51:39.954"></status>
</kw>
<msg timestamp="20220228 13:51:39.954" level="INFO">${resp} = {'result': {'id': 60000000163024, 'code': 'BL000022', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9730000', 'name': 'Bảng lương 0...</msg>
<status status="PASS" starttime="20220228 13:51:39.726" endtime="20220228 13:51:39.954"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:39.973" level="INFO">${list} = ['BL000022']</msg>
<status status="PASS" starttime="20220228 13:51:39.954" endtime="20220228 13:51:39.973"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${value} = BL000022</msg>
<status status="PASS" starttime="20220228 13:51:39.973" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<msg timestamp="20220228 13:51:39.978" level="INFO">${code_paysheet} = BL000022</msg>
<status status="PASS" starttime="20220228 13:51:39.725" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_paysheet}</arg>
<arg>false</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${list_format} = [60000000163024, 'false']</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_cancel_paysheet}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_cancel_paysheet}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">Length is 2</msg>
<msg timestamp="20220228 13:51:39.978" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${value_temp} = 60000000163024</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${value_temp} = 60000000163024</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${data_format} = {"Id":60000000163024,"isCheckPayslipPayment":false,"isCancelPayment":[D1]}</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${value_temp} = false</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${value_temp} = false</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 13:51:39.978" level="INFO">${data_format} = {"Id":60000000163024,"isCheckPayslipPayment":false,"isCancelPayment":false}</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 13:51:39.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<msg timestamp="20220228 13:51:39.978" level="INFO">${data_cancel_paysheet} = {"Id":60000000163024,"isCheckPayslipPayment":false,"isCancelPayment":false}</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:39.978"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_cancel_paysheet}</arg>
<arg>${data_cancel_paysheet}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:40.665" level="INFO">Put Request using : alias=session, uri=/paysheets/cancel-paysheet, data={"Id":60000000163024,"isCheckPayslipPayment":false,"isCancelPayment":false},                     headers={'retailer': 'testz61', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '34428', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjo1OTIxMSwiaWF0IjoxNjQ2MDMxMDkxLCJleHAiOjE2NDg0NTAyOTEsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluIiwicm9sZXMiOlsiVXNlciJdLCJrdnNlcyI6ImFkNzk1ZTUzNmU3MDQxN2Q5OGQzZTI1MmMyNTljNWIzIiwia3Z1aWQiOjU5MjExLCJrdmxhbmciOiJ2aS1WTiIsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzQ0MjgsImt2cmluZGlkIjoyLCJrdnJjb2RlIjoidGVzdHo2MSIsImt2cmlkIjoxMjI3OTYsImt2dXJpZCI6MTIyNzk2LCJrdnJnaWQiOjYsInBlcm1zIjoiIn0.Q6b_-Xcc8Y2JHBhNeETUrs6oqP1POO_iN5THkxNN4m1tgNwrZujCVRzSfG6GtndwuUI6lyP5sBzxB2o03heWFl796STPqiOjPYzVYK2Po2IJN1LqKja1j-3TYp0QUo6UlJLOt_odrnB8H9oon1t8stY8LlJigKycwXCtVdoQIy5rM5I4e2W6Jlcfi3d4WDyYinBMpk5FfbC7IbvaeGkGOWEAWYzpAJBk3Df9Dml-DPkflL71Ht9QEypMTBGN65sla7qajyxqMdIIDiwHXQjl71AAt8qO4_ZdnGeNf_OHCC-FSMbyKR0VOXOmUHFlJ6jDuXGnV5XaR9DuAdDXOZPrbw'}, allow_redirects=True </msg>
<msg timestamp="20220228 13:51:40.665" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:40.665" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:40.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.665" level="INFO">{'result': {'id': 60000000163024, 'code': 'BL000022', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9730000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [{'id': 60000000245865, 'code': 'PL000098', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 0, 'employeeId': 60000000180802, 'mainSalary': 11400000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 475000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 11875000.0, 'bonus': 0.0, 'netSalary': 11875000.0, 'grossSalary': 11875000.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245868, 'code': 'PL000099', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 0, 'employeeId': 100000000003701, 'mainSalary': 9600000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 400000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 10000000.0, 'bonus': 0.0, 'netSalary': 10000000.0, 'grossSalary': 10000000.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245869, 'code': 'PL000100', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 0, 'employeeId': 60000000180803, 'mainSalary': 1156129.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 375600.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 1531729.0, 'bonus': 0.0, 'netSalary': 1531729.0, 'grossSalary': 1531729.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245871, 'code': 'PL000101', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 0, 'employeeId': 100000000003301, 'mainSalary': 1920000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 0.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 1920000.0, 'bonus': 0.0, 'netSalary': 1920000.0, 'grossSalary': 1920000.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, {'id': 60000000245874, 'code': 'PL000102', 'paysheetId': 60000000163024, 'tenantId': 122796, 'isDeleted': False, 'payslipStatus': 0, 'employeeId': 100000000003501, 'mainSalary': 8400000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 350000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 8750000.0, 'bonus': 0.0, 'netSalary': 8750000.0, 'grossSalary': 8750000.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-06-15T22:17:28.7740000', 'payslipCreatedBy': 59211, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:28.7740000', 'modifiedDate': '2022-02-28T13:51:41.2751791+07:00', 'version': 1, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:40.665" endtime="20220228 13:51:40.665"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.665" endtime="20220228 13:51:40.665"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.665" endtime="20220228 13:51:40.665"></status>
</kw>
<msg timestamp="20220228 13:51:40.681" level="INFO">${resp} = {'result': {'id': 60000000163024, 'code': 'BL000022', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9730000', 'name': 'Bảng lương 0...</msg>
<status status="PASS" starttime="20220228 13:51:39.978" endtime="20220228 13:51:40.681"></status>
</kw>
<doc>Huỷ bỏ bảng lương tạm tính ko hủy phiếu thanh toán</doc>
<tags>
<tag>all</tag>
<tag>paysheet</tag>
</tags>
<status status="PASS" starttime="20220228 13:51:39.438" endtime="20220228 13:51:40.681" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Cancel paysheet and cancel payment">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_filter_sheets}</arg>
<arg>$..data[?(@.totalPayment &gt;0)]..id</arg>
</arguments>
<assign>
<var>${id_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 13:51:40.996" level="INFO">Get Request using : alias=session, uri=/paysheets?skip=0&amp;take=15&amp;OrderByDesc=CreatedDate&amp;BranchIds=34428&amp;PaysheetStatuses=[1], headers=None json=None</msg>
<msg timestamp="20220228 13:51:40.996" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 13:51:40.996" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.681" endtime="20220228 13:51:40.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.996" level="INFO">{'result': {'totalNetSalary': 842151245.0, 'totalPayment': 0.0, 'totalNeedPay': 842151245.0, 'totalRefund': 0, 'total': 31, 'data': [{'id': 50000000121111, 'code': 'BL000038', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-17T00:53:44.9230000', 'name': 'Bảng lương 10/12/2021 - 16/12/2021', 'salaryPeriod': 3, 'startTime': '2021-12-10T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 7, 'paysheetPeriodName': '10/12/2021 - 16/12/2021', 'endTime': '2021-12-16T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-17T00:53:46.8720000', 'modifiedDate': '2021-12-17T00:53:46.8730000', 'version': 0, 'isDraft': False}, {'id': 100000000106301, 'code': 'BL000037', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-17T00:53:28.2600000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-17T00:53:30.8710000', 'modifiedDate': '2021-12-17T00:53:30.9070000', 'version': 0, 'isDraft': False}, {'id': 120000000123403, 'code': 'BL000036', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-12-13T17:09:08.4700000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 10, 'paysheetCreatedDate': '2021-12-13T17:09:10.1130000', 'modifiedDate': '2021-12-13T17:09:10.1670000', 'version': 0, 'isDraft': False}, {'id': 100000000005501, 'code': 'BL000030', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-07-15T09:40:23.7070000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 113020.0, 'totalPayment': 0.0, 'totalNeedPay': 113020.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T09:40:55.7570000', 'modifiedDate': '2021-07-15T09:40:56.7160000', 'version': 1, 'isDraft': False}, {'id': 60000000162928, 'code': 'BL000029', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:04.8930000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 4, 'totalNetSalary': 24076729.0, 'totalPayment': 0.0, 'totalNeedPay': 24076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:20:03.4600000', 'modifiedDate': '2021-07-15T09:40:50.0860000', 'version': 1, 'isDraft': False}, {'id': 60000000162927, 'code': 'BL000028', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:03.1170000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:20:01.6430000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162926, 'code': 'BL000027', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:20:01.3100000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:59.8520000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162925, 'code': 'BL000026', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:19:59.5000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:57.9970000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000162924, 'code': 'BL000025', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:19:57.7000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:19:56.2350000', 'modifiedDate': '2021-07-15T09:40:50.0850000', 'version': 1, 'isDraft': False}, {'id': 60000000163125, 'code': 'BL000024', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:30.0400000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:31.2680000', 'modifiedDate': '2021-07-15T09:40:50.0890000', 'version': 1, 'isDraft': False}, {'id': 60000000163025, 'code': 'BL000023', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T22:17:29.9970000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T22:17:28.6730000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, {'id': 60000000163124, 'code': 'BL000021', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:08.2270000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:08.1500000', 'modifiedDate': '2021-07-15T09:40:50.0890000', 'version': 1, 'isDraft': False}, {'id': 60000000163023, 'code': 'BL000020', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:08.1330000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:08.0580000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}, {'id': 60000000163122, 'code': 'BL000019', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:06.3000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:06.1970000', 'modifiedDate': '2021-07-15T09:40:50.0880000', 'version': 1, 'isDraft': False}, {'id': 60000000163022, 'code': 'BL000018', 'tenantId': 122796, 'branchId': 34428, 'isDeleted': False, 'createdBy': 59211, 'createdDate': '2021-06-15T21:29:06.2000000', 'name': 'Bảng lương 01/05/2021 - 31/05/2021', 'salaryPeriod': 1, 'startTime': '2021-05-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/05/2021 - 31/05/2021', 'endTime': '2021-05-31T23:59:59.0000000', 'employeeTotal': 5, 'totalNetSalary': 34076729.0, 'totalPayment': 0.0, 'totalNeedPay': 34076729.0, 'creatorBy': 59211, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-06-15T21:29:06.0930000', 'modifiedDate': '2021-07-15T09:40:50.0870000', 'version': 1, 'isDraft': False}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 13:51:40.996" endtime="20220228 13:51:40.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 13:51:40.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 13:51:40.996" endtime="20220228 13:51:40.996"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 13:51:40.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 13:51:40.996" endtime="20220228 13:51:40.996"></status>
</kw>
<msg timestamp="20220228 13:51:40.996" level="INFO">${resp} = {'result': {'totalNetSalary': 842151245.0, 'totalPayment': 0.0, 'totalNeedPay': 842151245.0, 'totalRefund': 0, 'total': 31, 'data': [{'id': 50000000121111, 'code': 'BL000038', 'tenantId': 122796, 'bra...</msg>
<status status="PASS" starttime="20220228 13:51:40.681" endtime="20220228 13:51:40.996"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 13:51:41.032" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20220228 13:51:40.996" endtime="20220228 13:51:41.032"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 13:51:41.033" level="FAIL">Evaluating expression 'random .choice (RF_VAR_list )' failed: IndexError: Cannot choose from an empty sequence</msg>
<status status="FAIL" starttime="20220228 13:51:41.032" endtime="20220228 13:51:41.033"></status>
</kw>
<status status="FAIL" starttime="20220228 13:51:40.681" endtime="20220228 13:51:41.033"></status>
</kw>
<doc>Huỷ bỏ bảng lương tạm tính và hủy phiếu thanh toán</doc>
<tags>
<tag>all</tag>
<tag>paysheet</tag>
</tags>
<status status="FAIL" starttime="20220228 13:51:40.681" endtime="20220228 13:51:41.033" critical="yes">Evaluating expression 'random .choice (RF_VAR_list )' failed: IndexError: Cannot choose from an empty sequence</status>
</test>
<status status="FAIL" starttime="20220228 13:51:29.826" endtime="20220228 13:51:41.034"></status>
</suite>
<status status="FAIL" starttime="20220228 13:51:29.824" endtime="20220228 13:51:41.035"></status>
</suite>
<status status="FAIL" starttime="20220228 13:51:29.778" endtime="20220228 13:51:41.036"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="1">Critical Tests</stat>
<stat pass="3" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="1">all</stat>
<stat pass="3" fail="1">paysheet</stat>
</tag>
<suite>
<stat pass="3" fail="1" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="3" fail="1" id="s1-s1" name="BangTinhLuong">Testsuites.BangTinhLuong</stat>
<stat pass="3" fail="1" id="s1-s1-s1" name="Paysheet">Testsuites.BangTinhLuong.Paysheet</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
