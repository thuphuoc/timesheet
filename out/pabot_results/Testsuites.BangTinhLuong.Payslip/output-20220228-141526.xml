<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.8.8 on win32)" generated="20220228 14:15:26.260">
<suite id="s1" name="Testsuites" source="D:\timesheet\testsuites">
<suite id="s1-s1" name="BangTinhLuong" source="D:\timesheet\testsuites\BangTinhLuong">
<suite id="s1-s1-s1" name="Payslip" source="D:\timesheet\testsuites\BangTinhLuong\payslip.robot">
<kw name="Fill enviroment and get token" library="enviroment" type="setup">
<arguments>
<arg>${env}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://auto5.kiotviet.vn/api</arg>
<arg>zone13=https://testz13.kiotviet.vn/api</arg>
<arg>zone12=https://testz12.kiotviet.vn/api</arg>
<arg>zone14=https://auto14.kiotviet.vn/api</arg>
<arg>zone61=https://testz61.kiotviet.vn/api</arg>
<arg>zone21=https://testz221.kiotviet.vn/api</arg>
<arg>zone9=https://taphoa.kiotviet.vn/api</arg>
<arg>zone1=https://testz1.kiotviet.vn/api</arg>
<arg>zone59902=https://phuoc902.kvpos.com:59302/api</arg>
<arg>zone59903=https://phuoc903.kvpos.com:59303/api</arg>
<arg>fnb59508=https://phuoc59508.kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:26.552" level="INFO">${dict_url_saleLogin} = {'zone5': 'https://auto5.kiotviet.vn/api', 'zone13': 'https://testz13.kiotviet.vn/api', 'zone12': 'https://testz12.kiotviet.vn/api', 'zone14': 'https://auto14.kiotviet.vn/api', 'zone61': 'https://test...</msg>
<status status="PASS" starttime="20220228 14:15:26.551" endtime="20220228 14:15:26.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=/auth/salelogin</arg>
<arg>zone13=/auth/salelogin</arg>
<arg>zone12=/auth/salelogin</arg>
<arg>zone1=/auth/salelogin</arg>
<arg>zone14=/auth/salelogin</arg>
<arg>zone61=/auth/salelogin</arg>
<arg>zone21=/auth/salelogin</arg>
<arg>zone9=/auth/salelogin</arg>
<arg>zone59902=/auth/salelogin</arg>
<arg>zone59903=/auth/salelogin</arg>
<arg>fnb59508=/auth/salelogin</arg>
<arg>booking=/auth/salelogin</arg>
<arg>fnb15=/auth/salelogin</arg>
</arguments>
<assign>
<var>${dict_enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:26.552" level="INFO">${dict_enp_saleLogin} = {'zone5': '/auth/salelogin', 'zone13': '/auth/salelogin', 'zone12': '/auth/salelogin', 'zone1': '/auth/salelogin', 'zone14': '/auth/salelogin', 'zone61': '/auth/salelogin', 'zone21': '/auth/salelogin'...</msg>
<status status="PASS" starttime="20220228 14:15:26.552" endtime="20220228 14:15:26.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-timesheet.kiotviet.vn</arg>
<arg>zone13=https://api-timesheet.kiotviet.vn</arg>
<arg>zone12=https://api-timesheet.kiotviet.vn</arg>
<arg>zone1=https://api-timesheet.kiotviet.vn</arg>
<arg>zone14=https://api-timesheet.kiotviet.vn</arg>
<arg>zone61=https://api-timesheet.kiotviet.vn</arg>
<arg>zone21=https://api-timesheet.kiotviet.vn</arg>
<arg>zone9=https://api-timesheet2.kiotviet.vn</arg>
<arg>zone59902=https://kvpos.com:55002</arg>
<arg>zone59903=https://kvpos.com:55003</arg>
<arg>fnb59508=https://kvpos.com:55008</arg>
<arg>booking=https://timesheetapi.kvpos.com:9009</arg>
<arg>fnb15=https://api-fnbtimesheet.kiotviet.vn</arg>
</arguments>
<assign>
<var>${dict_url}</var>
</assign>
<msg timestamp="20220228 14:15:26.552" level="INFO">${dict_url} = {'zone5': 'https://api-timesheet.kiotviet.vn', 'zone13': 'https://api-timesheet.kiotviet.vn', 'zone12': 'https://api-timesheet.kiotviet.vn', 'zone1': 'https://api-timesheet.kiotviet.vn', 'zone14': 'ht...</msg>
<status status="PASS" starttime="20220228 14:15:26.552" endtime="20220228 14:15:26.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=https://api-man.kiotviet.vn/api</arg>
<arg>zone13=https://api-man.kiotviet.vn/api</arg>
<arg>zone12=https://api-man.kiotviet.vn/api</arg>
<arg>zone1=https://api-man.kiotviet.vn/api</arg>
<arg>zone14=https://api-man.kiotviet.vn/api</arg>
<arg>zone61=https://api-man3.kiotviet.vn/api</arg>
<arg>zone21=https://api-man3.kiotviet.vn/api</arg>
<arg>zone9=https://api-man3.kiotviet.vn/api</arg>
<arg>zone59902=https://kvpos.com:59932/api</arg>
<arg>zone59903=https://kvpos.com:59933/api</arg>
<arg>fnb59508=https://kvpos.com:59508/api</arg>
<arg>booking=https://bookinghcm.kvpos.com:9009/api</arg>
<arg>fnb15=https://fnb.kiotviet.vn/api</arg>
</arguments>
<assign>
<var>${dict_url_man}</var>
</assign>
<msg timestamp="20220228 14:15:26.553" level="INFO">${dict_url_man} = {'zone5': 'https://api-man.kiotviet.vn/api', 'zone13': 'https://api-man.kiotviet.vn/api', 'zone12': 'https://api-man.kiotviet.vn/api', 'zone1': 'https://api-man.kiotviet.vn/api', 'zone14': 'https://ap...</msg>
<status status="PASS" starttime="20220228 14:15:26.552" endtime="20220228 14:15:26.553"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=admin</arg>
<arg>zone13=admin</arg>
<arg>zone12=admin</arg>
<arg>zone14=admin</arg>
<arg>zone1=admin</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=admin</arg>
<arg>zone21=admin</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=admin</arg>
</arguments>
<assign>
<var>${dict_username}</var>
</assign>
<msg timestamp="20220228 14:15:26.553" level="INFO">${dict_username} = {'zone5': 'admin', 'zone13': 'admin', 'zone12': 'admin', 'zone14': 'admin', 'zone1': 'admin', 'zone9': 'taphoa', 'zone61': 'admin', 'zone21': 'admin', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '...</msg>
<status status="PASS" starttime="20220228 14:15:26.553" endtime="20220228 14:15:26.553"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=123</arg>
<arg>zone13=123456</arg>
<arg>zone12=123456</arg>
<arg>zone14=123</arg>
<arg>zone1=123</arg>
<arg>zone9=123456</arg>
<arg>zone61=123456</arg>
<arg>zone21=123456</arg>
<arg>zone59902=1</arg>
<arg>zone59903=1</arg>
<arg>fnb59508=1</arg>
<arg>booking=1</arg>
<arg>fnb15=123</arg>
</arguments>
<assign>
<var>${dict_password}</var>
</assign>
<msg timestamp="20220228 14:15:26.553" level="INFO">${dict_password} = {'zone5': '123', 'zone13': '123456', 'zone12': '123456', 'zone14': '123', 'zone1': '123', 'zone9': '123456', 'zone61': '123456', 'zone21': '123456', 'zone59902': '1', 'zone59903': '1', 'fnb59508': '1'...</msg>
<status status="PASS" starttime="20220228 14:15:26.553" endtime="20220228 14:15:26.553"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>zone5=auto5</arg>
<arg>zone13=testz13</arg>
<arg>zone12=testz12</arg>
<arg>zone14=auto14</arg>
<arg>zone1=testz1</arg>
<arg>zone9=taphoa</arg>
<arg>zone61=testz61</arg>
<arg>zone21=testz221</arg>
<arg>zone59902=phuoc902</arg>
<arg>zone59903=phuoc903</arg>
<arg>fnb59508=phuoc59508</arg>
<arg>booking=phuoc009</arg>
<arg>fnb15=testfnbz15a</arg>
</arguments>
<assign>
<var>${dict_retailer}</var>
</assign>
<msg timestamp="20220228 14:15:26.554" level="INFO">${dict_retailer} = {'zone5': 'auto5', 'zone13': 'testz13', 'zone12': 'testz12', 'zone14': 'auto14', 'zone1': 'testz1', 'zone9': 'taphoa', 'zone61': 'testz61', 'zone21': 'testz221', 'zone59902': 'phuoc902', 'zone59903': ...</msg>
<status status="PASS" starttime="20220228 14:15:26.554" endtime="20220228 14:15:26.554"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_username}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${username}</var>
</assign>
<msg timestamp="20220228 14:15:26.554" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 14:15:26.554" endtime="20220228 14:15:26.554"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_password}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20220228 14:15:26.554" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:26.554" endtime="20220228 14:15:26.554"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_retailer}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${retailer}</var>
</assign>
<msg timestamp="20220228 14:15:26.555" level="INFO">${retailer} = testz221</msg>
<status status="PASS" starttime="20220228 14:15:26.555" endtime="20220228 14:15:26.555"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:26.555" level="INFO">${url_saleLogin} = https://testz221.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:26.555" endtime="20220228 14:15:26.555"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_enp_saleLogin}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${enp_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:26.555" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 14:15:26.555" endtime="20220228 14:15:26.555"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<msg timestamp="20220228 14:15:26.555" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 14:15:26.555" endtime="20220228 14:15:26.555"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${dict_url_man}</arg>
<arg>${env}</arg>
</arguments>
<assign>
<var>${url_man}</var>
</assign>
<msg timestamp="20220228 14:15:26.556" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:26.555" endtime="20220228 14:15:26.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.556" level="INFO">${username} = admin</msg>
<status status="PASS" starttime="20220228 14:15:26.556" endtime="20220228 14:15:26.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.556" level="INFO">${password} = 123456</msg>
<status status="PASS" starttime="20220228 14:15:26.556" endtime="20220228 14:15:26.556"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${retailer}</arg>
<arg>${retailer}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.556" level="INFO">${retailer} = testz221</msg>
<status status="PASS" starttime="20220228 14:15:26.556" endtime="20220228 14:15:26.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_saleLogin}</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.557" level="INFO">${url_saleLogin} = https://testz221.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:26.557" endtime="20220228 14:15:26.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${enp_saleLogin}</arg>
<arg>${enp_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.557" level="INFO">${enp_saleLogin} = /auth/salelogin</msg>
<status status="PASS" starttime="20220228 14:15:26.557" endtime="20220228 14:15:26.557"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.557" level="INFO">${url} = https://api-timesheet.kiotviet.vn</msg>
<status status="PASS" starttime="20220228 14:15:26.557" endtime="20220228 14:15:26.558"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${url_man}</arg>
<arg>${url_man}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.558" level="INFO">${url_man} = https://api-man3.kiotviet.vn/api</msg>
<status status="PASS" starttime="20220228 14:15:26.558" endtime="20220228 14:15:26.558"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 14:15:26.558" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8'}</msg>
<status status="PASS" starttime="20220228 14:15:26.558" endtime="20220228 14:15:26.558"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
</arguments>
<assign>
<var>${data_saleLogin}</var>
</assign>
<msg timestamp="20220228 14:15:26.558" level="INFO">${data_saleLogin} = {'UserName': 'admin', 'Password': '123456'}</msg>
<status status="PASS" starttime="20220228 14:15:26.558" endtime="20220228 14:15:26.558"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${url_saleLogin}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.559" level="INFO">Creating Session using : alias=sessionLogin, url=https://testz221.kiotviet.vn/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:26.559" endtime="20220228 14:15:26.559"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>sessionLogin</arg>
<arg>${enp_saleLogin}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_saleLogin}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:26.868" level="INFO">Post Request using : alias=sessionLogin, uri=/auth/salelogin, data={"UserName": "admin", "Password": "123456"}, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8'}, files=None, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:26.868" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'testz221.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:26.869" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:26.559" endtime="20220228 14:15:26.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.872" level="INFO">{'UserId': 103, 'UserName': 'admin', 'SessionId': 'EAq7hvru4O2bIYyq50Af', 'BearerToken': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiJmODRhNWM1MGFlMWI0YmM5ODBmNjM2ZTMzMjJiMDIzOSIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.SkzCQYajy0Ssl7Eg3gcLrXB2Lwc3SxRA7_G_5tQm7Cx06w4zESAYrp9YBvLF5hOixc7fBObWUDlSkKKlB3zGjJC58CMK7q-ekepYBGs0_AtEG_hOHdfOdLPcFEFfZ5KkJAutNsQL1snk56ZzpxRrsKFuSVGPvIcQg9ZXCwjCdr-Q4t3DbLCLrCufRc1RsqNxBG9a2nxHTp0yGhtOsVjIksbIe9Vgfb7CwtlcCkcuBwwX_bwxO5pF1TgIX6Hcb7-SC_kBzuRD_NQfuq0oyY62C3ARZAAX_mpnRmxNwU-nY30tx9-Luzt36uhhNaiWUn3sR12coxPaR49F072DWZVDiA', 'CurrentBranchId': 37, 'IsShowNotificationPopupDr': True, 'IsOTPVerifcationRequired': False}</msg>
<status status="PASS" starttime="20220228 14:15:26.872" endtime="20220228 14:15:26.872"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.BearerToken</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:26.893" level="INFO">${result} = ['eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia...</msg>
<status status="PASS" starttime="20220228 14:15:26.873" endtime="20220228 14:15:26.893"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:26.894" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:26.894" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:26.894" endtime="20220228 14:15:26.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:26.894" endtime="20220228 14:15:26.894"></status>
</kw>
<msg timestamp="20220228 14:15:26.894" level="INFO">${result} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3Z...</msg>
<status status="PASS" starttime="20220228 14:15:26.894" endtime="20220228 14:15:26.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:26.895" endtime="20220228 14:15:26.895"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.895" endtime="20220228 14:15:26.895"></status>
</kw>
<msg timestamp="20220228 14:15:26.895" level="INFO">${token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3Z...</msg>
<status status="PASS" starttime="20220228 14:15:26.872" endtime="20220228 14:15:26.895"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Bearer</arg>
<arg>${token}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20220228 14:15:26.895" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIi...</msg>
<status status="PASS" starttime="20220228 14:15:26.895" endtime="20220228 14:15:26.895"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.UserId</arg>
</arguments>
<assign>
<var>${user_login}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:26.913" level="INFO">${result} = [103]</msg>
<status status="PASS" starttime="20220228 14:15:26.896" endtime="20220228 14:15:26.913"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:26.913" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:26.913" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:26.913" endtime="20220228 14:15:26.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:26.913" endtime="20220228 14:15:26.914"></status>
</kw>
<msg timestamp="20220228 14:15:26.914" level="INFO">${result} = 103</msg>
<status status="PASS" starttime="20220228 14:15:26.913" endtime="20220228 14:15:26.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:26.914" endtime="20220228 14:15:26.914"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.914" endtime="20220228 14:15:26.914"></status>
</kw>
<msg timestamp="20220228 14:15:26.914" level="INFO">${user_login} = 103</msg>
<status status="PASS" starttime="20220228 14:15:26.895" endtime="20220228 14:15:26.914"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${user_login}</arg>
<arg>${user_login}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.915" level="INFO">${user_login} = 103</msg>
<status status="PASS" starttime="20220228 14:15:26.914" endtime="20220228 14:15:26.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${token}</arg>
<arg>${token}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.915" level="INFO">${token} = Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIi...</msg>
<status status="PASS" starttime="20220228 14:15:26.915" endtime="20220228 14:15:26.915"></status>
</kw>
<kw name="Random a String Letter" library="share_random">
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_str}</var>
</assign>
<msg timestamp="20220228 14:15:26.915" level="INFO">${random_str} = rWtT</msg>
<status status="PASS" starttime="20220228 14:15:26.915" endtime="20220228 14:15:26.915"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:26.915" endtime="20220228 14:15:26.916"></status>
</kw>
<msg timestamp="20220228 14:15:26.916" level="INFO">${random_str} = rWtT</msg>
<status status="PASS" starttime="20220228 14:15:26.915" endtime="20220228 14:15:26.916"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_str}</arg>
<arg>${random_str}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.916" level="INFO">${random_str} = rWtT</msg>
<status status="PASS" starttime="20220228 14:15:26.916" endtime="20220228 14:15:26.916"></status>
</kw>
<kw name="Random a Number" library="share_random">
<arguments>
<arg>8</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>${number}</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random_number}</var>
</assign>
<msg timestamp="20220228 14:15:26.916" level="INFO">${random_number} = 29551127</msg>
<status status="PASS" starttime="20220228 14:15:26.916" endtime="20220228 14:15:26.916"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:26.916" endtime="20220228 14:15:26.917"></status>
</kw>
<msg timestamp="20220228 14:15:26.917" level="INFO">${random_number} = 29551127</msg>
<status status="PASS" starttime="20220228 14:15:26.916" endtime="20220228 14:15:26.917"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${random_number}</arg>
<arg>${random_number}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.917" level="INFO">${random_number} = 29551127</msg>
<status status="PASS" starttime="20220228 14:15:26.917" endtime="20220228 14:15:26.917"></status>
</kw>
<kw name="Get Value From Json KV" library="share">
<arguments>
<arg>${resp.json()}</arg>
<arg>$.CurrentBranchId</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp_json}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20220228 14:15:26.934" level="INFO">${result} = [37]</msg>
<status status="PASS" starttime="20220228 14:15:26.917" endtime="20220228 14:15:26.935"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:26.935" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:26.935" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:26.935" endtime="20220228 14:15:26.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${length} != 0</arg>
<arg>Get From List</arg>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${result}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:26.935" endtime="20220228 14:15:26.936"></status>
</kw>
<msg timestamp="20220228 14:15:26.936" level="INFO">${result} = 37</msg>
<status status="PASS" starttime="20220228 14:15:26.935" endtime="20220228 14:15:26.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='None'</arg>
<arg>Return From Keyword</arg>
<arg>${0}</arg>
<arg>ELSE</arg>
<arg>Return From Keyword</arg>
<arg>${result}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:26.936" endtime="20220228 14:15:26.936"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.936" endtime="20220228 14:15:26.936"></status>
</kw>
<msg timestamp="20220228 14:15:26.936" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:26.917" endtime="20220228 14:15:26.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${branchId}</arg>
<arg>${branchId}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.937" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:26.937" endtime="20220228 14:15:26.937"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<assign>
<var>${is_run_retail}</var>
<var>${value}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${env}</arg>
<arg>zone</arg>
</arguments>
<status status="PASS" starttime="20220228 14:15:26.937" endtime="20220228 14:15:26.937"></status>
</kw>
<msg timestamp="20220228 14:15:26.937" level="INFO">${is_run_retail} = PASS</msg>
<msg timestamp="20220228 14:15:26.937" level="INFO">${value} = None</msg>
<status status="PASS" starttime="20220228 14:15:26.937" endtime="20220228 14:15:26.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${is_run_retail}' == 'PASS'</arg>
<arg>${true}</arg>
<arg>${false}</arg>
</arguments>
<assign>
<var>${run}</var>
</assign>
<msg timestamp="20220228 14:15:26.938" level="INFO">${run} = True</msg>
<status status="PASS" starttime="20220228 14:15:26.937" endtime="20220228 14:15:26.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${run}'=='True'</arg>
<arg>Log</arg>
<arg>RunRetail</arg>
<arg>ELSE</arg>
<arg>Run Fnb Or Booking</arg>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RunRetail</arg>
</arguments>
<msg timestamp="20220228 14:15:26.938" level="INFO">RunRetail</msg>
<status status="PASS" starttime="20220228 14:15:26.938" endtime="20220228 14:15:26.938"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.938" endtime="20220228 14:15:26.938"></status>
</kw>
<kw name="Set Header" library="enviroment">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${branchId}</var>
</assign>
<msg timestamp="20220228 14:15:26.939" level="INFO">${branchId} = 37</msg>
<status status="PASS" starttime="20220228 14:15:26.938" endtime="20220228 14:15:26.939"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>Content-Type=application/json;charset=utf-8</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20220228 14:15:26.939" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViI...</msg>
<status status="PASS" starttime="20220228 14:15:26.939" endtime="20220228 14:15:26.939"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>retailer=${retailer}</arg>
<arg>branchid=${branchId}</arg>
<arg>Authorization=${token}</arg>
</arguments>
<assign>
<var>${headers_not_contenType}</var>
</assign>
<msg timestamp="20220228 14:15:26.939" level="INFO">${headers_not_contenType} = {'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI...</msg>
<status status="PASS" starttime="20220228 14:15:26.939" endtime="20220228 14:15:26.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${header}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.940" level="INFO">${header} = {'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViI...</msg>
<status status="PASS" starttime="20220228 14:15:26.939" endtime="20220228 14:15:26.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${headers_not_contenType}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.940" level="INFO">${headers_not_contenType} = {'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI...</msg>
<status status="PASS" starttime="20220228 14:15:26.940" endtime="20220228 14:15:26.940"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${url}</arg>
<arg>${headers_not_contenType}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.940" level="INFO">Creating Session using : alias=session, url=https://api-timesheet.kiotviet.vn, headers={'retailer': 'testz221', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiJmODRhNWM1MGFlMWI0YmM5ODBmNjM2ZTMzMjJiMDIzOSIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.SkzCQYajy0Ssl7Eg3gcLrXB2Lwc3SxRA7_G_5tQm7Cx06w4zESAYrp9YBvLF5hOixc7fBObWUDlSkKKlB3zGjJC58CMK7q-ekepYBGs0_AtEG_hOHdfOdLPcFEFfZ5KkJAutNsQL1snk56ZzpxRrsKFuSVGPvIcQg9ZXCwjCdr-Q4t3DbLCLrCufRc1RsqNxBG9a2nxHTp0yGhtOsVjIksbIe9Vgfb7CwtlcCkcuBwwX_bwxO5pF1TgIX6Hcb7-SC_kBzuRD_NQfuq0oyY62C3ARZAAX_mpnRmxNwU-nY30tx9-Luzt36uhhNaiWUn3sR12coxPaR49F072DWZVDiA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:26.940" endtime="20220228 14:15:26.940"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>sessionMan</arg>
<arg>${url_man}</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20220228 14:15:26.941" level="INFO">Creating Session using : alias=sessionMan, url=https://api-man3.kiotviet.vn/api, headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiJmODRhNWM1MGFlMWI0YmM5ODBmNjM2ZTMzMjJiMDIzOSIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.SkzCQYajy0Ssl7Eg3gcLrXB2Lwc3SxRA7_G_5tQm7Cx06w4zESAYrp9YBvLF5hOixc7fBObWUDlSkKKlB3zGjJC58CMK7q-ekepYBGs0_AtEG_hOHdfOdLPcFEFfZ5KkJAutNsQL1snk56ZzpxRrsKFuSVGPvIcQg9ZXCwjCdr-Q4t3DbLCLrCufRc1RsqNxBG9a2nxHTp0yGhtOsVjIksbIe9Vgfb7CwtlcCkcuBwwX_bwxO5pF1TgIX6Hcb7-SC_kBzuRD_NQfuq0oyY62C3ARZAAX_mpnRmxNwU-nY30tx9-Luzt36uhhNaiWUn3sR12coxPaR49F072DWZVDiA'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220228 14:15:26.941" endtime="20220228 14:15:26.941"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session}</arg>
<arg>session</arg>
</arguments>
<msg timestamp="20220228 14:15:26.941" level="INFO">${session} = session</msg>
<status status="PASS" starttime="20220228 14:15:26.941" endtime="20220228 14:15:26.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${session_man}</arg>
<arg>sessionMan</arg>
</arguments>
<msg timestamp="20220228 14:15:26.942" level="INFO">${session_man} = sessionMan</msg>
<status status="PASS" starttime="20220228 14:15:26.942" endtime="20220228 14:15:26.942"></status>
</kw>
<kw name="Get Name Branch From Id" library="branch">
<arguments>
<arg>${branchId}</arg>
</arguments>
<assign>
<var>${name_branch}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session_man}</arg>
<arg>${enp_branch}/${branchId}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:27.072" level="INFO">Get Request using : alias=sessionMan, uri=/branchs/37, headers=None json=None</msg>
<msg timestamp="20220228 14:15:27.072" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-man3.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:27.072" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:26.943" endtime="20220228 14:15:27.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:27.073" level="INFO">{'Id': 37, 'Name': 'Chi nhánh trung tâm', 'Type': 0, 'Address': '221 Đội Cấn', 'Province': 'Hà Nội', 'District': 'Quận Ba Đình', 'ContactNumber': '0987654321', 'IsActive': True, 'RetailerId': 916276, 'CreatedBy': 0, 'LimitAccess': False, 'LocationName': 'Hà Nội - Quận Ba Đình', 'WardName': 'Phường Đội Cấn', 'isAcceptBookClosing': False, 'GmbStatus': 2, 'GmbLocationName': 'locations/13772733012578985132', 'GmbEmail': 'dung.pt@citigo.com.vn', 'Orders': [], 'Transfers1': [], 'DamageItems': [], 'SurchargeBranches': [], 'AdrApplications': [], 'Customers': [], 'Suppliers': [], 'ExpensesOtherBranches': [], 'OrderSuppliers': [], 'WarrantyBranchGroups': [], 'BranchTakingAddresses': [], 'Patients': [], 'Clinics': [], 'Doctors': [], 'DoctorQualifications': [], 'DoctorSpecialities': [], 'Prescriptions': [], 'PayslipPayments': [], 'PayslipPaymentAllocations': [], 'IdOld': 0, 'TotalUser': 0, 'CompareBranchName': 'Chi nhánh trung tâm', 'StatusGmbValue': 'Chờ xác thực', 'IsTimeSheetException': False, 'LocationId': 0, 'WardId': 0, 'SyncProductSearchEventId': 0}</msg>
<status status="PASS" starttime="20220228 14:15:27.072" endtime="20220228 14:15:27.073"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>$.Name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20220228 14:15:27.099" level="INFO">${name} = ['Chi nhánh trung tâm']</msg>
<status status="PASS" starttime="20220228 14:15:27.073" endtime="20220228 14:15:27.099"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${name}</arg>
</arguments>
<msg timestamp="20220228 14:15:27.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:27.099" endtime="20220228 14:15:27.100"></status>
</kw>
<msg timestamp="20220228 14:15:27.100" level="INFO">${name_branch} = ['Chi nhánh trung tâm']</msg>
<status status="PASS" starttime="20220228 14:15:26.942" endtime="20220228 14:15:27.100"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.938" endtime="20220228 14:15:27.100"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:26.551" endtime="20220228 14:15:27.100"></status>
</kw>
<test id="s1-s1-s1-t1" name="Delete payslip in paysheet">
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_paysheet}</arg>
<arg>$..data..id</arg>
</arguments>
<assign>
<var>${id_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:27.994" level="INFO">Get Request using : alias=session, uri=/paysheets, headers=None json=None</msg>
<msg timestamp="20220228 14:15:27.994" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:27.994" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:27.101" endtime="20220228 14:15:27.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:27.995" level="INFO">{'result': {'totalNetSalary': 65853444.0, 'totalPayment': 9499744.0, 'totalNeedPay': 56353700.0, 'totalRefund': 0, 'total': 19, 'data': [{'id': 50000000118907, 'code': 'BL000012', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-08-20T01:05:13.7470000', 'name': 'Bảng lương 09/08/2021 - 15/08/2021', 'salaryPeriod': 3, 'startTime': '2021-08-09T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 7, 'paysheetPeriodName': '09/08/2021 - 15/08/2021', 'endTime': '2021-08-15T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 2460000.0, 'totalPayment': 2460000.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-08-20T01:05:25.2210000', 'modifiedDate': '2021-08-20T01:05:32.5450000', 'version': 1, 'isDraft': False}, {'id': 60000000165220, 'code': 'BL000008', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-08-06T02:00:55.9830000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 6807756.0, 'totalPayment': 13000.0, 'totalNeedPay': 6794756.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-08-06T02:00:55.3870000', 'modifiedDate': '2021-08-06T02:00:55.4120000', 'version': 0, 'isDraft': False}, {'id': 60000000165227, 'code': 'BL000010', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-08-06T16:24:15.9230000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 6807756.0, 'totalPayment': 13000.0, 'totalNeedPay': 6794756.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-08-06T16:24:16.2380000', 'modifiedDate': '2021-08-06T16:24:16.2610000', 'version': 0, 'isDraft': False}, {'id': 60000000165317, 'code': 'BL000009', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-08-06T04:29:15.9030000', 'name': 'Bảng lương 01/08/2021 - 31/08/2021', 'salaryPeriod': 1, 'startTime': '2021-08-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/08/2021 - 31/08/2021', 'endTime': '2021-08-31T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-08-06T04:29:16.1550000', 'modifiedDate': '2021-08-06T16:24:11.9770000', 'version': 0, 'isDraft': False}, {'id': 60000000174804, 'code': 'BL000015', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-11T16:06:32.0700000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-11T16:06:33.0510000', 'modifiedDate': '2021-12-21T14:57:42.6630000', 'version': 0, 'isDraft': False}, {'id': 60000000174807, 'code': 'BL000016', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-11T16:57:24.8600000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-11T16:57:26.0970000', 'modifiedDate': '2021-12-11T16:58:43.7990000', 'version': 0, 'isDraft': False}, {'id': 60000000174909, 'code': 'BL000014', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-11T15:56:28.4600000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 2, 'totalNetSalary': 0.0, 'totalPayment': 13000.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-11T15:56:29.5670000', 'modifiedDate': '2021-12-11T15:56:29.6050000', 'version': 0, 'isDraft': False}, {'id': 90000001019206, 'code': 'BL000013', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-11T14:52:02.1100000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 0.0, 'totalPayment': 13000.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-11T14:52:03.6840000', 'modifiedDate': '2021-12-11T14:52:03.7690000', 'version': 0, 'isDraft': False}, {'id': 100000000005506, 'code': 'BL000005', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-15T11:53:27.9370000', 'name': 'Bảng lương 01/06/2021 - 30/06/2021', 'salaryPeriod': 1, 'startTime': '2021-06-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/06/2021 - 30/06/2021', 'endTime': '2021-06-30T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 12760000.0, 'totalPayment': 513000.0, 'totalNeedPay': 12247000.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T12:01:25.2530000', 'modifiedDate': '2021-07-15T12:01:25.3000000', 'version': 2, 'isDraft': False}, {'id': 150000000104224, 'code': 'BL000004', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:52:47.3000000', 'name': 'Bảng lương 12/07/2021 - 18/07/2021', 'salaryPeriod': 3, 'startTime': '2021-07-12T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 7, 'paysheetPeriodName': '12/07/2021 - 18/07/2021', 'endTime': '2021-07-18T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 1714286.0, 'totalPayment': 800000.0, 'totalNeedPay': 914286.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-14T17:52:46.3530000', 'modifiedDate': '2021-07-15T11:59:17.0790000', 'version': 4, 'isDraft': False}, {'id': 150000000104327, 'code': 'BL000002', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:51:41.1000000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T11:53:19.7550000', 'modifiedDate': '2021-07-15T11:59:17.0790000', 'version': 3, 'isDraft': False}, {'id': 160000000215915, 'code': 'BL000001', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:49:51.6970000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 0, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 0, 'totalNetSalary': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-14T17:50:24.7310000', 'modifiedDate': '2021-07-14T17:51:29.6230000', 'version': 1, 'isDraft': False}, {'id': 160000000215917, 'code': 'BL000003', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:52:35.0500000', 'name': 'Bảng lương 05/07/2021 - 11/07/2021', 'salaryPeriod': 3, 'startTime': '2021-07-05T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 7, 'paysheetPeriodName': '05/07/2021 - 11/07/2021', 'endTime': '2021-07-11T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 2870000.0, 'totalPayment': 500000.0, 'totalNeedPay': 2370000.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T11:56:29.8070000', 'modifiedDate': '2021-07-15T11:59:17.0790000', 'version': 3, 'isDraft': False}, {'id': 170000000036305, 'code': 'BL000006', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-15T11:55:57.3800000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 6584497.0, 'totalPayment': 13000.0, 'totalNeedPay': 6571497.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T12:01:32.9190000', 'modifiedDate': '2021-07-15T12:01:32.9450000', 'version': 1, 'isDraft': False}, {'id': 180000000011428, 'code': 'BL000007', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-16T03:58:18.2530000', 'name': 'Bảng lương 01/07/2021 - 31/07/2021', 'salaryPeriod': 1, 'startTime': '2021-07-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/07/2021 - 31/07/2021', 'endTime': '2021-07-31T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 6807756.0, 'totalPayment': 13000.0, 'totalNeedPay': 6794756.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-16T03:58:18.5540000', 'modifiedDate': '2021-07-16T03:58:18.5820000', 'version': 0, 'isDraft': False}, {'id': 180000000116501, 'code': 'BL000017', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-21T14:42:31.2770000', 'name': 'Bảng lương 01/12/2021 - 31/12/2021', 'salaryPeriod': 1, 'startTime': '2021-12-01T00:00:00.0000000', 'paysheetStatus': 2, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/12/2021 - 31/12/2021', 'endTime': '2021-12-31T23:59:59.0000000', 'employeeTotal': 3, 'totalNetSalary': 6891823.0, 'totalPayment': 0.0, 'totalNeedPay': 6891823.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-21T14:45:14.7940000', 'modifiedDate': '2021-12-21T14:57:29.3850000', 'version': 0, 'isDraft': False}, {'id': 180000000116502, 'code': 'BL000018', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-21T14:45:03.6300000', 'name': 'Bảng lương 01/11/2021 - 30/11/2021', 'salaryPeriod': 1, 'startTime': '2021-11-01T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [], 'workingDayNumber': 30, 'paysheetPeriodName': '01/11/2021 - 30/11/2021', 'endTime': '2021-11-30T23:59:59.0000000', 'employeeTotal': 3, 'totalNetSalary': 0.0, 'totalPayment': 13000.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-21T14:45:05.1830000', 'modifiedDate': '2021-12-21T14:45:05.2230000', 'version': 0, 'isDraft': False}, {'id': 180000000116701, 'code': 'BL000019', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-12-21T17:05:44.7900000', 'name': 'Bảng lương 01/12/2021 - 31/12/2021', 'salaryPeriod': 1, 'startTime': '2021-12-01T00:00:00.0000000', 'paysheetStatus': 2, 'note': '', 'payslips': [], 'workingDayNumber': 23, 'paysheetPeriodName': '01/12/2021 - 31/12/2021', 'endTime': '2021-12-31T23:59:59.0000000', 'employeeTotal': 4, 'totalNetSalary': 5922826.0, 'totalPayment': 0.0, 'totalNeedPay': 5922826.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-12-21T17:05:45.6660000', 'modifiedDate': '2021-12-21T17:08:15.5820000', 'version': 0, 'isDraft': False}, {'id': 220000000001107, 'code': 'BL000011', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-08-20T01:05:04.5430000', 'name': 'Bảng lương 01/08/2021 - 31/08/2021', 'salaryPeriod': 1, 'startTime': '2021-08-01T00:00:00.0000000', 'paysheetStatus': 2, 'note': '', 'payslips': [], 'workingDayNumber': 31, 'paysheetPeriodName': '01/08/2021 - 31/08/2021', 'endTime': '2021-08-31T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 6226744.0, 'totalPayment': 6226744.0, 'totalNeedPay': 0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-08-20T01:05:16.8370000', 'modifiedDate': '2021-08-20T01:06:03.6590000', 'version': 0, 'isDraft': False}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:27.994" endtime="20220228 14:15:27.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:27.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:27.995" endtime="20220228 14:15:27.996"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:27.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:27.996" endtime="20220228 14:15:27.996"></status>
</kw>
<msg timestamp="20220228 14:15:27.996" level="INFO">${resp} = {'result': {'totalNetSalary': 65853444.0, 'totalPayment': 9499744.0, 'totalNeedPay': 56353700.0, 'totalRefund': 0, 'total': 19, 'data': [{'id': 50000000118907, 'code': 'BL000012', 'tenantId': 916276, ...</msg>
<status status="PASS" starttime="20220228 14:15:27.101" endtime="20220228 14:15:27.996"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:28.025" level="INFO">${list} = [50000000118907, 60000000165220, 60000000165227, 60000000165317, 60000000174804, 60000000174807, 60000000174909, 90000001019206, 100000000005506, 150000000104224, 150000000104327, 160000000215915, 160...</msg>
<status status="PASS" starttime="20220228 14:15:27.996" endtime="20220228 14:15:28.025"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:28.028" level="INFO">${value} = 160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:28.025" endtime="20220228 14:15:28.028"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.028" endtime="20220228 14:15:28.028"></status>
</kw>
<msg timestamp="20220228 14:15:28.029" level="INFO">${id_paysheet} = 160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:27.101" endtime="20220228 14:15:28.029"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_paysheet}/${id_paysheet}</arg>
<arg>$.result.code</arg>
</arguments>
<assign>
<var>${code_paysheet}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:28.302" level="INFO">Get Request using : alias=session, uri=/paysheets/160000000215917, headers=None json=None</msg>
<msg timestamp="20220228 14:15:28.302" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:28.302" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:28.029" endtime="20220228 14:15:28.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.303" level="INFO">{'result': {'id': 160000000215917, 'code': 'BL000003', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:52:35.0500000', 'name': 'Bảng lương 05/07/2021 - 11/07/2021', 'salaryPeriod': 3, 'startTime': '2021-07-05T00:00:00.0000000', 'paysheetStatus': 1, 'note': '', 'payslips': [{'id': 80000000144930, 'code': 'PL000003', 'paysheetId': 160000000215917, 'tenantId': 916276, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 40000000110209, 'mainSalary': 2800000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 70000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 2870000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 5.0, 'calculatedDefault': 5.0, 'mainSalaryByShiftParamDetails': [{'value': 1.0, 'calculatedValue': 1.0, 'type': 6}, {'value': 1.0, 'calculatedValue': 1.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 2}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 180000000008701, 'value': 10000.0, 'calculatedValue': 10000.0, 'numberWorkingDay': 7, 'type': 1, 'standardWorkingDayNumber': 7, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': [{'deductionId': 180000000009101, 'value': 0.0, 'calculatedValue': 0.0, 'type': 1}]}, 'mainSalaryRuleValue': {'type': 2, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 400000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 180000000008701, 'value': 10000.0, 'rank': 0, 'type': 1, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': [{'deductionId': 180000000009101, 'value': 12000.0, 'rank': 0, 'type': 1, 'deductionRuleId': 1, 'deductionTypeId': 2, 'blockTypeTimeValue': 1, 'blockTypeMinuteValue': 1}]}, 'netSalary': 2870000.0, 'grossSalary': 2870000.0, 'payslipClockings': [{'id': 84487, 'payslipId': 80000000144930, 'clockingId': 50000002334049, 'checkInDate': '2021-07-05T14:00:00.0000000', 'checkOutDate': '2021-07-05T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-05T14:00:00.0000000', 'endTime': '2021-07-05T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84488, 'payslipId': 80000000144930, 'clockingId': 50000002334050, 'checkInDate': '2021-07-06T14:00:00.0000000', 'checkOutDate': '2021-07-06T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-06T14:00:00.0000000', 'endTime': '2021-07-06T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84489, 'payslipId': 80000000144930, 'clockingId': 50000002334051, 'checkInDate': '2021-07-07T14:00:00.0000000', 'checkOutDate': '2021-07-07T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-07T14:00:00.0000000', 'endTime': '2021-07-07T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84490, 'payslipId': 80000000144930, 'clockingId': 50000002334052, 'checkInDate': '2021-07-08T14:00:00.0000000', 'checkOutDate': '2021-07-08T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-08T14:00:00.0000000', 'endTime': '2021-07-08T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84491, 'payslipId': 80000000144930, 'clockingId': 50000002334053, 'checkInDate': '2021-07-09T14:00:00.0000000', 'checkOutDate': '2021-07-09T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-09T14:00:00.0000000', 'endTime': '2021-07-09T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84492, 'payslipId': 80000000144930, 'clockingId': 50000002334054, 'checkInDate': '2021-07-10T14:00:00.0000000', 'checkOutDate': '2021-07-10T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-10T14:00:00.0000000', 'endTime': '2021-07-10T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84493, 'payslipId': 80000000144930, 'clockingId': 50000002334055, 'checkInDate': '2021-07-11T14:00:00.0000000', 'checkOutDate': '2021-07-11T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-11T14:00:00.0000000', 'endTime': '2021-07-11T18:00:00.0000000', 'shiftId': 40000000108106}], 'payslipDetails': [{'id': 61940, 'payslipId': 80000000144930, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":2,"MainSalaryValueDetails":[{"ShiftId":0,"Default":400000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":5.0,"CalculatedDefault":5.0,"MainSalaryByShiftParamDetails":[{"Value":1.0,"CalculatedValue":1.0,"Type":6},{"Value":1.0,"CalculatedValue":1.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":2}]}'}, {'id': 61941, 'payslipId': 80000000144930, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":180000000008701,"Name":null,"Value":10000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":180000000008701,"Value":10000.0,"ValueRatio":null,"Name":null,"CalculatedValue":10000.0,"CalculatedValueRatio":null,"NumberWorkingDay":7,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":7,"IsChecked":true}]}'}, {'id': 61942, 'payslipId': 80000000144930, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[{"DeductionId":180000000009101,"Name":null,"Value":12000.0,"ValueRatio":null,"Rank":0,"Type":1,"DeductionRuleId":1,"DeductionTypeId":2,"BlockTypeTimeValue":1,"BlockTypeMinuteValue":1}]}', 'ruleParam': '{"Deductions":[{"DeductionId":180000000009101,"Value":0.0,"ValueRatio":null,"Name":null,"CalculatedValue":0.0,"CalculatedValueRatio":null,"SelectedItem":null,"Type":1}]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-07-14T17:52:33.9580000', 'payslipCreatedBy': 103, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}], 'workingDayNumber': 7, 'paysheetPeriodName': '05/07/2021 - 11/07/2021', 'endTime': '2021-07-11T23:59:59.0000000', 'employeeTotal': 1, 'totalNetSalary': 2870000.0, 'totalPayment': 0.0, 'totalNeedPay': 2870000.0, 'creatorBy': 103, 'isChanged': False, 'timeOfStandardWorkingDay': 8, 'paysheetCreatedDate': '2021-07-15T11:56:29.8070000', 'modifiedDate': '2021-07-15T11:59:17.0790000', 'version': 3, 'isDraft': False}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:28.302" endtime="20220228 14:15:28.303"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:28.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:28.303" endtime="20220228 14:15:28.303"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.303" endtime="20220228 14:15:28.303"></status>
</kw>
<msg timestamp="20220228 14:15:28.304" level="INFO">${resp} = {'result': {'id': 160000000215917, 'code': 'BL000003', 'tenantId': 916276, 'branchId': 37, 'isDeleted': False, 'createdBy': 103, 'createdDate': '2021-07-14T17:52:35.0500000', 'name': 'Bảng lương 05/07...</msg>
<status status="PASS" starttime="20220228 14:15:28.029" endtime="20220228 14:15:28.304"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:28.328" level="INFO">${list} = ['BL000003']</msg>
<status status="PASS" starttime="20220228 14:15:28.304" endtime="20220228 14:15:28.328"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:28.329" level="INFO">${value} = BL000003</msg>
<status status="PASS" starttime="20220228 14:15:28.329" endtime="20220228 14:15:28.329"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.329" endtime="20220228 14:15:28.330"></status>
</kw>
<msg timestamp="20220228 14:15:28.330" level="INFO">${code_paysheet} = BL000003</msg>
<status status="PASS" starttime="20220228 14:15:28.029" endtime="20220228 14:15:28.330"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_paysheet}</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:28.330" level="INFO">${list_format} = [160000000215917]</msg>
<status status="PASS" starttime="20220228 14:15:28.330" endtime="20220228 14:15:28.330"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${enp_payslip}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${enp_payslip}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:28.330" level="INFO">Length is 1</msg>
<msg timestamp="20220228 14:15:28.331" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20220228 14:15:28.330" endtime="20220228 14:15:28.331"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.331" level="INFO">${value_temp} = 160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:28.331" endtime="20220228 14:15:28.331"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.331" level="INFO">${value_temp} = 160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:28.331" endtime="20220228 14:15:28.331"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:28.331" level="INFO">${data_format} = /payslip/getPayslipsByPaysheetId?PaysheetId=160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:28.331" endtime="20220228 14:15:28.331"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:28.331" endtime="20220228 14:15:28.332"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:28.331" endtime="20220228 14:15:28.332"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.332" endtime="20220228 14:15:28.332"></status>
</kw>
<msg timestamp="20220228 14:15:28.332" level="INFO">${enp_payslip} = /payslip/getPayslipsByPaysheetId?PaysheetId=160000000215917</msg>
<status status="PASS" starttime="20220228 14:15:28.330" endtime="20220228 14:15:28.332"></status>
</kw>
<kw name="Get Value In List KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_payslip}</arg>
<arg>$.result.data[?(@.id)].id</arg>
</arguments>
<assign>
<var>${id_payslip}</var>
</assign>
<kw name="Get Request From KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:28.698" level="INFO">Get Request using : alias=session, uri=/payslip/getPayslipsByPaysheetId?PaysheetId=160000000215917, headers=None json=None</msg>
<msg timestamp="20220228 14:15:28.698" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:28.698" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:28.332" endtime="20220228 14:15:28.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.698" level="INFO">{'result': {'totalMainSalary': 2800000.0, 'totalCommissionSalary': 0.0, 'totalOvertimeSalary': 0.0, 'totalAllowance': 70000.0, 'totalBonus': 0.0, 'totalDeduction': 0.0, 'totalNetSalary': 2870000.0, 'totalPayment': 500000.0, 'totalRefund': 0, 'totalNeedPay': 2370000.0, 'total': 1, 'data': [{'id': 80000000144930, 'code': 'PL000003', 'paysheetId': 160000000215917, 'tenantId': 916276, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 40000000110209, 'employee': {'id': 40000000110209, 'code': 'NV000002', 'name': 'nv app', 'isActive': True, 'identityNumber': '', 'mobilePhone': '', 'email': '', 'facebook': '', 'address': '', 'locationName': '', 'wardName': '', 'note': '', 'tenantId': 916276, 'branchId': 37, 'createdBy': 103, 'createdDate': '2021-07-14T17:28:06.0600000', 'modifiedBy': 103, 'modifiedDate': '2021-07-15T11:59:17.0210000', 'isDeleted': False, 'profilePictures': [], 'clockings': [], 'departmentName': '', 'jobTitleName': '', 'isNotUpdateUserId': False, 'debt': 0, 'employeeBranches': [{'id': 40000000236616, 'tenantId': 916276, 'branchId': 37, 'employeeId': 40000000110209}]}, 'mainSalary': 2800000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 70000.0, 'deduction': 0.0, 'totalPayment': 500000.0, 'totalNeedPay': 2370000.0, 'bonus': 0.0, 'mainSalaryRuleParam': {'mainSalaryShifts': [{'shiftId': 0, 'salary': 0.0, 'calculatedSalary': 0.0, 'default': 5.0, 'calculatedDefault': 5.0, 'mainSalaryByShiftParamDetails': [{'value': 1.0, 'calculatedValue': 1.0, 'type': 6}, {'value': 1.0, 'calculatedValue': 1.0, 'type': 0}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 8}, {'value': 0.0, 'calculatedValue': 0.0, 'type': 9}], 'type': 2}]}, 'allowanceRuleParam': {'allowances': [{'allowanceId': 180000000008701, 'value': 10000.0, 'calculatedValue': 10000.0, 'numberWorkingDay': 7, 'type': 1, 'standardWorkingDayNumber': 7, 'isChecked': True}]}, 'deductionRuleParam': {'deductions': [{'deductionId': 180000000009101, 'value': 0.0, 'calculatedValue': 0.0, 'type': 1}]}, 'mainSalaryRuleValue': {'type': 2, 'mainSalaryValueDetails': [{'shiftId': 0, 'default': 400000.0, 'mainSalaryHolidays': [{'moneyTypes': 2, 'type': 6, 'value': 100.0, 'isApply': False, 'sort': 0}, {'moneyTypes': 2, 'type': 0, 'value': 100.0, 'isApply': False, 'sort': 1}, {'moneyTypes': 2, 'type': 8, 'value': 100.0, 'isApply': True, 'sort': 2}, {'moneyTypes': 2, 'type': 9, 'value': 100.0, 'isApply': True, 'sort': 3}], 'rank': 0}]}, 'allowanceRuleValue': {'allowanceRuleValueDetails': [{'allowanceId': 180000000008701, 'value': 10000.0, 'rank': 0, 'type': 1, 'isChecked': True}]}, 'deductionRuleValue': {'deductionRuleValueDetails': [{'deductionId': 180000000009101, 'value': 12000.0, 'rank': 0, 'type': 1, 'deductionRuleId': 1, 'deductionTypeId': 2, 'blockTypeTimeValue': 1, 'blockTypeMinuteValue': 1}]}, 'netSalary': 2870000.0, 'grossSalary': 2870000.0, 'payslipClockings': [{'id': 84487, 'payslipId': 80000000144930, 'clockingId': 50000002334049, 'checkInDate': '2021-07-05T14:00:00.0000000', 'checkOutDate': '2021-07-05T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-05T14:00:00.0000000', 'endTime': '2021-07-05T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84488, 'payslipId': 80000000144930, 'clockingId': 50000002334050, 'checkInDate': '2021-07-06T14:00:00.0000000', 'checkOutDate': '2021-07-06T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-06T14:00:00.0000000', 'endTime': '2021-07-06T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84489, 'payslipId': 80000000144930, 'clockingId': 50000002334051, 'checkInDate': '2021-07-07T14:00:00.0000000', 'checkOutDate': '2021-07-07T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-07T14:00:00.0000000', 'endTime': '2021-07-07T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84490, 'payslipId': 80000000144930, 'clockingId': 50000002334052, 'checkInDate': '2021-07-08T14:00:00.0000000', 'checkOutDate': '2021-07-08T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-08T14:00:00.0000000', 'endTime': '2021-07-08T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84491, 'payslipId': 80000000144930, 'clockingId': 50000002334053, 'checkInDate': '2021-07-09T14:00:00.0000000', 'checkOutDate': '2021-07-09T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-09T14:00:00.0000000', 'endTime': '2021-07-09T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84492, 'payslipId': 80000000144930, 'clockingId': 50000002334054, 'checkInDate': '2021-07-10T14:00:00.0000000', 'checkOutDate': '2021-07-10T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-10T14:00:00.0000000', 'endTime': '2021-07-10T18:00:00.0000000', 'shiftId': 40000000108106}, {'id': 84493, 'payslipId': 80000000144930, 'clockingId': 50000002334055, 'checkInDate': '2021-07-11T14:00:00.0000000', 'checkOutDate': '2021-07-11T18:00:00.0000000', 'timeIsLate': 0, 'overTimeBeforeShiftWork': 0, 'timeIsLeaveWorkEarly': 0, 'overTimeAfterShiftWork': 0, 'clockingStatus': 3, 'startTime': '2021-07-11T14:00:00.0000000', 'endTime': '2021-07-11T18:00:00.0000000', 'shiftId': 40000000108106}], 'payslipDetails': [{'id': 61940, 'payslipId': 80000000144930, 'ruleType': 'MainSalaryRule', 'ruleValue': '{"Type":2,"MainSalaryValueDetails":[{"ShiftId":0,"Default":400000.0,"MainSalaryHolidays":[{"MoneyTypes":2,"Type":6,"Value":100.0,"IsApply":false,"Sort":0},{"MoneyTypes":2,"Type":0,"Value":100.0,"IsApply":false,"Sort":1},{"MoneyTypes":2,"Type":8,"Value":100.0,"IsApply":true,"Sort":2},{"MoneyTypes":2,"Type":9,"Value":100.0,"IsApply":true,"Sort":3}],"Rank":0}]}', 'ruleParam': '{"MainSalaryShifts":[{"ShiftId":0,"Salary":0.0,"CalculatedSalary":0.0,"Default":5.0,"CalculatedDefault":5.0,"MainSalaryByShiftParamDetails":[{"Value":1.0,"CalculatedValue":1.0,"Type":6},{"Value":1.0,"CalculatedValue":1.0,"Type":0},{"Value":0.0,"CalculatedValue":0.0,"Type":8},{"Value":0.0,"CalculatedValue":0.0,"Type":9}],"Type":2}]}'}, {'id': 61941, 'payslipId': 80000000144930, 'ruleType': 'AllowanceRule', 'ruleValue': '{"AllowanceRuleValueDetails":[{"AllowanceId":180000000008701,"Name":null,"Value":10000.0,"ValueRatio":null,"Rank":0,"Type":1,"IsChecked":true}]}', 'ruleParam': '{"Allowances":[{"AllowanceId":180000000008701,"Value":10000.0,"ValueRatio":null,"Name":null,"CalculatedValue":10000.0,"CalculatedValueRatio":null,"NumberWorkingDay":7,"SelectedItem":null,"Type":1,"StandardWorkingDayNumber":7,"IsChecked":true}]}'}, {'id': 61942, 'payslipId': 80000000144930, 'ruleType': 'DeductionRule', 'ruleValue': '{"DeductionRuleValueDetails":[{"DeductionId":180000000009101,"Name":null,"Value":12000.0,"ValueRatio":null,"Rank":0,"Type":1,"DeductionRuleId":1,"DeductionTypeId":2,"BlockTypeTimeValue":1,"BlockTypeMinuteValue":1}]}', 'ruleParam': '{"Deductions":[{"DeductionId":180000000009101,"Value":0.0,"ValueRatio":null,"Name":null,"CalculatedValue":0.0,"CalculatedValueRatio":null,"SelectedItem":null,"Type":1}]}'}], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-07-14T17:52:33.9580000', 'payslipCreatedBy': 103, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}]}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:28.698" endtime="20220228 14:15:28.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20220228 14:15:28.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:28.699" endtime="20220228 14:15:28.699"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.699" endtime="20220228 14:15:28.699"></status>
</kw>
<msg timestamp="20220228 14:15:28.700" level="INFO">${resp} = {'result': {'totalMainSalary': 2800000.0, 'totalCommissionSalary': 0.0, 'totalOvertimeSalary': 0.0, 'totalAllowance': 70000.0, 'totalBonus': 0.0, 'totalDeduction': 0.0, 'totalNetSalary': 2870000.0, 't...</msg>
<status status="PASS" starttime="20220228 14:15:28.332" endtime="20220228 14:15:28.700"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${resp}</arg>
<arg>${json_path}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20220228 14:15:28.718" level="INFO">${list} = [80000000144930]</msg>
<status status="PASS" starttime="20220228 14:15:28.700" endtime="20220228 14:15:28.718"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.choice($list)</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20220228 14:15:28.718" level="INFO">${value} = 80000000144930</msg>
<status status="PASS" starttime="20220228 14:15:28.718" endtime="20220228 14:15:28.718"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.718" endtime="20220228 14:15:28.719"></status>
</kw>
<msg timestamp="20220228 14:15:28.719" level="INFO">${id_payslip} = 80000000144930</msg>
<status status="PASS" starttime="20220228 14:15:28.332" endtime="20220228 14:15:28.719"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${id_payslip}</arg>
<arg>false</arg>
</arguments>
<assign>
<var>${list_format}</var>
</assign>
<msg timestamp="20220228 14:15:28.719" level="INFO">${list_format} = [80000000144930, 'false']</msg>
<status status="PASS" starttime="20220228 14:15:28.719" endtime="20220228 14:15:28.719"></status>
</kw>
<kw name="Format String Use [D0] [D1] [D2]" library="share">
<arguments>
<arg>${data_cancel_payslip}</arg>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${data_cancel_payslip}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list_format}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20220228 14:15:28.720" level="INFO">Length is 2</msg>
<msg timestamp="20220228 14:15:28.720" level="INFO">${length} = 2</msg>
<status status="PASS" starttime="20220228 14:15:28.720" endtime="20220228 14:15:28.720"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.720" level="INFO">${value_temp} = 80000000144930</msg>
<status status="PASS" starttime="20220228 14:15:28.720" endtime="20220228 14:15:28.720"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.721" level="INFO">${value_temp} = 80000000144930</msg>
<status status="PASS" starttime="20220228 14:15:28.720" endtime="20220228 14:15:28.721"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:28.721" level="INFO">${data_format} = {"Id":80000000144930,"isCheckPayslipPayment":true,"isCancelPayment":[D1]}</msg>
<status status="PASS" starttime="20220228 14:15:28.721" endtime="20220228 14:15:28.721"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:28.720" endtime="20220228 14:15:28.721"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_format}</arg>
<arg>${i}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.721" level="INFO">${value_temp} = false</msg>
<status status="PASS" starttime="20220228 14:15:28.721" endtime="20220228 14:15:28.721"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${value_temp}</var>
</assign>
<msg timestamp="20220228 14:15:28.722" level="INFO">${value_temp} = false</msg>
<status status="PASS" starttime="20220228 14:15:28.721" endtime="20220228 14:15:28.722"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${data_format}</arg>
<arg>[D${i}]</arg>
<arg>${value_temp}</arg>
</arguments>
<assign>
<var>${data_format}</var>
</assign>
<msg timestamp="20220228 14:15:28.722" level="INFO">${data_format} = {"Id":80000000144930,"isCheckPayslipPayment":true,"isCancelPayment":false}</msg>
<status status="PASS" starttime="20220228 14:15:28.722" endtime="20220228 14:15:28.722"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:28.721" endtime="20220228 14:15:28.722"></status>
</kw>
<status status="PASS" starttime="20220228 14:15:28.720" endtime="20220228 14:15:28.722"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data_format}</arg>
</arguments>
<msg timestamp="20220228 14:15:28.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:28.722" endtime="20220228 14:15:28.722"></status>
</kw>
<msg timestamp="20220228 14:15:28.722" level="INFO">${data_cancel_payslip} = {"Id":80000000144930,"isCheckPayslipPayment":true,"isCancelPayment":false}</msg>
<status status="PASS" starttime="20220228 14:15:28.719" endtime="20220228 14:15:28.722"></status>
</kw>
<kw name="Update Request Json KV" library="share">
<arguments>
<arg>${session}</arg>
<arg>${enp_cancel_payslip}</arg>
<arg>${data_cancel_payslip}</arg>
<arg>200</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>${endpoint}</arg>
<arg>headers=${header}</arg>
<arg>data=${data_func}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20220228 14:15:30.060" level="INFO">Put Request using : alias=session, uri=/payslip/cancel-payslip, data={"Id":80000000144930,"isCheckPayslipPayment":true,"isCancelPayment":false},                     headers={'retailer': 'testz221', 'Content-Type': 'application/json;charset=utf-8', 'branchid': '37', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IndYYSJ9.eyJpc3MiOiJrdnNzand0Iiwic3ViIjoxMDMsImlhdCI6MTY0NjAzMjUyNywiZXhwIjoxNjQ4NDUxNzI3LCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiIsInJvbGVzIjpbIlVzZXIiXSwia3ZzZXMiOiJmODRhNWM1MGFlMWI0YmM5ODBmNjM2ZTMzMjJiMDIzOSIsImt2dWlkIjoxMDMsImt2dXR5cGUiOjAsImt2dWxpbWl0IjoiRmFsc2UiLCJrdnVhZG1pbiI6IlRydWUiLCJrdnVhY3QiOiJUcnVlIiwia3Z1bGltaXR0cmFucyI6IkZhbHNlIiwia3Z1c2hvd3N1bSI6IlRydWUiLCJrdmJpZCI6MzcsImt2cmluZGlkIjo3LCJrdnJjb2RlIjoidGVzdHoyMjEiLCJrdnJpZCI6OTE2Mjc2LCJrdnVyaWQiOjkxNjI3Niwia3ZyZ2lkIjoyMSwicGVybXMiOiIifQ.SkzCQYajy0Ssl7Eg3gcLrXB2Lwc3SxRA7_G_5tQm7Cx06w4zESAYrp9YBvLF5hOixc7fBObWUDlSkKKlB3zGjJC58CMK7q-ekepYBGs0_AtEG_hOHdfOdLPcFEFfZ5KkJAutNsQL1snk56ZzpxRrsKFuSVGPvIcQg9ZXCwjCdr-Q4t3DbLCLrCufRc1RsqNxBG9a2nxHTp0yGhtOsVjIksbIe9Vgfb7CwtlcCkcuBwwX_bwxO5pF1TgIX6Hcb7-SC_kBzuRD_NQfuq0oyY62C3ARZAAX_mpnRmxNwU-nY30tx9-Luzt36uhhNaiWUn3sR12coxPaR49F072DWZVDiA'}, allow_redirects=True </msg>
<msg timestamp="20220228 14:15:30.061" level="INFO">C:\Users\Tester-F1\AppData\Local\Programs\Python\Python38\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api-timesheet.kiotviet.vn'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220228 14:15:30.061" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220228 14:15:28.723" endtime="20220228 14:15:30.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:30.061" level="INFO">{'result': {'id': 80000000144930, 'code': 'PL000003', 'paysheetId': 160000000215917, 'tenantId': 916276, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 40000000110209, 'mainSalary': 2800000.0, 'commissionSalary': 0.0, 'overtimeSalary': 0.0, 'allowance': 70000.0, 'deduction': 0.0, 'totalPayment': 0.0, 'totalNeedPay': 2870000.0, 'bonus': 0.0, 'netSalary': 2870000.0, 'grossSalary': 2870000.0, 'payslipClockings': [], 'payslipDetails': [], 'payslipClockingPenalizes': [], 'payslipPenalizes': [], 'payslipCreatedDate': '2021-07-14T17:52:33.9580000', 'payslipCreatedBy': 103, 'authorisedAbsence': 0, 'unauthorisedAbsence': 0}, 'message': ''}</msg>
<status status="PASS" starttime="20220228 14:15:30.061" endtime="20220228 14:15:30.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${expected_status_code}</arg>
</arguments>
<msg timestamp="20220228 14:15:30.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220228 14:15:30.061" endtime="20220228 14:15:30.061"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20220228 14:15:30.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220228 14:15:30.061" endtime="20220228 14:15:30.062"></status>
</kw>
<msg timestamp="20220228 14:15:30.062" level="INFO">${resp} = {'result': {'id': 80000000144930, 'code': 'PL000003', 'paysheetId': 160000000215917, 'tenantId': 916276, 'isDeleted': False, 'payslipStatus': 1, 'employeeId': 40000000110209, 'mainSalary': 2800000.0, ...</msg>
<status status="PASS" starttime="20220228 14:15:28.722" endtime="20220228 14:15:30.062"></status>
</kw>
<doc>Xóa phiếu lương trong bảng lương nhưng không hủy phiếu thanh toán của phiếu lương</doc>
<tags>
<tag>all</tag>
<tag>payslip</tag>
</tags>
<status status="PASS" starttime="20220228 14:15:27.100" endtime="20220228 14:15:30.062" critical="yes"></status>
</test>
<status status="PASS" starttime="20220228 14:15:26.292" endtime="20220228 14:15:30.062"></status>
</suite>
<status status="PASS" starttime="20220228 14:15:26.291" endtime="20220228 14:15:30.065"></status>
</suite>
<status status="PASS" starttime="20220228 14:15:26.261" endtime="20220228 14:15:30.066"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">all</stat>
<stat pass="1" fail="0">payslip</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="1" fail="0" id="s1-s1" name="BangTinhLuong">Testsuites.BangTinhLuong</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Payslip">Testsuites.BangTinhLuong.Payslip</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
